# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2024/04
# conda reference module
easyblock = 'Conda'

name = 'warp'
local_ver = '2.0.0dev0'
local_commit = 'fc22b43f5cd826a0760a1d95dc174ab67804d93b'
local_commit_date = '20240501'
version = '%s.%s' % (local_ver, local_commit_date)
versionsuffix = '-conda'

homepage = 'https://github.com/warpem/warp'
description = """Warp is a set of tools for cryo-EM and cryo-ET data processing including, among 
other tools: Warp, M, WarpTools, MTools, MCore, and Noise2Map."""

toolchain = SYSTEM

source_urls = ['https://github.com/warpem/warp/archive/']
sources = [{
    'filename': '%s.%s.tar.gz' % (name, version),
    'download_filename': '%s.tar.gz' % local_commit
}]
checksums = ['9418076bb650388ec960d17a96213a2ab87c5cac44077aa3974fdb683029f0e9']

extract_sources = True

local_src = '%s-%s' % (name, local_commit)
start_dir = '%s' % local_src

environment_file = 'warp_build.yml'

dependencies = [
    ('Miniconda3', '22.11.1-1', '', SYSTEM)
]

local_activate = 'eval "$(conda shell.bash hook) && conda activate %(installdir)s"'
postinstallcmds = [
    '%s && cd %%(builddir)s/%s && ./build-native-unix.sh' % (local_activate, local_src),
    '%s && cd %%(builddir)s/%s && ./publish-unix.sh' % (local_activate, local_src),
    'cp %%(builddir)s/%s/Release %%(installdir)s -rpP' % local_src
]

sanity_check_paths = {
    'files': [],
    'dirs': ['bin'],
}

sanity_check_commands = [
    'WarpTools --help'
]

modextrapaths = {
    'PATH': 'Release/linux-x64/publish',
    'LD_LIBRARY_PATH': 'lib',
}

modextravars = {
    'RELION_EXTERNAL_RECONSTRUCT_EXECUTABLE': '$(which Noise2Half)',
}
moduleclass = 'bio'
