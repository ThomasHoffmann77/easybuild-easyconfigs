# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2024/04
# conda reference module
easyblock = 'Conda'

name = 'warp'
local_ver = '2.0.0dev0'
local_commit = '1183a4a5ba8527987398b16d3d49ddb6e1bc9650'
local_commit_date = '20240429'
version = '%s.%s' % (local_ver, local_commit_date)
versionsuffix = '-conda'

homepage = 'https://github.com/warpem/warp'
description = """Warp is a set of tools for cryo-EM and cryo-ET data processing including, among 
other tools: Warp, M, WarpTools, MTools, MCore, and Noise2Map."""

toolchain = SYSTEM

source_urls = ['https://github.com/warpem/warp/archive/']
sources = [{
    'filename': '%s.%s.tar.gz' % (name, version),
    'download_filename': '%s.tar.gz' % local_commit
}]
checksums = ['d9637c647027db9f689adbd72119030d768c2634c76b3fca6953c236faaca4dc']

extract_sources = True

local_src = '%s-%s' % (name, local_commit)
start_dir = '%s'  % local_src

environment_file = 'warp_build.yml'

dependencies = [
    ('Miniconda3', '22.11.1-1', '', SYSTEM)
]

local_activate = 'eval "$(conda shell.bash hook) && conda activate %(installdir)s"'
postinstallcmds =[
   '%s && cd %%(builddir)s/%s && ./build-native-unix.sh' % (local_activate,local_src),
   '%s && cd %%(builddir)s/%s && ./publish-unix.sh' % (local_activate,local_src),
   'cp %%(builddir)s/%s/Release %%(installdir)s -rpP' % local_src
]
#local_binaries = [
#    'Frankenmap', 'MCore', 'MrcConverter', 'MTools', 'Noise2Half',
#    'Noise2Map', 'Noise2Mic', 'Noise2Tomo', 'WarpTools', 'WarpWorker'
#]

sanity_check_paths = {
    'files': [],
    'dirs': ['bin'],
}

sanity_check_commands = [
    #'%s --help' % x for x in local_binaries  
    'WarpTools --help'
]

modextrapaths = {'PATH': 'Release/linux-x64/publish'}

modextravars = {
    'RELION_EXTERNAL_RECONSTRUCT_EXECUTABLE': '$(which Noise2Half)',
}
moduleclass = 'bio'
