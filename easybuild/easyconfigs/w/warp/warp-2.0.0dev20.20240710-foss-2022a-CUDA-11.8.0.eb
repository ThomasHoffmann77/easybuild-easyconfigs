# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2024/07
easyblock = 'CMakeMake'

name = 'warp'
local_ver = '2.0.0dev20'
local_commit = 'afe0bdce289eebe2c67339a180bae18e9895a628e'
local_commit_date = '20240710'
version = '%s.%s' % (local_ver, local_commit_date)

local_dotnet_arch = 'x64'

versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://github.com/warpem/warp'
description = """Warp is a set of tools for cryo-EM and cryo-ET data processing including, among 
other tools: Warp, M, WarpTools, MTools, MCore, and Noise2Map."""

# stick to CUDA 11.x and therefore GCC < 12 due to use of cudaBindTexture2D in 
# NativeAcceleration/gtom/src/Masking/IrregularSphereMask.cu
toolchain = {'name': 'foss', 'version': '2022a'}
toolchainopts = {'pic': True, 'cstd': 'c++17', 'usempi': True}

# github_account = 'warpem'

source_urls = ['https://github.com/warpem/warp/archive/']
sources = [{
    'filename': '%s.%s-%s.tar.gz' % (name, version, local_commit),
    'download_filename': '%s.tar.gz' % local_commit
}]
patches = [
    ('warp-2.0.0dev0_cmake.patch', 1),
    'warp-2.0.0dev0_inject_cudacc.patch',
]
checksums = [
    {'warp.2.0.0dev20.20240710-afe0bdce289eebe2c67339a180bae18e9895a628.tar.gz':
     '63370b21af18d7ac4011bf3567ddab22331de2e2fc44671514f705a402a57c1e'},
    {'warp-2.0.0dev0_cmake.patch': 'd40152f787bde4f527c299d3af026ed5b7ad77f3431fa97446fa22a02b0d2971'},
    {'warp-2.0.0dev0_inject_cudacc.patch': '6a1ab6b3b6760dccb327c2e98f3188b16abc5aa31f2d6484838a39a3452eb86c'},
]

builddependencies = [
    ('CMake', '3.24.3'),
    ('dotNET-SDK', '8.0.204', '-linux-%s' % (local_dotnet_arch), SYSTEM)
]

dependencies = [
    # stick to CUDA 11.x and therefore GCC < 12 due to use of cudaBindTexture2D in 
    # NativeAcceleration/gtom/src/Masking/IrregularSphereMask.cu
    # Use CUDA 11.8 due to https://github.com/pytorch/pytorch/issues/88038
    ('CUDA', '11.8.0', '', SYSTEM),
    ('cuDNN', '8.7.0.84', versionsuffix, SYSTEM),
    ('Python', '3.10.4'),
    ('PyTorch', '2.0.1', versionsuffix),
    ('LibTIFF', '4.3.0'),
    ('torchvision', '0.15.2', versionsuffix),
    ('AreTomo2', '1.0.0', versionsuffix),
    # ('IMOD', '4.12.62', versionsuffix),  # optional
]

local_binaries = [
    'Frankenmap', 'MCore', 'MrcConverter', 'MTools', 'Noise2Half',
    'Noise2Map', 'Noise2Mic', 'Noise2Tomo', 'WarpTools', 'WarpWorker'
]

local_configopts = [
    "-DCMAKE_CUDA_ARCHITECTURES='%(cuda_cc_cmake)s'",
    "-DCUDA_ARCHS='%(cuda_cc_cmake)s'",
    '-DDOTNET_RT=linux-%s' % local_dotnet_arch,
    '-DCMAKE_EXPORT_COMPILE_COMMANDS=ON',
    '-DCUDA_VERBOSE_BUILD=ON',
    '-DCAFFE2_USE_CUDNN=1'
    '-DDOTNET_BINARIES="%s"' % " ".join(local_binaries),
]
configopts = ' '.join(local_configopts)

build_type = ''

sanity_check_paths = {
    'files': ['lib/libSkiaSharp.%s' % SHLIB_EXT],
    'dirs': ['bin', 'lib'],
}

sanity_check_commands = [
    # '%s --help' % x for x in local_binaries  
    'WarpTools --help'
]

modextravars = {
    'RELION_EXTERNAL_RECONSTRUCT_EXECUTABLE': '$(which Noise2Half)',
}

moduleclass = 'bio'
