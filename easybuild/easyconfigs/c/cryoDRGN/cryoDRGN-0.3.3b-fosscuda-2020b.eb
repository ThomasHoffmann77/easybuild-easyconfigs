easyblock = 'PythonBundle'

name = 'cryoDRGN'
version = '0.3.3b'

homepage = 'https://cb.csail.mit.edu/cb/cryodrgn/'
description = """cryoDRGN: Deep Reconstructing Generative Networks for cryo-EM heterogeneous
 reconstruction.
 CryoDRGN is a neural network based algorithm for heterogeneous cryo-EM reconstruction. In
 particular, the method models a continuous distribution over 3D structures by using a neural
 network based representation for the volume.
"""

toolchain = {'name': 'fosscuda', 'version': '2020b'}

dependencies = [
    ('Python', '3.8.6'),
    ('IPython', '7.18.1'),
    ('JupyterLab', '2.2.8'),
    ('SciPy-bundle', '2020.11'),
    # req <1.9  https://github.com/zhonge/cryodrgn/issues/66
    ('PyTorch', '1.7.1'),
    ('numba', '0.52.0'),
    ('plotly.py', '4.14.3'),
    ('scikit-learn', '0.23.2'),
    ('matplotlib', '3.3.3'),
    ('Seaborn', '0.11.1'),
]

use_pip = True
sanity_pip_check = True

exts_list = [
    ('colorlover', '0.3.0', {
        'checksums': ['b8fb7246ab46e1f5e6715649453c1762e245a515de5ff2d2b4aab7a6e67fa4e2'],
    }),
    ('cufflinks', '0.17.3', {
        'checksums': ['48c1b3406dc030004121966489eebc5518cea70fd4e3f16379b491328501a644'],
    }),
    ('pynndescent', '0.5.2', {
        'checksums': ['d9fd22210b8d64368376ff392e876fb72fe3cda282396cfa6a59440ab6600771'],
    }),
    ('umap-learn', '0.5.1', {
        'modulename': 'umap',
        'checksums': ['3e3e5e526109866012a9da79f423c922edc379c6cac9bf65ea08fbb9dd93ff3a'],
    }),
    ('cryodrgn', version, {
        'postinstallcmds': [
            'cp utils/* analysis_scripts/* %(installdir)s/bin',
            'chmod +x %(installdir)s/bin/*.py',
        ],
        'source_tmpl': '%(version)s.tar.gz',
        'source_urls': ['https://github.com/zhonge/cryodrgn/archive/refs/tags'],
        'checksums': ['60904396f2b54ae193934a0a6c6416460af0451569406a6092e70dee00cef4b3'],
    }),
]

fix_python_shebang_for = ['bin/*.py']

local_scripts = [
    'add_psize', 'filter_mrcs', 'filter_pkl', 'filter_star', 'flip_hand', 'fsc', 'invert_contrast', 'kmeans',
    'phase_flip', 'plotfsc', 'plot_loss', 'plot_z1', 'plot_z2', 'plot_z_pca', 'run_umap', 'translate_stack', 'tsne',
    'view_cs_header', 'view_header', 'view_stack', 'write_starfile'
]

sanity_check_paths = {
    'files': ['bin/%s.py' % x for x in local_scripts],
    'dirs': []
}

sanity_check_commands = ['%(namelower)s --help']
sanity_check_commands += ['%s.py -h' % x for x in local_scripts]

moduleclass = 'chem'
