# Thomas Hoffmann, EMBL Heidelberg, structures-it@embl.de, 2021/04
# Update src release 3.0.0 to commit 5eafd6af9c16fb280ddf6e3092d029c0bf71d21e,Sep 29, 2020
# "Build 3.0.0 release without shared libraries and python", assumed to be basis for the 
# official binary release.
diff --new-file -ru apbs-3.0.0/apbs/chemistry/atom_complex_calc.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom_complex_calc.py
--- apbs-3.0.0/apbs/chemistry/atom_complex_calc.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom_complex_calc.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,138 @@
+import math
+import sys  # noqa
+
+from apbs.geometry import (
+    Coordinate,
+    Surface,
+    Constants,
+)
+
+from . import (
+    Atom,
+    AtomList,
+    CellList,
+)
+
+
+class AtomComplexCalc:
+    """
+    Port of Vacc
+    """
+
+    def __init__(
+        self, alist: AtomList, clist: CellList, surface_density: float
+    ):
+        """
+        .. note:: This is not just a port of the ctor for Vacc, but also
+        replaces Vacc_storeParms. Vacc_storeParms seems to be simply an
+        extension to the constructor, so it's job is replicated here.
+
+        If it is found that Vacc_storeParms is not just an extension for the
+        constructor, it should be moved to another method.
+        """
+        self.clist = clist
+        self.alist = alist
+        self.surface_density = surface_density
+        max_radius = alist.max_radius + clist.max_radius
+        max_area = 4.0 * (max_radius ** 2) * math.pi
+        nsphere = math.ceil(max_area * surface_density)
+
+        # TODO: calculate reference shpere (see VaccSurf_refSphere)
+
+    @property
+    def stride(self) -> Coordinate:
+        return self.clist.stride
+
+    def accessable_outside_inflated_venderwalls(
+        self, center: Coordinate, radius: float, atom_id_to_ignore: int
+    ) -> bool:
+        """
+        Determines if a point is within the union of the spheres centered
+        at the atomic centers with radii equal to the sum of their van der
+        Waals radii and the probe radius.  Does not include contributions
+        from the specified atom.
+
+        :returns: None if not found
+
+        .. note:: port of Vacc::ivdwAccExclus
+        """
+        if radius > self.clist.max_radius:
+            raise RuntimeError(
+                "Got radius %f greater than max radius %f from"
+                " cell list." % (radius, self.clist.max_radius)
+            )
+
+        c = (center - self.lower_corner) / self.stride
+
+        # Get cell and ensure exists in the cell list
+        for i in range(3):
+            if c[i] < 0 or c[i] >= self.npoints[i]:
+                # Could not find the cell within the constraints of the cell
+                # list
+                return False
+
+        for atom in self.clist:
+            if atom.id == atom_id_to_ignore:
+                continue
+
+            if atom.euclidian_dist(center) > (atom.radius + radius) ** 2:
+                return True
+
+        return False
+
+    def atom_surface(self, atom: Atom, ref: Surface, prad: float) -> Surface:
+        """Create a new surface from the points that do fall on the reference
+        surface.
+
+        :param atom: Atom from which surface will be constructed.
+        :return: Returns surface generated from the atom.
+
+        .. note:: Although this seems like a candidate for a static method, the
+        `accessable_outside_inflated_venderwalls_rad` method of this class
+        *is* called from this function, and therefore must be a regular method.
+
+        """
+
+        arad = atom.radius
+        apos = atom.position
+        atomID = atom.id
+        surf: Surface
+
+        if arad < Constants.very_small_eps:
+            return Surface(prad, 0)
+
+        rad = arad + prad
+
+        # Possibly merge these two loops?
+        npoints = 0
+        pos = Coordinate()
+        for i in range(ref.npoints):
+            pos.x = rad(ref.xs[i]) + apos.x
+            pos.y = rad(ref.ys[i]) + apos.y
+            pos.z = rad(ref.zs[i]) + apos.z
+
+            # need to implement
+            if self.accessable_outside_inflated_venderwalls_rad(
+                pos, prad, atomID
+            ):
+                npoints += 1
+                ref.is_on_surf[i] = True
+            else:
+                ref.is_on_surf[i] = False
+
+        surf = Surface(prad, npoints)
+        for i in range(ref.npoints):
+            if ref.coords[i].is_on_surf:
+                surf.coords.append((rad * ref.coords[i] + apos))
+                surf.coords[-1].is_on_surf = True
+
+        surf.area = (
+            4.0
+            * math.pi
+            * rad
+            * rad
+            * float(surf.npoints)
+            / float(ref.npoints)
+        )
+
+        return surf
diff --new-file -ru apbs-3.0.0/apbs/chemistry/atom_list.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom_list.py
--- apbs-3.0.0/apbs/chemistry/atom_list.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom_list.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,110 @@
+from math import inf
+from . import Atom
+from apbs.geometry import Coordinate
+from typing import Tuple
+
+
+class AtomList:
+    """
+    Thin abstraction over a container of atoms
+
+    Attributes:
+        dp (dict): dict for dynamic programming of values that may not need to
+                be re-calculated
+    """
+
+    def __init__(self, filename: str = None, atoms=None):
+        self._atoms: Tuple[Atom] = atoms if atoms is not None else []
+        self.charge: float = None
+        self.maxrad: float = None
+
+        self._center = Coordinate()
+        self._mincrd = Coordinate()
+        self._maxcrd = Coordinate()
+        self._dp = dict()
+        if filename is not None:
+            self.read_pdb(filename)
+
+    def center(self) -> Coordinate:
+        """Molecule center
+        note: not the median molecule, but the average of the max values int
+        the x, y, and z coordinates
+        """
+        if "center" not in self._dp.keys():
+            ma = self.maxcrd()
+            mi = self.mincrd()
+            self._dp["center"] = Coordinate(
+                (ma.x + mi.x) * 0.5, (ma.y + mi.y) * 0.5, (ma.z + mi.z) * 0.5,
+            )
+        return self._dp["center"]
+
+    def mincrd(self) -> Coordinate:
+        """Minimum coordinates
+        """
+        if "min" not in self._dp.keys():
+            x, y, z = inf, inf, inf
+            for a in self._atoms:
+                x = min(x, a.x)
+                y = min(y, a.y)
+                z = min(z, a.z)
+            self._dp["min"] = Coordinate(x, y, z)
+
+        return self._dp["min"]
+
+    def maxcrd(self) -> Coordinate:
+        """Maximum coordinates
+        """
+        if "max" not in self._dp.keys():
+            x, y, z = 0.0, 0.0, 0.0
+            for a in self._atoms:
+                x = max(x, a.x)
+                y = max(y, a.y)
+                z = max(z, a.z)
+            self._dp["max"] = Coordinate(x, y, z)
+
+        return self._dp["max"]
+
+    @property
+    def max_radius(self) -> float:
+        if "max_radius" not in self._dp.keys():
+            m = 0.0
+            for a in self._atoms:
+                m = max(m, a.radius)
+            self._dp["max_radius"] = m
+
+        return self._dp["max_radius"]
+
+    @property
+    def count(self) -> int:
+        return len(self._atoms)
+
+    @property
+    def atoms(self) -> Tuple[Atom]:
+        return self._atoms
+
+    def read_pdb(self, fn: str):
+        """
+        Read serialized atoms in the PBD format from a file
+        """
+        with open(fn, "r") as f:
+            lines = f.readlines()
+            idx = 0
+            for line in lines:
+                fields = [
+                    idx.lower() for idx in line.strip().split(" ") if idx != ""
+                ]
+                if fields[0] in ("atom", "hetatm"):
+                    a = Atom()
+                    a.name = fields[2].upper()
+                    a.res_name = fields[3].upper()
+                    a.position = Atom(
+                        float(fields[5]), float(fields[6]), float(fields[7]),
+                    )
+                    a.id = idx
+
+                    if len(fields) == 10:
+                        a.charge = float(fields[8])
+                        a.radius = float(fields[9])
+
+                    self._atoms.append(a)
+                    idx += 1
diff --new-file -ru apbs-3.0.0/apbs/chemistry/atom.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom.py
--- apbs-3.0.0/apbs/chemistry/atom.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/atom.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,77 @@
+from typing import List, Union
+import numpy as np
+from apbs.geometry import Coordinate
+
+
+class Atom:
+    """
+    Attributes:
+        position (Coordinate): Atomic position
+        radius (float): Atomic radius
+        charge (float): Atomic charge
+        epsilon (float): Epsilon value for WCA calculations
+        id (int): Atomic ID; this should be a unique non-negative integer
+            assigned based on the index of the atom in a Valist atom array
+        res_name (str): Residue name from PDB/PQR file
+        name (str): Atom name from PDB/PDR file
+    """
+
+    def __init__(self, *vals: List[float]):
+        if len(vals) > 0:
+            self.position = Coordinate(*vals)
+        else:
+            self.position = Coordinate()
+        self.radius: float = 0.0
+        self.charge: float = 0.0
+        self.partID: float = 0.0
+        self.epsilon: float = 0.0
+        self.id: int = 0
+        self.res_name: str = ""
+        self.name: str = ""
+
+    def __str__(self):
+        return "Atom< name< %s >, %s, radius< %s >, charge< %s >>" % (
+            self.name,
+            self.position,
+            self.radius,
+            self.charge,
+        )
+
+    def __repr__(self):
+        return "Atom< name< %s >, %s  radius< %s >, charge< %s >>" % (
+            self.name,
+            self.position,
+            self.radius,
+            self.charge,
+        )
+
+    def euclidian_dist2(
+        self, other: Union["Atom", Coordinate, np.ndarray]
+    ) -> float:
+        """
+        Euclidian distance without the square root
+        """
+        if isinstance(other, Atom):
+            return np.sum((self.position._data - other.position._data) ** 2)
+        if isinstance(other, Coordinate):
+            return np.sum((self.position._data - other._data) ** 2)
+        elif isinstance(other, np.ndarray):
+            # TODO: Figure out how to apply
+            # https://numpy.org/doc/stable/reference/generated/numpy.dot.html
+            return np.sum((self.position._data - other) ** 2)
+        else:
+            raise RuntimeError(
+                "Incorrect data type passed into euclidian_dist2"
+            )
+
+    @property
+    def x(self) -> float:
+        return self.position.x
+
+    @property
+    def y(self) -> float:
+        return self.position.y
+
+    @property
+    def z(self) -> float:
+        return self.position.z
diff --new-file -ru apbs-3.0.0/apbs/chemistry/cell_list.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/cell_list.py
--- apbs-3.0.0/apbs/chemistry/cell_list.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/cell_list.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+from apbs.geometry import Coordinate
+from . import AtomList
+
+# Alias for coordinate in cases where 'stride' makes more sense as the type,
+# though all the methods may remain the same.
+Stride = Coordinate
+
+
+class CellList(AtomList):
+    def __init__(self, *args, **kwargs):
+        super().__init__(*args, **kwargs)
+        self.lower_bound = Coordinate()
+        self.upper_bound = Coordinate()
+        self.stride = Stride(0.0, 0.0, 0.0)
diff --new-file -ru apbs-3.0.0/apbs/chemistry/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/__init__.py
--- apbs-3.0.0/apbs/chemistry/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/chemistry/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,4 @@
+from .atom import Atom  # noqa F401
+from .atom_list import AtomList  # noqa F401
+from .cell_list import CellList  # noqa F401
+from .atom_complex_calc import AtomComplexCalc  # noqa F401
diff --new-file -ru apbs-3.0.0/apbs/geometry/constants.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/constants.py
--- apbs-3.0.0/apbs/geometry/constants.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/constants.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,5 @@
+class Constants:
+
+    # Tolerance for calculations
+    epsilon = 1e-6
+    very_small_eps = 1e-9
diff --new-file -ru apbs-3.0.0/apbs/geometry/coordinate.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/coordinate.py
--- apbs-3.0.0/apbs/geometry/coordinate.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/coordinate.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,128 @@
+from typing import Generic, TypeVar, Callable
+import numpy as np
+
+"""
+Using Coordinate as a lower-level abstraction over len==3 generic container,
+with class Point potentially having more associated data/behavior to come.
+"""
+
+T = TypeVar("T")
+
+
+class Coordinate(Generic[T]):
+    """
+    Attributes:
+        data (Array[T]): data to be stored in the point (max three values)
+
+    NOTE: initializes values to 0 if none are passed in. Will not cast to
+            type-hinted type.
+    """
+
+    def __init__(self, *vals, array: np.ndarray = None):
+        if len(vals) not in (0, 3):
+            raise RuntimeError("Can only pass in 3 values for a Point.")
+
+        if len(vals) == 3:
+            self._data = np.array(vals, dtype=np.float32)
+        elif array is not None:
+            self._data = np.array(array, dtype=np.float32)
+        else:
+            self._data = np.zeros(3, dtype=np.float32)
+
+    def any(self, predicate: Callable[[float], bool]) -> bool:
+        for i in self._data:
+            if predicate(i):
+                return True
+        return False
+
+    def all(self, predicate: Callable[[float], bool]) -> bool:
+        for i in self._data:
+            if not predicate(i):
+                return False
+        return True
+
+    def __getitem__(self, idx: int) -> T:
+        if idx > 2 or idx < -2:
+            raise IndexError("Point has only 3 dimensions.")
+        return self._data[idx]
+
+    def __setitem__(self, idx: int, value: T) -> None:
+        if idx > 2 or idx < -2:
+            raise IndexError("Point has only 3 dimensions.")
+        self._data[idx] = value
+
+    def __lt__(self, other: "Coordinate[T]") -> bool:
+        return (self._data < other._data).all()
+
+    def __le__(self, other: "Coordinate[T]") -> bool:
+        return (self._data <= other._data).all()
+
+    def __gt__(self, other: "Coordinate[T]") -> bool:
+        return (self._data > other._data).all()
+
+    def __ge__(self, other: "Coordinate[T]") -> bool:
+        return (self._data >= other._data).all()
+
+    def __eq__(self, other: "Coordinate[T]") -> bool:
+        return (self._data == other._data).all()
+
+    def __ne__(self, other: "Coordinate[T]") -> bool:
+        return not (self._data == other._data).all()
+
+    def __str__(self):
+        return f"Coordinate <{self.x}, {self.y}, {self.z}>"
+
+    def __repr__(self):
+        return f"Coordinate <{self.x}, {self.y}, {self.z}>"
+
+    def __add__(self, other: "Coordinate") -> "Coordinate":
+        if isinstance(other, Coordinate):
+            return Coordinate(array=self._data + other._data)
+        elif isinstance(other, (float, int)):
+            return Coordinate(array=self._data + other)
+        raise RuntimeError("Unexpected data type for this operation.")
+
+    def __sub__(self, other: "Coordinate") -> "Coordinate":
+        if isinstance(other, Coordinate):
+            return Coordinate(array=self._data - other._data)
+        elif isinstance(other, (float, int)):
+            return Coordinate(array=self._data - other)
+        raise RuntimeError("Unexpected data type for this operation.")
+
+    def __mul__(self, other: "Coordinate") -> "Coordinate":
+        if isinstance(other, Coordinate):
+            return Coordinate(array=self._data * other._data)
+        elif isinstance(other, (float, int)):
+            return Coordinate(array=self._data * other)
+        raise RuntimeError("Unexpected data type for this operation.")
+
+    def __truediv__(self, other: "Coordinate") -> "Coordinate":
+        if isinstance(other, Coordinate):
+            return Coordinate(array=self._data / other._data)
+        elif isinstance(other, (float, int)):
+            return Coordinate(array=self._data / other)
+        raise RuntimeError("Unexpected data type for this operation.")
+
+    @property
+    def x(self) -> T:
+        return self._data[0]
+
+    @property
+    def y(self) -> T:
+        return self._data[1]
+
+    @property
+    def z(self) -> T:
+        return self._data[2]
+
+    @x.setter
+    def x(self, value: T) -> None:
+        self._data[0] = value
+
+    @y.setter
+    def y(self, value: T) -> None:
+        self._data[1] = value
+
+    @z.setter
+    def z(self, value: T) -> None:
+        self._data[2] = value
diff --new-file -ru apbs-3.0.0/apbs/geometry/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/__init__.py
--- apbs-3.0.0/apbs/geometry/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,11 @@
+from .constants import Constants  # noqa F401
+from .coordinate import Coordinate  # noqa F401
+from .surface_point import SurfacePoint  # noqa F401
+from .surface import Surface  # noqa F401
+from .sphere import Sphere  # noqa F401
+
+"""
+Geometry should _strictly_ never rely on anything in the chemistry directory.
+Those methods rely on many geometry functions, and any geometric functions
+relying on chemistry methods would create a circular dependency.
+"""
diff --new-file -ru apbs-3.0.0/apbs/geometry/sphere.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/sphere.py
--- apbs-3.0.0/apbs/geometry/sphere.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/sphere.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,54 @@
+import math
+from . import Surface, SurfacePoint
+
+
+class Sphere:
+    """
+    Static class to hold geometric calculates on spheres.
+    """
+
+    def spherical_distribution(self, npoints: int) -> Surface:
+        """
+        Generates monte-carlo approximation of a sphere using npoints points.
+
+        Shamelessly copied over from the vacc routine.
+        """
+        s: Surface
+
+        frac = npoints / 4.0
+        ntheta = math.ceil(math.sqrt(math.pi * frac))
+        dtheta = math.pi / float(ntheta)
+        nphimax = 2 * ntheta
+
+        # Count number of points to be used
+        nactual: int = 0
+        for i in range(ntheta):
+            theta = dtheta * float(i)
+            sintheta = math.sin(theta)
+            costheta = math.cos(theta)
+            nphi = math.ceil(sintheta * nphimax)
+            nactual += nphi
+
+        s = Surface(1.0, nactual)
+        nactual = 0
+        for i in range(ntheta):
+            theta = dtheta * float(i)
+            sintheta = math.sin(theta)
+            costheta = math.cos(theta)
+            nphi = math.ceil(sintheta * nphimax)
+            if nphi != 0:
+                dphi = 2 * math.pi / float(nphi)
+                for j in range(nphi):
+                    phi = dphi * float(j)
+                    sinphi = math.sin(phi)
+                    cosphi = math.cos(phi)
+                    s[nactual] = SurfacePoint(
+                        cosphi * sintheta,
+                        sinphi * sintheta,
+                        costheta,
+                        is_on_surf=True,
+                    )
+                    nactual += 1
+
+        s.npoints = nactual
+        return s
diff --new-file -ru apbs-3.0.0/apbs/geometry/surface_point.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/surface_point.py
--- apbs-3.0.0/apbs/geometry/surface_point.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/surface_point.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+from . import Coordinate
+
+
+class SurfacePoint(Coordinate):
+    """
+    Thin abstraction over Coordinate class which keeps track of whether or not
+    the given coordinate falls on the surface which encapsulates it.
+    """
+
+    def __init__(self, *args, **kwargs):
+        self.is_on_surf: bool = False
+        if "is_on_surf" in kwargs.keys():
+            self.is_on_surf = kwargs["is_on_surf"]
+            del kwargs["is_on_surf"]
+        super().__init__(*args, **kwargs)
diff --new-file -ru apbs-3.0.0/apbs/geometry/surface.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/surface.py
--- apbs-3.0.0/apbs/geometry/surface.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/geometry/surface.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,39 @@
+from typing import List, Dict
+from . import SurfacePoint
+
+
+class Surface:
+    """
+    Attributes:
+        coords: list of SurfacePoints which tracks various coordinates and
+            whether they fall on the surface or not.
+    """
+
+    def __init__(self, probe_radius: float, npoints: int):
+        self.probe_radius = probe_radius
+        self.npoints = npoints
+        self.coords: List[SurfacePoint] = [
+            SurfacePoint() for _ in range(npoints)
+        ]
+        self._dp: Dict[str, float] = dict()
+
+    def __getitem__(self, idx: int) -> SurfacePoint:
+        if idx >= self.npoints or idx < -self.npoints:
+            raise IndexError("Requested surface point does not exists.")
+        return self.coords[idx]
+
+    def __setitem__(self, idx: int, other: SurfacePoint) -> None:
+        if idx >= self.npoints or idx < -self.npoints:
+            raise IndexError("Requested surface point does not exists.")
+        self.coords[idx] = other
+
+    @property
+    def area(self) -> float:
+        """Lazily calculate the area of the surface"""
+
+        # TODO: figure out how this is calculated
+        # or if it is a straight attribute
+        if "area" not in self._dp.keys():
+            self._dp["area"] = -1.0
+
+        return self._dp["area"]
diff --new-file -ru apbs-3.0.0/apbs/grid/grid.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/grid/grid.py
--- apbs-3.0.0/apbs/grid/grid.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/grid/grid.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,229 @@
+from typing import List, Optional
+from apbs.geometry import Coordinate, Constants
+import math
+
+
+class CurvatureFlag:
+    """Enum class to replace curvature flags in original source
+    """
+
+    ReducedMaximalCurvature = 0
+    MeanCurvature = 1
+    GaussCurvature = 2
+    TrueMaximalCurvature = 3
+
+
+class Grid:
+    """
+    Pulled over from src/mg/vgrid.(h|c)
+
+    Attributes:
+        dims       : Number of grid points in a given direction.
+                     Previously nx, ny, nz.
+        spaces     : Grid spacing in a given direction.
+                     Previously hx, hy, hz.
+        mins       : Minimums in a given direction.
+                     Previously xmin, ymin, zmin.
+        maxs       : Maximums in a given direction.
+                     Previously xmax, ymax, zmax.
+        data       : nx*ny*nz array of data
+    """
+
+    def __init__(self, dims, spaces, mins, maxs, data: Optional[List[float]]):
+        """Grid constructor
+
+        Parameters
+            dims:   Initializes member variable with the same name.
+            spaces: Initializes member variable with the same name.
+            mins:   Initializes member variable with the same name.
+            maxs:   Initializes member variable with the same name.
+            data:   Optionally sets the data for the grid
+                    (may leave None if will be set later)
+        """
+        self.dims: Coordinate[int] = dims
+        self.spaces: Coordinate[int] = spaces
+        self.mins: Coordinate[int] = mins
+        self.maxs: Coordinate[int] = maxs
+        self.data: Optional[List[float]] = data
+
+    def value(self, pt: Coordinate[float]) -> float:
+        """Get potential value (from mesh or approximation) at a point
+
+        :note: Previously returned by pointer, using return code as an error
+               code.
+                This has been replaced by returning the value and raising an
+                exception on error.
+
+        :param   x    : Coordinate at which to evaluate potential
+        :returns      : value of grid
+        """
+
+        if self.data is None:
+            raise RuntimeError("No data available.")
+
+        ret_value = float(0)
+
+        tmp = Coordinate(
+            (pt.x - self.mins.x) / self.spaces.x,
+            (pt.y - self.mins.y) / self.spaces.y,
+            (pt.z - self.mins.z) / self.spaces.z,
+        )
+
+        hi = Coordinate(
+            int(math.ceil(tmp.x)), int(math.ceil(tmp.y)), int(math.ceil(tmp.z))
+        )
+        lo = Coordinate(
+            int(math.floor(tmp.x)),
+            int(math.floor(tmp.y)),
+            int(math.floor(tmp.z)),
+        )
+
+        hi.x = (
+            self.dims.x - 1
+            if abs(pt.x - self.maxs.x) < Constants.epsilon
+            else hi.x
+        )
+        hi.y = (
+            self.dims.y - 1
+            if abs(pt.y - self.maxs.y) < Constants.epsilon
+            else hi.y
+        )
+        hi.z = (
+            self.dims.z - 1
+            if abs(pt.z - self.maxs.z) < Constants.epsilon
+            else hi.z
+        )
+
+        lo.x = 0 if abs(pt.x - self.mins.x) < Constants.eps else lo.x
+        lo.y = 0 if abs(pt.y - self.mins.y) < Constants.eps else lo.y
+        lo.z = 0 if abs(pt.z - self.mins.z) < Constants.eps else lo.z
+
+        if hi < self.dims:
+            dx, dy, dz = tmp.x - lo.x, tmp.y - lo.y, tmp.z - lo.z
+            ret_value = list()
+            ret_value.append(float(dx * dy * dz * self.data[hi.x, hi.y, hi.z]))
+            ret_value.append(
+                float(dx * (1.0 - dy) * dz * self.data[hi.x, lo.y, hi.z])
+            )
+            ret_value.append(
+                float(dx * dy * (1.0 - dz) * self.data[hi.x, hi.y, lo.z])
+            )
+            ret_value.append(
+                float(
+                    dx * (1.0 - dy) * (1.0 - dz) * self.data[hi.x, lo.y, lo.z]
+                )
+            )
+            ret_value.append(
+                float((1.0 - dx) * dy * dz * self.data[lo.x, hi.y, hi.z])
+            )
+            ret_value.append(
+                float(
+                    (1.0 - dx) * (1.0 - dy) * dz * self.data[lo.x, lo.y, hi.z]
+                )
+            )
+            ret_value.append(
+                float(
+                    (1.0 - dx) * dy * (1.0 - dz) * self.data[lo.x, hi.y, lo.z]
+                )
+            )
+            ret_value.append(
+                float(
+                    (1.0 - dx)
+                    * (1.0 - dy)
+                    * (1.0 - dz)
+                    * self.data[lo.x, lo.y, lo.z]
+                )
+            )
+
+            ret_value = sum(ret_value)
+
+            if ret_value == math.nan:
+                # TODO: Add a more descriptive error
+                raise RuntimeError(
+                    "Value routine failed to converge with the following "
+                    "coordinates:\n"
+                    f"\tLow: {lo}\n"
+                    f"\tHigh: {hi}\n"
+                    f"\tCoordinate: {pt}\n"
+                )
+
+        return ret_value
+
+    def curvature(self, pt: Coordinate[float], cflag: CurvatureFlag):
+        """Get second derivative values at a point
+
+        :param   pt   : Location to evaluate second derivative
+        :param   cflag: Curvature method
+        :param   curv : Specified curvature value
+        :returns      : 1 if successful, 0 if off grid
+        """
+        ...
+
+    def gradient(self, pt: Coordinate[float], grad: List[float]):
+        """Get first derivative values at a point
+
+        :param   pt  : Location to evaluate gradient
+        :param   grad: Gradient
+        :returns     : 1 if successful, 0 if off grid
+        """
+        ...
+
+    def integrate(self) -> float:
+        """Get the integral of the data
+        """
+        ...
+
+    def norml1(self) -> float:
+        r"""Get the \f$L_1\f$ norm of the data.  This returns the integral:
+            \f[ \| u \|_{L_1} = \int_\Omega | u(x) | dx  \f]
+        """
+        ...
+
+    def norml2(self) -> float:
+        r"""Computes the \f$L_2\f$ norm of the data.
+        """
+        ...
+
+    def norml_inf(self) -> float:
+        r"""Computes the \f$L_\infty\f$ norm of the data.
+        """
+        ...
+
+    def seminormH1(self) -> float:
+        r"""Get the \f$H_1\f$ semi-norm of the data.
+        This returns the integral:
+          \f[ | u |_{H_1} = \left( \int_\Omega |\nabla u(x)|^2 dx \right)^{1/2} \f]
+        """
+        ...
+
+    def normH1(self) -> float:
+        r"""Integral of data
+        Get the \f$H_1\f$ norm (or energy norm) of the data.
+        This returns the integral:
+          \f[ \| u \|_{H_1} = \left( \int_\Omega |\nabla u(x)|^2 dx
+                            +        \int_\Omega |u(x)|^2 dx \right)^{1/2} \f]
+        """
+        ...
+
+    def read_dx(self, fn: str) -> None:
+        lines = open(fn, "r").readlines()
+        self.data = list()
+        for line in lines:
+            lline = line.lower().strip()
+
+            # skip comments
+            if lline[0] == "#":
+                continue
+            fields = lline.split(" ")
+
+            # TODO: figure out what all these options mean
+            if fields[0] in ("object", "attribute", "component"):
+                continue
+
+            assert (
+                len(fields) == 3
+            ), "Found an unknown option or found line with values != 3"
+
+            self.data.append(
+                [float(fields[0]), float(fields[1]), float(fields[2])]
+            )
diff --new-file -ru apbs-3.0.0/apbs/grid/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/grid/__init__.py
--- apbs-3.0.0/apbs/grid/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/grid/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1 @@
+from .grid import Grid, CurvatureFlag  # noqa 401
diff --new-file -ru apbs-3.0.0/apbs/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/__init__.py
--- apbs-3.0.0/apbs/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,79 @@
+version_str = "0.0.1"
+
+header = """
+
+----------------------------------------------------------------------
+
+    APBS -- Adaptive Poisson-Boltzmann Solver
+    Version " PACKAGE_STRING "
+
+    Nathan A. Baker (nathan.baker@pnnl.gov)
+    Pacific Northwest National Laboratory
+
+    Additional contributing authors listed in the code documentation.
+
+    Copyright (c) 2010-2020 Battelle Memorial Institute. Developed at
+    the Pacific Northwest National Laboratory, operated by Battelle
+    Memorial Institute, Pacific Northwest Division for the U.S. Department
+    of Energy.
+
+    Portions Copyright (c) 2002-2010, Washington University in St. Louis.
+    Portions Copyright (c) 2002-2020, Nathan A. Baker.
+    Portions Copyright (c) 1999-2002, The Regents of the University of
+    California.
+    Portions Copyright (c) 1995, Michael Holst.
+    All rights reserved.
+
+    Redistribution and use in source and binary forms, with or without
+    modification, are permitted provided that the following conditions are met:
+
+    * Redistributions of source code must retain the above copyright notice,
+      this list of conditions and the following disclaimer.
+
+    * Redistributions in binary form must reproduce the above copyright notice,
+      this list of conditions and the following disclaimer in the documentation
+      and/or other materials provided with the distribution.
+
+    * Neither the name of the developer nor the names of its contributors may
+      be used to endorse or promote products derived from this software without
+      specific prior written permission.
+
+    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+    TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+    PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
+    CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
+    OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
+    WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
+    OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
+    ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+
+----------------------------------------------------------------------
+
+    APBS uses FETK (the Finite Element ToolKit) to solve the
+    Poisson-Boltzmann equation numerically.  FETK is a portable collection
+    of finite element modeling class libraries developed by the Michael Holst
+    research group and written in an object-oriented form of C.  FEtk is
+    designed to solve general coupled systems of nonlinear partial differential
+    equations using adaptive finite element methods, inexact Newton methods,
+    and algebraic multilevel methods.  More information about FEtk may be found
+    at <http://www.FEtk.ORG>.
+
+----------------------------------------------------------------------
+
+    APBS also uses Aqua to solve the Poisson-Boltzmann equation numerically.
+    Aqua is a modified form of the Holst group PMG library
+    <http://www.FEtk.ORG> which has been modified by Patrice Koehl
+    <http://koehllab.genomecenter.ucdavis.edu/> for improved efficiency and
+    memory usage when solving the Poisson-Boltzmann equation.
+
+----------------------------------------------------------------------
+
+    Please cite your use of APBS as:
+    Baker NA, Sept D, Joseph S, Holst MJ, McCammon JA. Electrostatics of
+    nanosystems: application to microtubules and the ribosome. Proc.
+    Natl. Acad. Sci. USA 98, 10037-10041 2001.
+
+"""
diff --new-file -ru apbs-3.0.0/apbs/multigrid/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/multigrid/__init__.py
--- apbs-3.0.0/apbs/multigrid/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/multigrid/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1 @@
+from .multigrid import MultiGrid  # noqa F401
diff --new-file -ru apbs-3.0.0/apbs/multigrid/multigrid.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/multigrid/multigrid.py
--- apbs-3.0.0/apbs/multigrid/multigrid.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/multigrid/multigrid.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,25 @@
+from apbs.geometry import Coordinate
+
+"""
+/** @brief   Set partition information which restricts the calculation of
+ *           observables to a (rectangular) subset of the problem domain
+ *  @ingroup Vpmg
+ *  @author  Nathan Baker
+ */
+VEXTERNC void Vpmg_setPart(
+        Vpmg *thee,  /**< Vpmg object */
+        double lowerCorner[3],  /**< Partition lower corner */
+        double upperCorner[3],  /**< Partition upper corner */
+        int bflags[6]  /**< Booleans indicating whether a particular processor
+                         is on the boundary with another partition.  0 if the
+                         face is not bounded (next to) another partition, and
+                         1 otherwise. */
+        );
+"""
+
+
+class MultiGrid:
+    def set_part(
+        self, lower_corner: Coordinate, upper_corner: Coordinate
+    ) -> None:
+        pass
diff --new-file -ru apbs-3.0.0/apbs/requirements.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/requirements.txt
--- apbs-3.0.0/apbs/requirements.txt	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/requirements.txt	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,3 @@
+click==7.1.2
+mmcif-pdbx==1.1.2
+numpy==1.19.1
diff --new-file -ru apbs-3.0.0/apbs/test/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/__init__.py
--- apbs-3.0.0/apbs/test/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,4 @@
+from apbs.test.test_chemistry import *  # noqa F401
+from apbs.test.test_geometry import *  # noqa F401
+from apbs.test.test_grid import *  # noqa F401
+from apbs.test.test_multigrid import *  # noqa F401
diff --new-file -ru apbs-3.0.0/apbs/test/test_chemistry/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/__init__.py
--- apbs-3.0.0/apbs/test/test_chemistry/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,3 @@
+from apbs.test.test_chemistry.test_atom import *  # noqa F401
+from apbs.test.test_chemistry.test_atom_list import *  # noqa F401
+from apbs.test.test_chemistry.test_cell_list import *  # noqa F401
diff --new-file -ru apbs-3.0.0/apbs/test/test_chemistry/test_atom_complex_calc.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom_complex_calc.py
--- apbs-3.0.0/apbs/test/test_chemistry/test_atom_complex_calc.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom_complex_calc.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+from apbs.chemistry import AtomComplexCalc
+import pytest
+
+
+class TestAtomComplexCalc:
+    @pytest.mark.skip(reason="Needs test")
+    def test_atom_surface(self):
+        pass
+
+    @pytest.mark.skip(reason="Needs test")
+    def test_accessable_outside_inflated_venderwalls(self):
+        """
+        TODO: add test cases by grabbing data out of calls to the functions on
+        the C side of things.
+        """
+        pass
diff --new-file -ru apbs-3.0.0/apbs/test/test_chemistry/test_atom_list.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom_list.py
--- apbs-3.0.0/apbs/test/test_chemistry/test_atom_list.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom_list.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,71 @@
+from apbs.geometry import Coordinate
+from apbs.chemistry import AtomList, CellList
+import pytest
+
+
+@pytest.fixture()
+def pdb_file(tmp_path):
+
+    fp = tmp_path / "atom.pdb"
+
+    with open(fp, "w") as f:
+        f.write(
+            "HETATM    1  C    ALK    1       "
+            "1.000   4.000   7.000 0.000 1.000\n"
+        )
+        f.write(
+            "HETATM    1  C    ALK    1       "
+            "2.000   5.000   8.000 0.000 2.000\n"
+        )
+        f.write(
+            "HETATM    1  C    ALK    1       "
+            "3.000   6.000   9.000 0.000 3.000\n"
+        )
+    return fp
+
+
+class TestAtomList:
+    def test_read_pdb(self, pdb_file: str):
+
+        sut = AtomList(pdb_file)
+        assert len(sut._atoms) == 3
+
+        a = sut._atoms[0]
+        assert a.name == "C"
+        assert a.res_name == "ALK"
+        assert a.position.x == 1.0
+        assert a.position.y == 4.0
+        assert a.position.z == 7.0
+        assert a.charge == 0.0
+        assert a.radius == 1.0
+
+    def test_min(self, pdb_file: str):
+
+        sut = AtomList(pdb_file)
+
+        lo: Coordinate = sut.mincrd()
+        assert lo.x == 1.0
+        assert lo.y == 4.0
+        assert lo.z == 7.0
+
+    def test_max(self, pdb_file: str):
+
+        sut = AtomList(pdb_file)
+
+        hi: Coordinate = sut.maxcrd()
+        assert hi.x == 3.0
+        assert hi.y == 6.0
+        assert hi.z == 9.0
+
+    def test_center(self, pdb_file: str):
+
+        sut = AtomList(pdb_file)
+
+        mi: Coordinate = sut.center()
+        assert mi.x == 2.0
+        assert mi.y == 5.0
+        assert mi.z == 8.0
+
+    def test_max_radius(self, pdb_file: str):
+        sut = CellList(pdb_file)
+        assert sut.max_radius == 3.0
diff --new-file -ru apbs-3.0.0/apbs/test/test_chemistry/test_atom.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom.py
--- apbs-3.0.0/apbs/test/test_chemistry/test_atom.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_atom.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,57 @@
+from apbs.chemistry import Atom
+from apbs.geometry import Coordinate
+import numpy as np
+import pytest
+
+
+class TestAtom:
+    def test_ctor(self):
+        sut = Atom(0, 0, 0)
+        assert (sut.position._data == np.array((0, 0, 0))).all()
+
+    def test_property_get(self):
+        sut = Atom(1, 2, 3)
+        assert sut.x == 1
+        assert sut.y == 2
+        assert sut.z == 3
+
+    @pytest.mark.parametrize(
+        "params1,params2",
+        [
+            ((1, 1, 1), (2, 2, 2)),
+            ((0, 0, 0), (2, 2, 2)),
+            ((1, 1, 1), (0, 0, 0)),
+        ],
+    )
+    def test_euclidian_distance_atom(self, params1, params2):
+        expect = np.sum((np.array(params1) - np.array(params2)) ** 2)
+        a = Atom(*params1)
+        b = Atom(*params2)
+        assert a.euclidian_dist2(b) == expect
+
+    @pytest.mark.parametrize(
+        "params1,params2",
+        [
+            ((1, 1, 1), (2, 2, 2)),
+            ((0, 0, 0), (2, 2, 2)),
+            ((1, 1, 1), (0, 0, 0)),
+        ],
+    )
+    def test_euclidian_distance_array(self, params1, params2):
+        expect = np.sum((np.array(params1) - np.array(params2)) ** 2)
+        a = Atom(*params1)
+        assert a.euclidian_dist2(np.array(params2)) == expect
+
+    @pytest.mark.parametrize(
+        "params1,params2",
+        [
+            ((1, 1, 1), (2, 2, 2)),
+            ((0, 0, 0), (2, 2, 2)),
+            ((1, 1, 1), (0, 0, 0)),
+        ],
+    )
+    def test_euclidian_distance_array2(self, params1, params2):
+        expect = np.sum((np.array(params1) - np.array(params2)) ** 2)
+        a = Atom(*params1)
+        b = Coordinate(*params2)
+        assert a.euclidian_dist2(b) == expect
diff --new-file -ru apbs-3.0.0/apbs/test/test_chemistry/test_cell_list.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_cell_list.py
--- apbs-3.0.0/apbs/test/test_chemistry/test_cell_list.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_chemistry/test_cell_list.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,9 @@
+from apbs.chemistry import CellList
+from apbs.test.test_chemistry.test_atom_list import TestAtomList, pdb_file
+import pytest
+
+
+class TestCellList(TestAtomList):
+    @pytest.mark.skip(reason="Needs test")
+    def test_cell_list_method(self):
+        pass
diff --new-file -ru apbs-3.0.0/apbs/test/test_geometry/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/__init__.py
--- apbs-3.0.0/apbs/test/test_geometry/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,4 @@
+from apbs.test.test_geometry.test_coordinate import *  # noqa F401
+from apbs.test.test_geometry.test_surface import *  # noqa F401
+from apbs.test.test_geometry.test_surface_point import *  # noqa F401
+from apbs.test.test_geometry.test_sphere import *  # noqa F401
diff --new-file -ru apbs-3.0.0/apbs/test/test_geometry/test_coordinate.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_coordinate.py
--- apbs-3.0.0/apbs/test/test_geometry/test_coordinate.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_coordinate.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,106 @@
+import numpy as np
+from apbs.geometry import Coordinate
+import pytest
+
+
+class TestCoordinate:
+    @pytest.mark.parametrize(
+        "args,expect",
+        [
+            ((0, 0, 0), np.array([0, 0, 0], dtype=np.float32)),
+            ((1, 2, 3), np.array([1, 2, 3], dtype=np.float32)),
+            (tuple(), np.array([0, 0, 0], dtype=np.float32)),
+        ],
+    )
+    def test_ctor(self, args, expect):
+        sut = Coordinate(*args)
+        assert (sut._data == expect).all()
+
+    @pytest.mark.parametrize("args", [range(1), range(2), range(4), range(5)])
+    def test_exceptions(self, args):
+        with pytest.raises(RuntimeError):
+            sut = Coordinate(*args)
+
+    def test_property_get(self):
+        sut = Coordinate(1, 2, 3)
+        assert sut.x == 1
+        assert sut.y == 2
+        assert sut.z == 3
+
+    def test_property_set(self):
+        sut = Coordinate(0, 0, 0)
+        assert sut.x == 0
+        assert sut.y == 0
+        assert sut.z == 0
+        sut.x = 1
+        sut.y = 2
+        sut.z = 3
+        assert sut.x == 1
+        assert sut.y == 2
+        assert sut.z == 3
+
+    def test_get_idx(self):
+        sut = Coordinate(0, 0, 0)
+        sut[0] = 1
+        sut[1] = 2
+        sut[2] = 3
+        assert sut.x == 1
+        assert sut.y == 2
+        assert sut.z == 3
+
+        with pytest.raises(IndexError):
+            sut[3] = 5
+
+    def test_operators(self):
+        lo = Coordinate(0, 0, 0)
+        hi = Coordinate(1, 1, 1)
+        assert hi > lo
+
+        same1 = Coordinate(0, 0, 0)
+        same2 = Coordinate(0, 0, 0)
+        assert same1 == same2
+
+        lo = Coordinate(0, 0, 0)
+        hi = Coordinate(1, 1, 1)
+        assert hi != lo
+
+        same1 = Coordinate(0, 0, 0)
+        same2 = Coordinate(0, 0, 0)
+        assert same1 <= same2
+        lo = Coordinate(0, 0, 0)
+        hi = Coordinate(1, 1, 1)
+        assert lo <= hi
+
+        same1 = Coordinate(0, 0, 0)
+        same2 = Coordinate(0, 0, 0)
+        assert same1 >= same2
+        lo = Coordinate(0, 0, 0)
+        hi = Coordinate(1, 1, 1)
+        assert lo <= hi
+
+        c = Coordinate(0, 0, 0)
+        assert c + 1 == Coordinate(1, 1, 1)
+
+        c = Coordinate(1, 1, 1)
+        assert c - 1 == Coordinate(0, 0, 0)
+
+        c = Coordinate(1, 1, 1)
+        assert c * 2 == Coordinate(2, 2, 2)
+
+        c = Coordinate(2, 2, 2)
+        assert c / 2 == Coordinate(1, 1, 1)
+
+    def test_any(self):
+        c = Coordinate(3, 2, 2)
+        assert c.any(lambda x: x > 2)
+
+        c = Coordinate(-1, 2, 2)
+        assert c.any(lambda x: x < 0)
+        assert c.any(lambda x: x == -1)
+
+    def test_all(self):
+        c = Coordinate(2, 2, 2)
+        assert c.all(lambda x: x == 2)
+
+        c = Coordinate(-1, 2, 2)
+        assert c.all(lambda x: x < 3)
diff --new-file -ru apbs-3.0.0/apbs/test/test_geometry/test_sphere.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_sphere.py
--- apbs-3.0.0/apbs/test/test_geometry/test_sphere.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_sphere.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,11 @@
+from apbs.geometry import Sphere
+import pytest
+
+
+class TestSphere:
+    @pytest.mark.skip(reason="Needs to be implemented.")
+    @pytest.mark.parametrize(
+        "npoints,expected", [(1e2, 0.0), (1e4, 0.0), (1e6, 0.0)]
+    )
+    def test_spherical_distribution(self, npoints, expected):
+        sut: Surface = Sphere.spherical_distribution(npoints)
diff --new-file -ru apbs-3.0.0/apbs/test/test_geometry/test_surface_point.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_surface_point.py
--- apbs-3.0.0/apbs/test/test_geometry/test_surface_point.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_surface_point.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,11 @@
+from apbs.geometry import SurfacePoint
+import pytest
+
+
+class TestSurface:
+    def test_is_on_surf(self):
+        sut = SurfacePoint(0, 0, 0)
+        assert not sut.is_on_surf
+
+        sut = SurfacePoint(0, 0, 0, is_on_surf=True)
+        assert sut.is_on_surf
diff --new-file -ru apbs-3.0.0/apbs/test/test_geometry/test_surface.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_surface.py
--- apbs-3.0.0/apbs/test/test_geometry/test_surface.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_geometry/test_surface.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+from apbs.geometry import Surface
+import pytest
+
+
+class TestSurface:
+    @pytest.mark.parametrize("npoints,idx", [(1, 1), (1, -2), (0, 0)])
+    def test_getitem_fails(self, npoints, idx):
+        sut = Surface(0.0, npoints)
+        with pytest.raises(IndexError):
+            tmp = sut[idx]
+
+    @pytest.mark.parametrize("npoints,idx", [(1, 1), (1, -2), (0, 0)])
+    def test_setitem_fails(self, npoints, idx):
+        sut = Surface(0.0, npoints)
+        tmp = 0
+        with pytest.raises(IndexError):
+            sut[idx] = tmp
diff --new-file -ru apbs-3.0.0/apbs/test/test_grid/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_grid/__init__.py
--- apbs-3.0.0/apbs/test/test_grid/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_grid/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,36 @@
+from apbs.geometry import Coordinate
+from apbs.grid import Grid, CurvatureFlag
+from typing import List
+import pytest
+
+
+class TestGrid:
+    def test_value(self, pt: Coordinate[float]):
+        pass
+
+    def test_curvature(self, pt: Coordinate[float], cflag: CurvatureFlag):
+        pass
+
+    def test_gradient(self, pt: Coordinate[float], grad: List[float]):
+        pass
+
+    def test_integrate(self):
+        pass
+
+    def test_norml1(self):
+        pass
+
+    def test_norml2(self):
+        pass
+
+    def test_norml_inf(self):
+        pass
+
+    def test_seminormH1(self):
+        pass
+
+    def test_normH1(self):
+        pass
+
+    def test_read_dx(self, fn: str):
+        pass
diff --new-file -ru apbs-3.0.0/apbs/test/test_multigrid/__init__.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_multigrid/__init__.py
--- apbs-3.0.0/apbs/test/test_multigrid/__init__.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/apbs/test/test_multigrid/__init__.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,8 @@
+from apbs.multigrid import MultiGrid  # noqa F401
+import pytest
+
+
+class TestMultiGrid:
+    @pytest.mark.skip(reason="Needs to be implemented")
+    def test_set_part(self):
+        pass
diff --new-file -ru apbs-3.0.0/appveyor.yml apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/appveyor.yml
--- apbs-3.0.0/appveyor.yml	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/appveyor.yml	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,145 @@
+version: 3.0.{build}
+
+branches:
+  only:
+    - master
+
+image:
+  - Visual Studio 2019
+
+clone_folder: c:\projects\source
+
+clone_depth: 5
+
+environment:
+  PYTHON: "C:\\Python37-x64"
+  APPVEYOR_RDP_PASSWORD: "RedRum666!"
+
+matrix:
+  fast_finish: false
+
+# cache:
+#  - C:\ProgramData\chocolatey\bin -> appveyor.yml # swig.exe
+#  - C:\ProgramData\chocolatey\lib -> appveyor.yml # supporting swig Lib files.
+  
+
+# For interactive debugging using Remote Desktop, you need the init, on_finish, and APPVEYOR_RDP_PASSWORD
+#   - https://www.appveyor.com/docs/how-to/rdp-to-build-worker/
+
+# init:
+#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
+
+# on_finish:
+#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
+
+install:
+  # Install non-python dependencies using chocolatey package manager
+  - IF NOT EXIST C:\ProgramData\chocolatey\bin\swig.exe choco install --ignorechecksum -f -r -y swig --version=4.0.0
+  #  - type C:\ProgramData\chocolatey\logs\chocolatey.log
+  - where /r C:\ProgramData\chocolatey swig.swg
+  - SET SWIG_DIR=C:\ProgramData\chocolatey\lib\swig\tools\install
+  - SET SWIG_EXECUTABLE=C:\ProgramData\chocolatey\lib\swig\tools\install\swig.exe
+  
+  # Add SWIG, Python, and CMake to PATH
+  - SET PATH=%PYTHON%;%PYTHON%\Scripts;C:\Program Files (x86)\CMake\bin;C:\projects\source\build\bin;C:\ProgramData\chocolatey\lib\swig\tools\install;C:\ProgramData\chocolatey\bin;%PATH%
+  - echo %PATH%
+  
+  # Check that we have the expected version and architecture for Python
+  - where /r C:\Python37-x64 python.exe
+  - python --version
+  - python -m pip install --upgrade pip
+
+  # Install the build dependencies of the project. If some dependencies contain
+  # compiled extensions and are not provided as pre-built wheel packages,
+  # pip will build them from source using the MSVC compiler matching the
+  # target Python version and architecture
+  - pip.exe install -r c:\projects\source\requirements.txt
+
+
+build_script:
+  #  Setup Visual Studio Environment for compiling, linking, and logging
+  - set MSBuildLogger="C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll"
+  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\vsdevcmd\core\vsdevcmd_start.bat"
+  - call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
+
+  # set
+  #  REM set VSDIR="C:\Program Files (x86)\Microsoft Visual Studio"
+  #  set VSDIR="C:\"
+  #  FOR /F "tokens=* USEBACKQ" %F IN (`where /r %VSDIR% vsdevcmd_start.bat`) DO (SET vsdevcmd="%F")
+  #  REM Should be something like C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\Common7\Tools\vsdevcmd\core\vsdevcmd_start.bat"
+  #  ECHO "VS DEV CMD BAT FILE = %vsdevcmd%"
+  #  call %vsdevcmd%
+  #  FOR /F "tokens=* USEBACKQ" %F IN (`where /r %VSDIR% vsvars64.bat`) DO (SET vsdevcmd="%F")
+  #  REM Should be something like "C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\VC\Auxiliary\Build\vcvars64.bat"
+  #  ECHO "VS VARS FILE = %vsdevcmd%"
+  #  call %vsdevcmd%
+
+  #  Get the external projects configured
+  - cd c:\projects\source
+  - git submodule init
+  - git submodule update
+
+  - echo "*****************************************************************************"
+  - echo PYBIND11_BUILD
+  - echo "*****************************************************************************"
+  - set pybind11_DIR=C:\projects\source\externals\pybind11\install
+  - cd externals/pybind11
+  - mkdir build
+  - mkdir install
+  - cd build
+
+  - echo "*****************************************************************************"
+  - echo PYBIND11_CONFIGURE
+  - echo "*****************************************************************************"
+  - cmake .. -DCMAKE_INSTALL_PREFIX=%pybind11_DIR% -DDOWNLOAD_CATCH=ON
+
+  - echo "*****************************************************************************"
+  - echo PYBIND11_MAKE_INSTALL
+  - echo "*****************************************************************************"
+  # cmake --build . --config Release --parallel 1 --target install -- /m:1 /v:diag /logger:%MSBuildLogger%
+  - cmake --build . --config Release --parallel 1 --target install -- /m:1 /logger:%MSBuildLogger%
+
+  - set pybind11_DIR=C:\projects\source\externals\pybind11\install\share\cmake\pybind11
+  - cd ..
+  - cd c:\projects\source
+  - mkdir build
+  - cd build
+
+  - echo "*****************************************************************************"
+  - echo APBS_CONFIG
+  - echo "*****************************************************************************"
+  - cmake --config Release -DPYBIND11_DIR=%pybind11_DIR% -DCMAKE_BUILD_TYPE=Release -DCMAKE_VERBOSE_MAKEFILE:BOOL=ON -DBUILD_TESTING=ON -DBUILD_TOOLS=ON -DCHECK_EPSILON=ON -DENABLE_FETK=OFF -DENABLE_BEM=ON -DENABLE_GEOFLOW=ON -DENABLE_INLINE=ON -DENABLE_PBAM=ON -DENABLE_PYTHON=OFF -DENABLE_TESTS=ON -DBUILD_SHARED_LIBS=OFF -DENABLE_VERBOSE_DEBUG=ON -DGET_NanoShaper=ON -G "Visual Studio 16 2019" -A x64 c:\projects\source
+
+  - echo "*****************************************************************************"
+  - echo APBS_CMAKE_OUTPUT
+  - echo "*****************************************************************************"
+  - if exist c:\projects\source\build\CMakeFiles\CMakeOutput.log type c:\projects\source\build\CMakeFiles\CMakeOutput.log
+
+  - echo "*****************************************************************************"
+  - echo APBS_CMAKE_ERROR
+  - echo "*****************************************************************************"
+  - if exist c:\projects\source\build\CMakeFiles\CMakeError.log type c:\projects\source\build\CMakeFiles\CMakeError.log
+
+  - echo "*****************************************************************************"
+  - echo APBS_MAKE_INSTALL
+  - echo "*****************************************************************************"
+  - cmake --build . --config Release --parallel 1 --target install -- /m:1 /logger:%MSBuildLogger%
+
+  - echo "*****************************************************************************"
+  - echo APBS_TEST
+  - echo "*****************************************************************************"
+  - ctest -C Release --verbose --output-on-failure
+
+  - echo "*****************************************************************************"
+  - echo APBS_PACKAGE
+  - echo "*****************************************************************************"
+  - cpack -C Release -G ZIP
+  - unzip -l APBS*.zip
+
+  - echo "*****************************************************************************"
+  - echo APBS_DONE
+  - echo "*****************************************************************************"
+
+on_failure: 
+  - if exist c:\projects\source\build\CMakeFiles\CMakeOutput.log type c:\projects\source\build\CMakeFiles\CMakeOutput.log
+  - if exist c:\projects\source\build\CMakeFiles\CMakeError.log type c:\projects\source\build\CMakeFiles\CMakeError.log
diff --new-file -ru apbs-3.0.0/.build.sh apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.build.sh
--- apbs-3.0.0/.build.sh	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.build.sh	2020-09-29 19:12:06.000000000 +0200
@@ -1,48 +1,92 @@
 #!/bin/bash
 
-#export CC=clang
-#export CXX=clang
-#export CMAKE_C_COMPILER=clang
-#export CMAKE_CXX_COMPILER=clang
-#export CMAKE_C_LINK_EXECUTABLE=clang
-#export CMAKE_CXX_LINK_EXECUTABLE=clang
+export CC=gcc
+export CXX=g++
+#export CMAKE_C_COMPILER=$CC
+#export CMAKE_CXX_COMPILER=$CXX
+#export CMAKE_C_LINK_EXECUTABLE=$CC
+#export CMAKE_CXX_LINK_EXECUTABLE=$CXX
+
+export SRC_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
+export COVERAGE="-g -O0 -fprofile-arcs -ftest-coverage"
+export COVERAGE=""
+export BUILD_DIR="$SRC_DIR/build"
 export INSTALL_DIR=$HOME/apbs
-rm -rf $INSTALL_DIR                             || exit 1
-mkdir -p $INSTALL_DIR                           || exit 1
-rm -rf build                                    || exit 1
-mkdir build                                     || exit 1
-cd build                                        || exit 1
-#cmake -S .. -B build --trace-source=../CMakeLists.txt --trace-expand \
-#      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
-cmake                                     \
-      -DCMAKE_BUILD_TYPE=Release          \
-      -DENABLE_GEOFLOW=ON                 \
-      -DENABLE_BEM=ON                     \
-      -DENABLE_FETK=ON                    \
-      -DENABLE_OPENMP=ON                  \
-      -DENABLE_PBAM=ON                    \
-      -DENABLE_PBSAM=ON                   \
-      -DENABLE_PYTHON=ON                  \
-      -DENABLE_TESTS=ON                   \
-      -DBUILD_SHARED_LIBS=ON              \
-      -DBUILD_DOC=OFF                     \
-      ..                                        || exit 1
-VERBOSE=1 make -j 1                             || exit 1
-#VERBOSE=1 make -j 1 install                     || exit 1
-#      -DCMAKE_C_FLAGS="-fPIC"             \
-ctest  #                                         || exit 1
-#cd ../tests                                     || exit 1
-#TESTNAMES="actin-dimer-auto actin-dimer-parallel alkanes born FKBP geoflow hca-bind ion-pmf ion-protein ionize pka-lig point-pmf solv protein-rna"
-#TESTNAMES="actin-dimer-auto"
-##export LD_LIBRARY_PATH=${INSTALL_DIR}/lib
-#ldd ${INSTALL_DIR}/bin/apbs
-#for testname in `echo $TESTNAMES`
-#do
-#  pushd .
-#  echo bash run_travis_test.sh $INSTALL_DIR/bin $testname
-#       bash run_travis_test.sh $INSTALL_DIR/bin $testname  || exit 1
-#  popd
-#done
+export PATH=$INSTALL_DIR:$PATH
+export RELEASE_TYPE=Debug
+export RELEASE_TYPE=Release
+
+echo "==================================== WHERE AM I ==================================== "
+pwd
+echo "==================================== VERSIONS: ==================================== "
+echo "==================================== PYTHON VERSION"
+python -c "import sys; print(sys.version)"
+echo "==================================== CMAKE VERSION"
+cmake --version
+echo "==================================== C Compiler VERSION"
+$CMAKE_C_COMPILER --version
+echo "==================================== C++ Compiler VERSION"
+$CMAKE_CXX_COMPILER --version
+echo "==================================== SWIG VERSION"
+swig -version
+echo "==================================== Install Python requirements ==================================== "
+pip3 install -U pip
+pip3 install -U pytest
+pip3 install -U virtualenv
+pip3 install -U numpy
+pip3 install -r requirements.txt
+#  Just build APBS for now
+echo "==================================== PWD FOR TOP DIR ==================================== "
+pwd
+echo "==================================== Get External SubModules ==================================== "
+git submodule init
+git submodule update
+echo "==================================== BUILD =============================================== "
+
+rm -rf $BUILD_DIR                                         || exit 1
+rm -rf $INSTALL_DIR                                       || exit 1
+mkdir -p $BUILD_DIR                                       || exit 1
+mkdir -p $INSTALL_DIR                                     || exit 1
+#  Build pybind11
+pushd $(pwd)/externals/pybind11
+[ -d build ] || mkdir -p build
+[ -d install ] || mkdir -p install
+pushd build
+cmake                              \
+      -DDOWNLOAD_CATCH=ON          \
+      -DPYBIND11_TEST=OFF          \
+      -DCMAKE_INSTALL_PREFIX=$(python3 -c "import os,sys; print(os.path.realpath(sys.argv[1]))" ../install) \
+      ..
+make -j install
+popd
+export pybind11_DIR=$(python3 -c "import os,sys; print(os.path.realpath(sys.argv[1]))" ./install)
+popd
+cd $BUILD_DIR                                             || exit 1
+#cmake -S .. -B $BUILD_DIR --trace-source=../CMakeLists.txt --trace-expand \
+cmake                                                     \
+      -DBUILD_DOC=OFF                                     \
+      -DBUILD_SHARED_LIBS=OFF                             \
+      -DCMAKE_C_FLAGS="${CMAKE_C_FLAGS} ${COVERAGE}"      \
+      -DCMAKE_CXX_FLAGS="${CMAKE_CXX_FLAGS} ${COVERAGE}"  \
+      -DCMAKE_BUILD_TYPE=$RELEASE_TYPE                    \
+      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR                 \
+      -DENABLE_BEM=ON                                     \
+      -DENABLE_GEOFLOW=ON                                 \
+      -DENABLE_FETK=ON                                    \
+      -DENABLE_OPENMP=ON                                  \
+      -DENABLE_PBAM=ON                                    \
+      -DENABLE_PBSAM=ON                                   \
+      -DENABLE_PYTHON=OFF                                  \
+      -DENABLE_TESTS=ON                                   \
+      -DENABLE_TINKER=OFF                                 \
+      ..                                                  || exit 1
+
+VERBOSE=1 make -j 1                                       || exit 1
+VERBOSE=1 make -j 1 install                               #|| exit 1
+export PATH="$INSTALL_DIR/bin:$PATH"
+# Run a single test if it fails using the following:
+# ctest -VV -R pbam_test
+ctest -C Release --output-on-failure                      #|| exit 1
 
-cpack -C Release    || exit 
-unzip -l APBS*.zip
\ No newline at end of file
+cpack -C Release -G ZIP                                   || exit 1
+unzip -l APBS*.zip
diff --new-file -ru apbs-3.0.0/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/CMakeLists.txt
--- apbs-3.0.0/CMakeLists.txt	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/CMakeLists.txt	2020-09-29 19:12:06.000000000 +0200
@@ -25,7 +25,7 @@
 
 set(APBS_VERSION     "${CMAKE_MAJOR_VERSION}.${CMAKE_MICRO_VERSION}")
 set(PACKAGE_STRING   "${APBS_VERSION}")
-set(CMAKE_BUILD_TYPE "Release")
+set(CMAKE_BUILD_TYPE "RELWITHDEBINFO")
 
 ################################################################################
 #  NOTE: Overwrite the RPATH information during the install from
@@ -57,8 +57,14 @@
 ################################################################################
 message(STATUS "Setting project paths")
 
-set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
-set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Werror -fpermissive -fPIC")
+set(CMAKE_CXX_STANDARD 17)
+if(WIN32)
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -W4")
+    set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /STACK:100000000")
+else()
+    set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fPIC")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Wall -Wpedantic -fpermissive -fPIC")
+endif()
 if(APPLE AND BUILD_SHARED_LIBS)
   set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -undefined dynamic_lookup")
 endif()
@@ -119,8 +125,7 @@
 
 
 ################################################################################
-# Debian/Ubuntu hack for                                                       #
-# https://github.com/Electrostatics/apbs-pdb2pqr/issues/364                    #
+# Debian/Ubuntu hack                                                           #
 ################################################################################
 if(EXISTS "/etc/debian_version" AND
   "${CMAKE_CXX_COMPILER_ID}" STREQUAL "GNU")
@@ -228,10 +233,9 @@
 
 
 ################################################################################
-# Optionally copy MSMS/nanoshaper exectutables
+# Optionally copy NanoShaper exectutable
 # the actual grab is later for PBSAM enable
 ################################################################################
-option(GET_MSMS "Put MSMS executable in the build directory" OFF)
 option(GET_NanoShaper "Put NanoShaper executable in the build directory" OFF)
 
 ################################################################################
@@ -245,7 +249,6 @@
     set(TABI bem)
     set(TABI_PATH ${EXTERNALS_PATH}/${TABI})
 
-    set(GET_MSMS ON) #CACHE BOOL "Grabbing msms path"
     set(GET_NanoShaper ON) #CACHE BOOL "Grabbing NanoShaper path"
 
     if(WIN32)
@@ -299,6 +302,13 @@
     endif()
 endif()
 
+
+################################################################################
+# Handle the finite element solver dependencies                                #
+################################################################################
+option(ENABLE_FETK "Enable the finite element solver" OFF)
+
+
 ################################################################################
 # Deal with MALOC                                                              #
 # Note that we depend exclusively on the MALOC that is in our external FETK    #
@@ -314,16 +324,10 @@
                         ${EXTERNALS_PATH}/fetk/maloc/src/psh)
     list(APPEND APBS_LIB_DIRS ${EXTERNALS_PATH}/fetk/maloc/lib)
     list(APPEND APBS_LIBS maloc)
-endif()
-
-
-################################################################################
-# Handle the finite element solver dependencies                                #
-################################################################################
-option(ENABLE_FETK "Enable the finite element solver" OFF)
-
-if(ENABLE_FETK)
-
+    if (WIN32)
+      list(APPEND MALOC_LIBS wsock32 WS2_32)
+    endif()
+else()
     if(WIN32)
         message(FATAL_ERROR "FETK will not built on Windows because it uses autotools!")
     else()
@@ -390,8 +394,7 @@
                                   vf2c
                                   tetgen
                                   triangle
-                                  readline
-                                  termcap)
+                                  readline)
 
         if(BUILD_SHARED_LIBS)
             install(DIRECTORY ${install_dir}/lib/
@@ -467,6 +470,9 @@
     ExternalProject_Get_Property(pbam binary_dir)
     add_definitions(-DENABLE_PBAM)
     list(APPEND APBS_LIB_DIRS "${binary_dir}/pbam/src")
+    if (WIN32)
+        list(APPEND APBS_LIB_DIRS "${binary_dir}/pbam/src/${CMAKE_BUILD_TYPE}")
+    endif()
     list(APPEND APBS_LIBS PBAMLib)
     include_directories(${EXTERNALS_PATH}/pb_s_am/pbam/src)
     include_directories(${EXTERNALS_PATH}/pb_s_am/pb_shared/src)
@@ -487,8 +493,6 @@
 if(ENABLE_PBSAM)
     message(STATUS "Building PBSAM")
     add_definitions(-DPBSAM_APBS)
-    set(GET_MSMS ON) #CACHE BOOL "Grabbing msms path")
-    message(STATUS "copying msms ${GET_MSMS}")
 
     list(APPEND CMAKE_MODULE_PATH ${EXTERNALS_PATH}/pb_s_am/cmake/modules)
     include(${EXTERNALS_PATH}/pb_s_am/cmake/Utils.cmake)
@@ -532,62 +536,31 @@
 
 
 ################################################################################
-# Getting msms and /or nanoshaper
+# Getting nanoshaper binary
 ################################################################################
-if(GET_MSMS)
-    message(STATUS "Copying MSMS exectuable")
-    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-        # Mac OS X specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/msms/msms_MacOSX_2.6.1/msms.MacOSX.2.6.1
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-        file(RENAME ${EXECUTABLE_OUTPUT_PATH}/msms.MacOSX.2.6.1
-             ${EXECUTABLE_OUTPUT_PATH}/msms)
-    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-        # Linux specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/msms/msms_i86_64Linux2_2.6.1/msms.x86_64Linux2.2.6.1.staticgcc
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-        file(RENAME ${EXECUTABLE_OUTPUT_PATH}/msms.x86_64Linux2.2.6.1.staticgcc
-             ${EXECUTABLE_OUTPUT_PATH}/msms)
-    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-        # Windows specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/msms/msms_win32_2.6.1/msms.exe
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-    endif()
-
-    if(WIN32)
-        install(PROGRAMS ${EXECUTABLE_OUTPUT_PATH}/msms.exe
-                DESTINATION ${EXECUTABLE_INSTALL_PATH})
-    else()
-        install(PROGRAMS ${EXECUTABLE_OUTPUT_PATH}/msms
-                DESTINATION ${EXECUTABLE_INSTALL_PATH})
-    endif()
-endif()
-
+set(MESH_ROOT_URL_PATH "https://github.com/lwwilson1/mesh_routines/releases/download/v1.6")
 
 if(GET_NanoShaper)
-    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")
-        # Mac OS X specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/NanoShaper/OSX/NanoShaper
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")
-        # Linux specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/NanoShaper/Linux64/NanoShaper
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows")
-        # Windows specific code
-        file(COPY ${EXTERNALS_PATH}/mesh_routines/NanoShaper/win32/NanoShaper32.exe
-             DESTINATION ${EXECUTABLE_OUTPUT_PATH})
-        file(RENAME ${EXECUTABLE_OUTPUT_PATH}/NanoShaper32.exe
-             ${EXECUTABLE_OUTPUT_PATH}/NanoShaper.exe)
-    endif()
-
-    if(WIN32)
-        install(PROGRAMS ${EXECUTABLE_OUTPUT_PATH}/Nanoshaper.exe
-                DESTINATION ${EXECUTABLE_INSTALL_PATH})
-    else()
-        install(PROGRAMS ${EXECUTABLE_OUTPUT_PATH}/NanoShaper
-                DESTINATION ${EXECUTABLE_INSTALL_PATH})
-    endif()
+    set(NANOSHAPER_FULL_URL_PATH)
+    set(NANOSHAPER_RAW_BINARY_NAME "NanoShaper")
+    message(STATUS "Copying NanoShaper exectuable")
+    if(${CMAKE_SYSTEM_NAME} MATCHES "Darwin")      # Mac OS X specific code
+        set(NANOSHAPER_FULL_URL_PATH "${MESH_ROOT_URL_PATH}/NanoShaper_OSX")
+    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Linux")   # Linux specific code
+        set(NANOSHAPER_FULL_URL_PATH "${MESH_ROOT_URL_PATH}/NanoShaper_Linux64")
+    elseif(${CMAKE_SYSTEM_NAME} MATCHES "Windows") # Windows specific code
+        set(NANOSHAPER_FULL_URL_PATH "${MESH_ROOT_URL_PATH}/NanoShaper32.exe")
+        set(NANOSHAPER_RAW_BINARY_NAME "NanoShaper.exe")
+    endif()
+
+    if (NOT EXISTS "${EXECUTABLE_OUTPUT_PATH}/${NANOSHAPER_RAW_BINARY_NAME}")
+        file(DOWNLOAD ${NANOSHAPER_FULL_URL_PATH} ${EXECUTABLE_OUTPUT_PATH}/${NANOSHAPER_RAW_BINARY_NAME})
+        message(STATUS "NanoShaper Download: ${NANOSHAPER_FULL_URL_PATH} ${EXECUTABLE_OUTPUT_PATH}/${NANOSHAPER_RAW_BINARY_NAME}")
+    endif()
+
+    install(PROGRAMS ${EXECUTABLE_OUTPUT_PATH}/${NANOSHAPER_RAW_BINARY_NAME}
+            DESTINATION ${EXECUTABLE_INSTALL_PATH})
+    message(STATUS "NanoShaper install: ${EXECUTABLE_OUTPUT_PATH}/${NANOSHAPER_RAW_BINARY_NAME} ${EXECUTABLE_INSTALL_PATH}")
 endif()
 
 
@@ -631,7 +604,7 @@
 option(ENABLE_DEBUG "Enable debugging mode" OFF)
 
 if(ENABLE_DEBUG)
-    set(CMAKE_BUILD_TYPE Debug)
+    set(CMAKE_BUILD_TYPE "Debug")
     set(DEBUG 1)
     message(STATUS "Debugging compilation enabled")
 endif()
@@ -740,7 +713,7 @@
 endif()
 
 if(NOT CYGWIN AND NOT MINGW AND WIN32)
-    list(APPEND APBS_LIBS wsock32)
+    list(APPEND APBS_LIBS wsock32 WS2_32)
     ADD_DEFINITIONS("/D _CRT_SECURE_NO_WARNINGS")
 endif()
 
@@ -760,7 +733,7 @@
 
 if(BUILD_DOC)
     message(STATUS "Building documentation enabled")
-    add_subdirectory(doc)
+    add_subdirectory(docs)
 endif()
 
 
@@ -778,14 +751,14 @@
 ################################################################################
 # Set up additional directories to install                                     #
 ################################################################################
-install(DIRECTORY ${APBS_ROOT}/doc
+install(DIRECTORY ${APBS_ROOT}/docs
         DESTINATION ${SHARE_INSTALL_PATH}
         PATTERN "programmer" EXCLUDE
         PATTERN "CMakeLists.txt" EXCLUDE)
 
 if(BUILD_DOC)
-    install(DIRECTORY ${APBS_BUILD}/doc/programmer
-            DESTINATION ${SHARE_INSTALL_PATH}/doc
+    install(DIRECTORY ${APBS_BUILD}/docs/programmer
+            DESTINATION ${SHARE_INSTALL_PATH}/docs
             PATTERN "Doxyfile" EXCLUDE
             PATTERN "latex" EXCLUDE
             PATTERN "mainpage.h" EXCLUDE)
@@ -838,40 +811,9 @@
 option(ENABLE_TESTS "Enable tests" ON)
 if(${ENABLE_TESTS})
   enable_testing()
-  #add_subdirectory(tests)
+  add_subdirectory(tests)
 endif()
 
-set(TEST_CASES)
-if(EXISTS ${CMAKE_SOURCE_DIR}/tests/test_cases.cfg)
-    file(READ ${CMAKE_SOURCE_DIR}/tests/test_cases.cfg TEST_CASES_FILE)
-    string(REPLACE "\n" ";" TEST_CASES_LINES ${TEST_CASES_FILE}) 
-    foreach(_line ${TEST_CASES_LINES})
-        if(${_line} MATCHES "^\\[")
-            string(REPLACE "[" "" _line ${_line})
-            string(REPLACE "]" "" _line ${_line})
-            list(APPEND TEST_CASES ${_line})
-        endif()
-    endforeach()
-endif()
-
-find_package(Python3 COMPONENTS Interpreter)
-if(${Python3_FOUND})
-    set(APBS_BINARY "apbs")
-    if(CMAKE_HOST_WIN32)
-      set(APBS_BINARY "${CMAKE_BUILD_TYPE}/apbs.exe")
-    endif()
-    message(STATUS "******* Python3 FOUND ${Python3_EXECUTABLE}")
-    foreach(_test ${TEST_CASES})
-        message(STATUS "TEST ${_test}_test COMMAND ${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/tests/apbs_tester.py -c ${CMAKE_SOURCE_DIR}/tests/test_cases.cfg -e ${CMAKE_BINARY_DIR}/${APBS_BINARY} -t ${_test}")
-        add_test(NAME ${_test}_test COMMAND "${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/tests/apbs_tester.py -c ${CMAKE_SOURCE_DIR}/tests/test_cases.cfg -e ${CMAKE_BINARY_DIR}/${APBS_BINARY} -t ${_test}")
-    endforeach()
-else()
-    message(FATAL "******* Python3 NOT FOUND *****************")
-endif()
-
-include (CTest)
-
-
 ###############################################################################
 #####  Generate Packages
 ###############################################################################
@@ -880,7 +822,7 @@
 set(CPACK_PACKAGE_NAME                 "${PACKAGE_NAME}")
 set(CPACK_PACKAGE_DESCRIPTION          "APBS - Adaptive Poisson Boltzmann Solver")
 
-set(CPACK_RESOURCE_FILE_LICENSE        "${PROJECT_SOURCE_DIR}/../LICENSE.md")
+set(CPACK_RESOURCE_FILE_LICENSE        "${PROJECT_SOURCE_DIR}/COPYING")
 set(CPACK_PACKAGE_DESCRIPTION_FILE     "${PROJECT_SOURCE_DIR}/README.md")
 
 set(CPACK_SOURCE_IGNORE_FILES          "${PROJECT_BINARY_DIR};/.git/;.gitignore;/tools/matlab/")
@@ -890,43 +832,12 @@
 #  NOTE: The following is tempting but does not work!
 # set(FULL_PACKAGE_NAME                  "${PACKAGE_NAME}-${MAJOR_VERSION}.${MINOR_VERSION}.${MICRO_VERSION}")
 set(CPACK_PACKAGE_VENDOR               "PNNL")
-set(CPACK_PACKAGE_CONTACT              "APBS - https://github.com/Electrostatics/apbs-pdb2pqr")
+set(CPACK_PACKAGE_CONTACT              "APBS - https://github.com/Electrostatics/apbs")
 set(CPACK_PACKAGE_FILE_NAME            "${PACKAGE_NAME}-${APBS_VERSION}.${CMAKE_HOST_SYSTEM_NAME}")
 set(CPACK_STRIP_FILES                   True)
 
-if(CMAKE_HOST_WIN32)
-    # From: https://martinrotter.github.io/it-programming/2014/05/09/integrating-nsis-cmake/
-    SET(CPACK_NSIS_PACKAGE_NAME              "${PACKAGE_NAME}-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_MICRO_VERSION}")
-    SET(CPACK_NSIS_DISPLAY_NAME              "${PACKAGE_NAME}-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_MICRO_VERSION}")
-    SET(CPACK_PACKAGE_INSTALL_DIRECTORY      "${PACKAGE_NAME}-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_MICRO_VERSION}")
-    SET(CPACK_NSIS_INSTALL_ROOT              "C:")
-    set(CPACK_PACKAGE_INSTALL_REGISTRY_KEY   "${PACKAGE_NAME}-${MAJOR_VERSION}.${MINOR_VERSION}.${MICRO_VERSION}")
-    # set(CPACK_NSIS_HELP_LINK                 "${APP_URL}")
-    # set(CPACK_NSIS_URL_INFO_ABOUT            "${APP_URL}")
-    # set(CPACK_NSIS_CONTACT                   "${APP_EMAIL}")
-    list(APPEND CPACK_GENERATOR              "NSIS")
-endif()
-
-#if(UNIX)
-#  if(CMAKE_SYSTEM_NAME MATCHES Linux)
-#    if(CMAKE_OS_NAME MATCHES ubuntu)
-#      list(APPEND CPACK_GENERATOR            "DEB")
-#      set(CPACK_DEBIAN_PACKAGE_MAINTAINER    "${CPACK_PACKAGE_CONTACT}")
-#      set(CPACK_DEBIAN_PACKAGE_SECTION       "other")
-#      set(CPACK_DEBIAN_PACKAGE_PRIORITY      "optional")
-#    elseif(CMAKE_OS_NAME MATCHES centos)
-#      list(APPEND CPACK_GENERATOR            "RPM")
-#      set(CPACK_RPM_PACKAGE_RELEASE          "1")
-#    endif()
-#  endif()
-#endif()
-
-if(CMAKE_HOST_UNIX)
-    list(APPEND CPACK_GENERATOR              "ZIP")
-    set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY      True)
-    #list(APPEND CPACK_GENERATOR              "DragNDrop")
-    #set(CPACK_DMG_VOLUME_NAME                "${PACKAGE_NAME}-${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}.${CMAKE_MICRO_VERSION}")
-endif()
+list(APPEND CPACK_GENERATOR            "ZIP")
+set(CPACK_INCLUDE_TOPLEVEL_DIRECTORY    True)
 
 if(CPACK_GENERATOR MATCHES "^(7Z|TBZ2|TGZ|TXZ|TZ|TZST|ZIP)$")
     set(CPACK_TOPLEVEL_TAG ${CPACK_PACKAGE_NAME})
diff --new-file -ru apbs-3.0.0/CODE_OF_CONDUCT.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/CODE_OF_CONDUCT.md
--- apbs-3.0.0/CODE_OF_CONDUCT.md	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/CODE_OF_CONDUCT.md	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,76 @@
+# Contributor Covenant Code of Conduct
+
+## Our Pledge
+
+In the interest of fostering an open and welcoming environment, we as
+contributors and maintainers pledge to making participation in our project and
+our community a harassment-free experience for everyone, regardless of age, body
+size, disability, ethnicity, sex characteristics, gender identity and expression,
+level of experience, education, socio-economic status, nationality, personal
+appearance, race, religion, or sexual identity and orientation.
+
+## Our Standards
+
+Examples of behavior that contributes to creating a positive environment
+include:
+
+* Using welcoming and inclusive language
+* Being respectful of differing viewpoints and experiences
+* Gracefully accepting constructive criticism
+* Focusing on what is best for the community
+* Showing empathy towards other community members
+
+Examples of unacceptable behavior by participants include:
+
+* The use of sexualized language or imagery and unwelcome sexual attention or
+ advances
+* Trolling, insulting/derogatory comments, and personal or political attacks
+* Public or private harassment
+* Publishing others' private information, such as a physical or electronic
+ address, without explicit permission
+* Other conduct which could reasonably be considered inappropriate in a
+ professional setting
+
+## Our Responsibilities
+
+Project maintainers are responsible for clarifying the standards of acceptable
+behavior and are expected to take appropriate and fair corrective action in
+response to any instances of unacceptable behavior.
+
+Project maintainers have the right and responsibility to remove, edit, or
+reject comments, commits, code, wiki edits, issues, and other contributions
+that are not aligned to this Code of Conduct, or to ban temporarily or
+permanently any contributor for other behaviors that they deem inappropriate,
+threatening, offensive, or harmful.
+
+## Scope
+
+This Code of Conduct applies both within project spaces and in public spaces
+when an individual is representing the project or its community. Examples of
+representing a project or community include using an official project e-mail
+address, posting via an official social media account, or acting as an appointed
+representative at an online or offline event. Representation of a project may be
+further defined and clarified by project maintainers.
+
+## Enforcement
+
+Instances of abusive, harassing, or otherwise unacceptable behavior may be
+reported by contacting the project team at nathanandrewbaker@gmail.com. All
+complaints will be reviewed and investigated and will result in a response that
+is deemed necessary and appropriate to the circumstances. The project team is
+obligated to maintain confidentiality with regard to the reporter of an incident.
+Further details of specific enforcement policies may be posted separately.
+
+Project maintainers who do not follow or enforce the Code of Conduct in good
+faith may face temporary or permanent repercussions as determined by other
+members of the project's leadership.
+
+## Attribution
+
+This Code of Conduct is adapted from the [Contributor Covenant][homepage], version 1.4,
+available at https://www.contributor-covenant.org/version/1/4/code-of-conduct.html
+
+[homepage]: https://www.contributor-covenant.org
+
+For answers to common questions about this code of conduct, see
+https://www.contributor-covenant.org/faq
diff --new-file -ru apbs-3.0.0/doc/ChangeLog.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/ChangeLog.md
--- apbs-3.0.0/doc/ChangeLog.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/ChangeLog.md	1970-01-01 01:00:00.000000000 +0100
@@ -1,46 +0,0 @@
-APBS 3.0 CHANGELOG
-==================
-
-These are notes for APBS version 3.0
-------------------------------------
-
-* Binary releases may be found on [GitHub](https://github.com/Electrostatics/apbs-pdb2pqr/releases) and on [SourceForge](http://sourceforge.net/projects/apbs/files/apbs).
-
-### New Features
-
-* Poisson-Boltzmann Analytical Method (PBAM, see [Lotan & Head-Gordon](http://pubs.acs.org/doi/full/10.1021/ct050263p)) and Semi-Analytical Method (PBSAM, see [Yap & Head-Gordon](http://pubs.acs.org/doi/abs/10.1021/ct100145f)) integrated with APBS. PBSAM is currently only available in the Linux and OS X distributions.
-    - Examples are located with the APBS examples in the pbam/ and pbsam/ directories.
-    - More information and documentation may be found in the [PBAM](http://www.poissonboltzmann.org/external_contributions/extern-pbam/) and [PBSAM](http://www.poissonboltzmann.org/external_contributions/extern-pbsam/) sections of the APBS-PDB2PQR website.
-* Tree-Code Accelerated Boundary Integral Poisson-Boltzmann Method (TABI-PB) integrated with APBS.(See [Geng & Krasny](http://www.sciencedirect.com/science/article/pii/S0021999113002404))
-    - Examples are located with the APBS examples in the bem/, bem-pKa/, and bem-binding-energies/ folders
-    - Included NanoShaper alternative to MSMS.
-    - More information and documentation may be found in the [Contributions](http://www.poissonboltzmann.org/external_contributions/extern-tabi/) section of the APBS-PDB2PQR website
-* Added binary DX format support to the appropriate APBS tools.
-* Test suite amended and expanded.
-* Removed hard-coded limitation to number of grid points used to determine surface accessibility.
-
-### Known Bugs / Limitations
-
-* PBSAM not building in windows due to C standard restrictions in the Microsoft compiler implementation.
-
-### Minor Updates
-
-* PB(S)AM now requires the key work 'pos' for the term argument.
-* PB(S)AM 'surf' keyword has been replaced with the 'usemesh' keyword.
-* PB(S)AM 'salt' keyword has been replaced with the 'ion' keyword.
-* PB(S)AM dynamics parameters are no longer accepted in the ELEC section.
-* PB(S)AM now has only one type of ELEC method: pb(s)am_auto.
-* PB(S)AM 'gridpts' keyword has been replaced with 'dime' keyword.
-* PB(S)AM 'dx' and '3dmap' keywords are deprecated to use the 'write' one instead.
-* BEM mesh keyword now requires method names instead of just integer values.
-* GEOFLOW ELEC type has been change from 'geoflow-auto' to 'geoflow'.
-* Fixed miscellaneous Windows build issues.
-* Update the build configurations for the Pythons libraries.
-
-### Notes
-
-* The following are included in APBS as Git submodules:
-- Geometric Flow ([link](https://github.com/Electrostatics/geoflow_c/tree/e8ce510a670e0b7f3501e72be6141fc20328f947))
-- FETk ([link](https://github.com/Electrostatics/FETK/tree/0c6fdeabe8929acea7481cb1480b5706b343b7e0))
-- PBAM/PBSAM ([link](https://github.com/davas301/pb_solvers/tree/4805cbec02b30e9bae927f03ac2fecd3217c4dad))
-- TABI-PB ([link](https://github.com/lwwilson1/TABIPB/tree/941eff91acd4153a06764e34d29b633c6e3b980f))
diff --new-file -ru apbs-3.0.0/doc/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/CMakeLists.txt
--- apbs-3.0.0/doc/CMakeLists.txt	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,44 +0,0 @@
-################################################################################
-# TODO:  Generate license.html
-################################################################################
-
-find_package(Doxygen)
-
-if(Doxygen_FOUND)
-	configure_file(
-	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/Doxyfile.in
-	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
-	    ESCAPE_QUOTES
-	    )
-	
-	configure_file(
-	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/programmer.html.in
-	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/programmer.html
-	    )
-	
-	configure_file(
-	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/mainpage.h.in
-	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/mainpage.h
-	    )
-	
-	add_custom_target(
-	    doc
-	    ALL
-	    #COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
-	    COMMAND doxygen ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
-	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer
-	    COMMENT "Generating documentation with Doxygen" VERBATIM
-	  )
-
-	#file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer/latex)
-	
-	add_custom_target(
-	    doc-pdf
-	    ALL
-	    COMMAND make
-	    COMMAND cp refman.pdf ../programmer.pdf
-	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer/latex
-	    DEPENDS doc
-	    COMMENT "Generating pdf documentation" VERBATIM
-	)
-endif(Doxygen_FOUND)
diff --new-file -ru apbs-3.0.0/doc/data-ontology/catalog-v001.xml apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/catalog-v001.xml
--- apbs-3.0.0/doc/data-ontology/catalog-v001.xml	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/catalog-v001.xml	1970-01-01 01:00:00.000000000 +0100
@@ -1,4 +0,0 @@
-<?xml version="1.0" encoding="UTF-8" standalone="no"?>
-<catalog prefer="public" xmlns="urn:oasis:names:tc:entity:xmlns:xml:catalog">
-    <group id="Folder Repository, directory=, recursive=true, Auto-Update=true, version=2" prefer="public" xml:base=""/>
-</catalog>
diff --new-file -ru apbs-3.0.0/doc/data-ontology/data-ontology.ttl apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/data-ontology.ttl
--- apbs-3.0.0/doc/data-ontology/data-ontology.ttl	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/data-ontology.ttl	1970-01-01 01:00:00.000000000 +0100
@@ -1,748 +0,0 @@
-@prefix : <http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#> .
-@prefix owl: <http://www.w3.org/2002/07/owl#> .
-@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
-@prefix xml: <http://www.w3.org/XML/1998/namespace> .
-@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
-@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
-@base <http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr> .
-
-<http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr> rdf:type owl:Ontology .
-
-
-#################################################################
-#
-#    Object Properties
-#
-#################################################################
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#hasBoundary
-
-:hasBoundary rdf:type owl:ObjectProperty ;
-             
-             rdfs:range :Boundary ;
-             
-             rdfs:domain :Manifold ;
-             
-             rdfs:subPropertyOf :hasThing .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#hasComponent
-
-:hasComponent rdf:type owl:ObjectProperty ;
-              
-              rdfs:subPropertyOf :hasThing .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#hasDomain
-
-:hasDomain rdf:type owl:ObjectProperty ;
-           
-           rdfs:domain :Operator ;
-           
-           rdfs:range :Operator_domain ;
-           
-           rdfs:subPropertyOf :hasThing .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#hasRange
-
-:hasRange rdf:type owl:ObjectProperty ;
-          
-          rdfs:domain :Operator ;
-          
-          rdfs:range :Operator_range ;
-          
-          rdfs:subPropertyOf :hasThing .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#hasThing
-
-:hasThing rdf:type owl:ObjectProperty .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#isBoundaryOf
-
-:isBoundaryOf rdf:type owl:ObjectProperty ;
-              
-              rdfs:domain :Boundary ;
-              
-              rdfs:range :Manifold ;
-              
-              rdfs:subPropertyOf :isThingOf .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#isComponentOf
-
-:isComponentOf rdf:type owl:ObjectProperty ;
-               
-               rdfs:subPropertyOf :isThingOf .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#isDomainOf
-
-:isDomainOf rdf:type owl:ObjectProperty ;
-            
-            rdfs:range :Operator ;
-            
-            rdfs:domain :Operator_domain ;
-            
-            rdfs:subPropertyOf :isThingOf .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#isRangeOf
-
-:isRangeOf rdf:type owl:ObjectProperty ;
-           
-           rdfs:range :Operator ;
-           
-           rdfs:domain :Operator_range ;
-           
-           rdfs:subPropertyOf :isThingOf .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#isThingOf
-
-:isThingOf rdf:type owl:ObjectProperty .
-
-
-
-
-
-#################################################################
-#
-#    Classes
-#
-#################################################################
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Bilinear_form
-
-:Bilinear_form rdf:type owl:Class ;
-               
-               rdfs:subClassOf :Form .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Boundary
-
-:Boundary rdf:type owl:Class ;
-          
-          rdfs:subClassOf :Manifold ;
-          
-          rdfs:comment "\"A manifold with boundary is a manifold with an edge.\""^^xsd:string ,
-                       "https://en.wikipedia.org/wiki/Manifold#Manifold_with_boundary"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Cube_surface
-
-:Cube_surface rdf:type owl:Class ;
-              
-              rdfs:subClassOf :Three_dimensional_surface ,
-                              [ rdf:type owl:Restriction ;
-                                owl:onProperty :isBoundaryOf ;
-                                owl:someValuesFrom :Cube_volume
-                              ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Cube_volume
-
-:Cube_volume rdf:type owl:Class ;
-             
-             rdfs:subClassOf :Three_dimensional_volume ,
-                             [ rdf:type owl:Restriction ;
-                               owl:onProperty :hasBoundary ;
-                               owl:someValuesFrom :Cube_surface
-                             ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Dielectric_tensor
-
-:Dielectric_tensor rdf:type owl:Class ;
-                   
-                   owl:equivalentClass [ rdf:type owl:Restriction ;
-                                         owl:onProperty :isComponentOf ;
-                                         owl:someValuesFrom :Poisson_operator
-                                       ] ;
-                   
-                   rdfs:subClassOf :Function .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Differential_operator
-
-:Differential_operator rdf:type owl:Class ;
-                       
-                       rdfs:subClassOf :Operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Diffusion_operator
-
-:Diffusion_operator rdf:type owl:Class ;
-                    
-                    owl:equivalentClass :Poisson_operator ;
-                    
-                    rdfs:subClassOf :Linear_differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Diffusion_tensor
-
-:Diffusion_tensor rdf:type owl:Class ;
-                  
-                  owl:equivalentClass [ rdf:type owl:Restriction ;
-                                        owl:onProperty :isComponentOf ;
-                                        owl:someValuesFrom :Diffusion_operator
-                                      ] ;
-                  
-                  rdfs:subClassOf :Function .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Discretization_operator
-
-:Discretization_operator rdf:type owl:Class ;
-                         
-                         rdfs:subClassOf :Operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Divergence
-
-:Divergence rdf:type owl:Class ;
-            
-            rdfs:subClassOf :Differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Domain
-
-:Domain rdf:type owl:Class ;
-        
-        rdfs:subClassOf :Vector_space ;
-        
-        rdfs:comment "\"In mathematical analysis, a domain is any connected open subset of a finite-dimensional vector space. This is a different concept than the domain of a function, though it is often used for that purpose, for example in partial differential equations and Sobolev spaces.\""^^xsd:string ;
-        
-        rdfs:seeAlso "https://en.wikipedia.org/wiki/Domain_(mathematical_analysis)"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Equation
-
-:Equation rdf:type owl:Class ;
-          
-          rdfs:subClassOf owl:Thing .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Field
-
-:Field rdf:type owl:Class ;
-       
-       rdfs:comment "In abstract algebra, a field is a nonzero commutative division ring, or equivalently a ring whose nonzero elements form an abelian group under multiplication. As such it is an algebraic structure with notions of addition, subtraction, multiplication, and division satisfying the appropriate abelian group equations and distributive law."^^xsd:string ;
-       
-       rdfs:isDefinedBy "https://en.wikipedia.org/wiki/Field_(mathematics)"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Finite_difference_discretization
-
-:Finite_difference_discretization rdf:type owl:Class ;
-                                  
-                                  rdfs:subClassOf :Discretization_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Finite_element_discretization
-
-:Finite_element_discretization rdf:type owl:Class ;
-                               
-                               rdfs:subClassOf :Discretization_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Form
-
-:Form rdf:type owl:Class ;
-      
-      owl:equivalentClass [ rdf:type owl:Restriction ;
-                            owl:onProperty :hasDomain ;
-                            owl:someValuesFrom :Vector_space
-                          ] ,
-                          [ rdf:type owl:Restriction ;
-                            owl:onProperty :hasRange ;
-                            owl:someValuesFrom :Scalar
-                          ] ;
-      
-      rdfs:subClassOf :Operator ;
-      
-      rdfs:comment "Maps vector space(s) to field."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Function
-
-:Function rdf:type owl:Class ;
-          
-          rdfs:subClassOf :Operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Functional
-
-:Functional rdf:type owl:Class ;
-            
-            owl:equivalentClass :Linear_form ;
-            
-            rdfs:subClassOf :Form .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Gradient
-
-:Gradient rdf:type owl:Class ;
-          
-          rdfs:subClassOf :Differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Helmholtz_operator
-
-:Helmholtz_operator rdf:type owl:Class ;
-                    
-                    owl:equivalentClass :Linearized_Poisson-Boltzmann_operator ;
-                    
-                    rdfs:subClassOf :Linear_differential_operator ,
-                                    [ rdf:type owl:Restriction ;
-                                      owl:onProperty :hasComponent ;
-                                      owl:someValuesFrom :Poisson_operator
-                                    ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Inner_product_vector_space
-
-:Inner_product_vector_space rdf:type owl:Class ;
-                            
-                            rdfs:subClassOf :Normed_vector_space ;
-                            
-                            rdfs:comment "TVS with an inner product."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Integral_equation
-
-:Integral_equation rdf:type owl:Class ;
-                   
-                   rdfs:subClassOf :Equation .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Integral_operator
-
-:Integral_operator rdf:type owl:Class ;
-                   
-                   rdfs:subClassOf :Operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Isotropic_dielectric_coefficient
-
-:Isotropic_dielectric_coefficient rdf:type owl:Class ;
-                                  
-                                  rdfs:subClassOf :Dielectric_tensor ,
-                                                  [ rdf:type owl:Restriction ;
-                                                    owl:onProperty :hasDomain ;
-                                                    owl:someValuesFrom :Reals_geq_unity
-                                                  ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Isotropic_diffusion_coefficient
-
-:Isotropic_diffusion_coefficient rdf:type owl:Class ;
-                                 
-                                 rdfs:subClassOf :Diffusion_tensor ,
-                                                 [ rdf:type owl:Restriction ;
-                                                   owl:onProperty :hasDomain ;
-                                                   owl:someValuesFrom :Reals_geq_unity
-                                                 ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Laplace-Beltrami_operator
-
-:Laplace-Beltrami_operator rdf:type owl:Class ;
-                           
-                           rdfs:subClassOf :Nonlinear_differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Laplacian
-
-:Laplacian rdf:type owl:Class ;
-           
-           rdfs:subClassOf :Differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Linear_differential_operator
-
-:Linear_differential_operator rdf:type owl:Class ;
-                              
-                              rdfs:subClassOf :Differential_operator ;
-                              
-                              owl:disjointWith :Nonlinear_differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Linear_form
-
-:Linear_form rdf:type owl:Class ;
-             
-             rdfs:subClassOf :Form .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Linear_partial_differential_equation
-
-:Linear_partial_differential_equation rdf:type owl:Class ;
-                                      
-                                      rdfs:subClassOf :Partial_differential_equation ;
-                                      
-                                      owl:disjointWith :Nonlinear_partial_differential_equation .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Linearized_Poisson-Boltzmann_operator
-
-:Linearized_Poisson-Boltzmann_operator rdf:type owl:Class ;
-                                       
-                                       rdfs:subClassOf :Linear_differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Manifold
-
-:Manifold rdf:type owl:Class ;
-          
-          rdfs:subClassOf :Domain ;
-          
-          rdfs:comment "\"In mathematics, a manifold is a topological space that resembles Euclidean space near each point.\""^^xsd:string ,
-                       "https://en.wikipedia.org/wiki/Manifold"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Molecule_surface
-
-:Molecule_surface rdf:type owl:Class ;
-                  
-                  rdfs:subClassOf :Three_dimensional_surface ,
-                                  [ rdf:type owl:Restriction ;
-                                    owl:onProperty :isBoundaryOf ;
-                                    owl:someValuesFrom :Molecule_surface
-                                  ] ;
-                  
-                  rdfs:comment "This is the general definition for the boundary of a molecule and *not* the Connolly molecular surface."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Molecule_volume
-
-:Molecule_volume rdf:type owl:Class ;
-                 
-                 rdfs:subClassOf :Three_dimensional_volume ,
-                                 [ rdf:type owl:Restriction ;
-                                   owl:onProperty :hasBoundary ;
-                                   owl:someValuesFrom :Molecule_surface
-                                 ] ;
-                 
-                 rdfs:comment "This refers to the general concept of the interior volume of a molecule -- and not any specific definition by which the volume is constructed."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Nonlinear_Poisson-Boltzmann_operator
-
-:Nonlinear_Poisson-Boltzmann_operator rdf:type owl:Class ;
-                                      
-                                      rdfs:subClassOf :Nonlinear_differential_operator ,
-                                                      [ rdf:type owl:Restriction ;
-                                                        owl:onProperty :hasComponent ;
-                                                        owl:someValuesFrom :Poisson_operator
-                                                      ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Nonlinear_differential_operator
-
-:Nonlinear_differential_operator rdf:type owl:Class ;
-                                 
-                                 rdfs:subClassOf :Differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Nonlinear_partial_differential_equation
-
-:Nonlinear_partial_differential_equation rdf:type owl:Class ;
-                                         
-                                         rdfs:subClassOf :Partial_differential_equation .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Norm
-
-:Norm rdf:type owl:Class ;
-      
-      rdfs:subClassOf :Semi-norm .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Normed_vector_space
-
-:Normed_vector_space rdf:type owl:Class ;
-                     
-                     rdfs:subClassOf :Topological_vector_space ;
-                     
-                     rdfs:isDefinedBy "TVS with a norm."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Operator
-
-:Operator rdf:type owl:Class ;
-          
-          rdfs:subClassOf owl:Thing ,
-                          [ rdf:type owl:Restriction ;
-                            owl:onProperty :hasDomain ;
-                            owl:someValuesFrom :Operator_domain
-                          ] ,
-                          [ rdf:type owl:Restriction ;
-                            owl:onProperty :hasRange ;
-                            owl:someValuesFrom :Operator_range
-                          ] ;
-          
-          rdfs:comment "\"An operator is a mapping from one vector space or module to another.\""^^xsd:string ,
-                       "https://en.wikipedia.org/wiki/Operator_(mathematics)"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Operator_domain
-
-:Operator_domain rdf:type owl:Class ;
-                 
-                 rdfs:subClassOf :Domain .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Operator_range
-
-:Operator_range rdf:type owl:Class ;
-                
-                rdfs:subClassOf :Domain .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Partial_differential_equation
-
-:Partial_differential_equation rdf:type owl:Class ;
-                               
-                               rdfs:subClassOf :Equation .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Poisson_operator
-
-:Poisson_operator rdf:type owl:Class ;
-                  
-                  rdfs:subClassOf :Linear_differential_operator .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Positive_reals
-
-:Positive_reals rdf:type owl:Class ;
-                
-                rdfs:subClassOf :Field ,
-                                :Operator_range .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Reals_geq_unity
-
-:Reals_geq_unity rdf:type owl:Class ;
-                 
-                 rdfs:subClassOf :Positive_reals ;
-                 
-                 rdfs:comment "Real numbers greater than or equal to 1"^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Scalar
-
-:Scalar rdf:type owl:Class ;
-        
-        owl:equivalentClass [ rdf:type owl:Restriction ;
-                              owl:onProperty :isComponentOf ;
-                              owl:someValuesFrom :Vector_space
-                            ] ,
-                            [ rdf:type owl:Restriction ;
-                              owl:onProperty :isComponentOf ;
-                              owl:someValuesFrom :Field
-                            ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Semi-norm
-
-:Semi-norm rdf:type owl:Class ;
-           
-           rdfs:subClassOf :Linear_form .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Space
-
-:Space rdf:type owl:Class ;
-       
-       rdfs:comment "\"In mathematics, a space is a set (sometimes called a universe) with some added structure.\""^^xsd:string ,
-                    "https://en.wikipedia.org/wiki/Space_(mathematics)"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Sphere_surface
-
-:Sphere_surface rdf:type owl:Class ;
-                
-                rdfs:subClassOf :Three_dimensional_surface ,
-                                [ rdf:type owl:Restriction ;
-                                  owl:onProperty :isBoundaryOf ;
-                                  owl:someValuesFrom :Sphere_volume
-                                ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Sphere_volume
-
-:Sphere_volume rdf:type owl:Class ;
-               
-               rdfs:subClassOf :Three_dimensional_volume ,
-                               [ rdf:type owl:Restriction ;
-                                 owl:onProperty :hasBoundary ;
-                                 owl:someValuesFrom :Sphere_surface
-                               ] .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Surface
-
-:Surface rdf:type owl:Class ;
-         
-         rdfs:subClassOf :Manifold ;
-         
-         owl:disjointWith :Volume .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#System_of_equations
-
-:System_of_equations rdf:type owl:Class ;
-                     
-                     rdfs:subClassOf :Equation .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Three_dimensional_surface
-
-:Three_dimensional_surface rdf:type owl:Class ;
-                           
-                           rdfs:subClassOf :Surface .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Three_dimensional_volume
-
-:Three_dimensional_volume rdf:type owl:Class ;
-                          
-                          rdfs:subClassOf :Volume .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Topological_vector_space
-
-:Topological_vector_space rdf:type owl:Class ;
-                          
-                          rdfs:subClassOf :Vector_space ;
-                          
-                          rdfs:isDefinedBy "Vector space with a topology (notion of \"closeness\")."^^xsd:string .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Vector_space
-
-:Vector_space rdf:type owl:Class ;
-              
-              owl:equivalentClass [ rdf:type owl:Restriction ;
-                                    owl:onProperty :hasComponent ;
-                                    owl:someValuesFrom :Scalar
-                                  ] ;
-              
-              rdfs:subClassOf :Space ;
-              
-              rdfs:comment "A vector space (also called a linear space) is a collection of objects called vectors, which may be added together and multiplied (\"scaled\") by numbers, called scalars in this context."^^xsd:string ;
-              
-              rdfs:isDefinedBy "https://en.wikipedia.org/wiki/Vector_space"^^xsd:anyURI .
-
-
-
-###  http://www.poissonboltzmann.org/ontologies/apbs-pdb2pqr#Volume
-
-:Volume rdf:type owl:Class ;
-        
-        rdfs:subClassOf :Manifold ,
-                        [ rdf:type owl:Restriction ;
-                          owl:onProperty :hasBoundary ;
-                          owl:someValuesFrom :Surface
-                        ] .
-
-
-
-
-
-#################################################################
-#
-#    General axioms
-#
-#################################################################
-
-
-[ rdf:type owl:AllDisjointClasses ;
-  owl:members ( :Domain
-                :Equation
-                :Operator
-              )
-] .
-[ rdf:type owl:AllDisjointClasses ;
-  owl:members ( :Equation
-                :Operator
-                :Space
-              )
-] .
-
-
-
-
-###  Generated by the OWL API (version 3.5.1) http://owlapi.sourceforge.net
-
diff --new-file -ru apbs-3.0.0/doc/data-ontology/protege.sh apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/protege.sh
--- apbs-3.0.0/doc/data-ontology/protege.sh	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/protege.sh	1970-01-01 01:00:00.000000000 +0100
@@ -1,13 +0,0 @@
-#!/bin/sh
-
-cd "/Applications/protege-5.0.0-beta-17-os-x/Protege-5.0.0-beta-17"
-
-CMD_OPTIONS="-Dapple.laf.useScreenMenuBar=true -Dcom.apple.mrj.application.apple.menu.about.name=Protege -Xdock:name=Protege -Xdock:icon=Protege.icns"
-
-jre/bin/java -Xmx500M -Xms250M \
-     -Dlog4j.configuration=file:log4j.xml \
-     -DentityExpansionLimit=100000000 \
-     -Dfile.encoding=UTF-8 \
-     -classpath bin/org.apache.felix.main.jar:bin/ProtegeLauncher.jar \
-     $CMD_OPTIONS org.protege.osgi.framework.Launcher
-#file:///Users/bake113/Git/ontologies/computing/ict.owl
diff --new-file -ru apbs-3.0.0/doc/data-ontology/README.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/README.md
--- apbs-3.0.0/doc/data-ontology/README.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/data-ontology/README.md	1970-01-01 01:00:00.000000000 +0100
@@ -1,3 +0,0 @@
-# APBS data ontology
-
-This is a work in progress; it is currently (very) incomplete.
Binary files apbs-3.0.0/doc/icons/APBS_1024.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_1024.png differ
Binary files apbs-3.0.0/doc/icons/APBS_128.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_128.png differ
Binary files apbs-3.0.0/doc/icons/APBS_128_v2.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_128_v2.png differ
Binary files apbs-3.0.0/doc/icons/APBS_16.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_16.png differ
Binary files apbs-3.0.0/doc/icons/APBS_256.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_256.png differ
Binary files apbs-3.0.0/doc/icons/APBS_32.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_32.png differ
Binary files apbs-3.0.0/doc/icons/APBS_512.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_512.png differ
Binary files apbs-3.0.0/doc/icons/APBS_64.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/icons/APBS_64.png differ
diff --new-file -ru apbs-3.0.0/doc/programmer/.config/Doxyfile.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/Doxyfile.in
--- apbs-3.0.0/doc/programmer/.config/Doxyfile.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/Doxyfile.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,1789 +0,0 @@
-# Doxyfile 1.8.1.2
-
-# This file describes the settings to be used by the documentation system
-# doxygen (www.doxygen.org) for a project
-#
-# All text after a hash (#) is considered a comment and will be ignored
-# The format is:
-#       TAG = value [value, ...]
-# For lists items can also be appended using:
-#       TAG += value [value, ...]
-# Values that contain spaces should be placed between quotes (" ")
-
-#---------------------------------------------------------------------------
-# Project related configuration options
-#---------------------------------------------------------------------------
-
-# This tag specifies the encoding used for all characters in the config file
-# that follow. The default is UTF-8 which is also the encoding used for all
-# text before the first occurrence of this tag. Doxygen uses libiconv (or the
-# iconv built into libc) for the transcoding. See
-# http://www.gnu.org/software/libiconv for the list of possible encodings.
-
-DOXYFILE_ENCODING      = UTF-8
-
-# The PROJECT_NAME tag is a single word (or sequence of words) that should
-# identify the project. Note that if you do not use Doxywizard you need
-# to put quotes around the project name if it contains spaces.
-
-PROJECT_NAME           = APBS
-
-# The PROJECT_NUMBER tag can be used to enter a project or revision number.
-# This could be handy for archiving the generated documentation or
-# if some version control system is used.
-
-PROJECT_NUMBER         = @APBS_VERSION@
-
-# Using the PROJECT_BRIEF tag one can provide an optional one line description
-# for a project that appears at the top of each page and should give viewer
-# a quick idea about the purpose of the project. Keep the description short.
-
-PROJECT_BRIEF          =
-
-# With the PROJECT_LOGO tag one can specify an logo or icon that is
-# included in the documentation. The maximum height of the logo should not
-# exceed 55 pixels and the maximum width should not exceed 200 pixels.
-# Doxygen will copy the logo to the output directory.
-
-PROJECT_LOGO           =
-
-# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
-# base path where the generated documentation will be put.
-# If a relative path is entered, it will be relative to the location
-# where doxygen was started. If left blank the current directory will be used.
-
-OUTPUT_DIRECTORY       = .
-
-# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create
-# 4096 sub-directories (in 2 levels) under the output directory of each output
-# format and will distribute the generated files over these directories.
-# Enabling this option can be useful when feeding doxygen a huge amount of
-# source files, where putting all generated files in the same directory would
-# otherwise cause performance problems for the file system.
-
-CREATE_SUBDIRS         = NO
-
-# The OUTPUT_LANGUAGE tag is used to specify the language in which all
-# documentation generated by doxygen is written. Doxygen will use this
-# information to generate all constant output in the proper language.
-# The default language is English, other supported languages are:
-# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,
-# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German,
-# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English
-# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian,
-# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak,
-# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.
-
-OUTPUT_LANGUAGE        = English
-
-# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will
-# include brief member descriptions after the members that are listed in
-# the file and class documentation (similar to JavaDoc).
-# Set to NO to disable this.
-
-BRIEF_MEMBER_DESC      = YES
-
-# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend
-# the brief description of a member or function before the detailed description.
-# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
-# brief descriptions will be completely suppressed.
-
-REPEAT_BRIEF           = YES
-
-# This tag implements a quasi-intelligent brief description abbreviator
-# that is used to form the text in various listings. Each string
-# in this list, if found as the leading text of the brief description, will be
-# stripped from the text and the result after processing the whole list, is
-# used as the annotated text. Otherwise, the brief description is used as-is.
-# If left blank, the following values are used ("$name" is automatically
-# replaced with the name of the entity): "The $name class" "The $name widget"
-# "The $name file" "is" "provides" "specifies" "contains"
-# "represents" "a" "an" "the"
-
-ABBREVIATE_BRIEF       = "The $name class" \
-                         "The $name widget" \
-                         "The $name file" \
-                         is \
-                         provides \
-                         specifies \
-                         contains \
-                         represents \
-                         a \
-                         an \
-                         the
-
-# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
-# Doxygen will generate a detailed section even if there is only a brief
-# description.
-
-ALWAYS_DETAILED_SEC    = NO
-
-# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
-# inherited members of a class in the documentation of that class as if those
-# members were ordinary class members. Constructors, destructors and assignment
-# operators of the base classes will not be shown.
-
-INLINE_INHERITED_MEMB  = NO
-
-# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full
-# path before files name in the file list and in the header files. If set
-# to NO the shortest path that makes the file name unique will be used.
-
-FULL_PATH_NAMES        = YES
-
-# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag
-# can be used to strip a user-defined part of the path. Stripping is
-# only done if one of the specified strings matches the left-hand part of
-# the path. The tag can be used to show relative paths in the file list.
-# If left blank the directory from which doxygen is run is used as the
-# path to strip.
-
-STRIP_FROM_PATH        = ../.. "@APBS_ROOT@"
-
-# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of
-# the path mentioned in the documentation of a class, which tells
-# the reader which header file to include in order to use a class.
-# If left blank only the name of the header file containing the class
-# definition is used. Otherwise one should specify the include paths that
-# are normally passed to the compiler using the -I flag.
-
-STRIP_FROM_INC_PATH    = contrib
-
-# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter
-# (but less readable) file names. This can be useful if your file system
-# doesn't support long names like on DOS, Mac, or CD-ROM.
-
-SHORT_NAMES            = NO
-
-# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen
-# will interpret the first line (until the first dot) of a JavaDoc-style
-# comment as the brief description. If set to NO, the JavaDoc
-# comments will behave just like regular Qt-style comments
-# (thus requiring an explicit @brief command for a brief description.)
-
-JAVADOC_AUTOBRIEF      = NO
-
-# If the QT_AUTOBRIEF tag is set to YES then Doxygen will
-# interpret the first line (until the first dot) of a Qt-style
-# comment as the brief description. If set to NO, the comments
-# will behave just like regular Qt-style comments (thus requiring
-# an explicit \brief command for a brief description.)
-
-QT_AUTOBRIEF           = NO
-
-# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen
-# treat a multi-line C++ special comment block (i.e. a block of //! or ///
-# comments) as a brief description. This used to be the default behaviour.
-# The new default is to treat a multi-line C++ comment block as a detailed
-# description. Set this tag to YES if you prefer the old behaviour instead.
-
-MULTILINE_CPP_IS_BRIEF = NO
-
-# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented
-# member inherits the documentation from any documented member that it
-# re-implements.
-
-INHERIT_DOCS           = YES
-
-# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce
-# a new page for each member. If set to NO, the documentation of a member will
-# be part of the file/class/namespace that contains it.
-
-SEPARATE_MEMBER_PAGES  = NO
-
-# The TAB_SIZE tag can be used to set the number of spaces in a tab.
-# Doxygen uses this value to replace tabs by spaces in code fragments.
-
-TAB_SIZE               = 1
-
-# This tag can be used to specify a number of aliases that acts
-# as commands in the documentation. An alias has the form "name=value".
-# For example adding "sideeffect=\par Side Effects:\n" will allow you to
-# put the command \sideeffect (or @sideeffect) in the documentation, which
-# will result in a user-defined paragraph with heading "Side Effects:".
-# You can put \n's in the value part of an alias to insert newlines.
-
-ALIASES                =
-
-# This tag can be used to specify a number of word-keyword mappings (TCL only).
-# A mapping has the form "name=value". For example adding
-# "class=itcl::class" will allow you to use the command class in the
-# itcl::class meaning.
-
-TCL_SUBST              =
-
-# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C
-# sources only. Doxygen will then generate output that is more tailored for C.
-# For instance, some of the names that are used will be different. The list
-# of all members will be omitted, etc.
-
-OPTIMIZE_OUTPUT_FOR_C  = YES
-
-# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java
-# sources only. Doxygen will then generate output that is more tailored for
-# Java. For instance, namespaces will be presented as packages, qualified
-# scopes will look different, etc.
-
-OPTIMIZE_OUTPUT_JAVA   = NO
-
-# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
-# sources only. Doxygen will then generate output that is more tailored for
-# Fortran.
-
-OPTIMIZE_FOR_FORTRAN   = NO
-
-# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
-# sources. Doxygen will then generate output that is tailored for
-# VHDL.
-
-OPTIMIZE_OUTPUT_VHDL   = NO
-
-# Doxygen selects the parser to use depending on the extension of the files it
-# parses. With this tag you can assign which parser to use for a given extension.
-# Doxygen has a built-in mapping, but you can override or extend it using this
-# tag. The format is ext=language, where ext is a file extension, and language
-# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C,
-# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make
-# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C
-# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions
-# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.
-
-EXTENSION_MAPPING      =
-
-# If MARKDOWN_SUPPORT is enabled (the default) then doxygen pre-processes all
-# comments according to the Markdown format, which allows for more readable
-# documentation. See http://daringfireball.net/projects/markdown/ for details.
-# The output of markdown processing is further processed by doxygen, so you
-# can mix doxygen, HTML, and XML commands with Markdown formatting.
-# Disable only in case of backward compatibilities issues.
-
-MARKDOWN_SUPPORT       = YES
-
-# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
-# to include (a tag file for) the STL sources as input, then you should
-# set this tag to YES in order to let doxygen match functions declarations and
-# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.
-# func(std::string) {}). This also makes the inheritance and collaboration
-# diagrams that involve STL classes more complete and accurate.
-
-BUILTIN_STL_SUPPORT    = NO
-
-# If you use Microsoft's C++/CLI language, you should set this option to YES to
-# enable parsing support.
-
-CPP_CLI_SUPPORT        = NO
-
-# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.
-# Doxygen will parse them like normal C++ but will assume all classes use public
-# instead of private inheritance when no explicit protection keyword is present.
-
-SIP_SUPPORT            = NO
-
-# For Microsoft's IDL there are propget and propput attributes to indicate getter
-# and setter methods for a property. Setting this option to YES (the default)
-# will make doxygen replace the get and set methods by a property in the
-# documentation. This will only work if the methods are indeed getting or
-# setting a simple type. If this is not the case, or you want to show the
-# methods anyway, you should set this option to NO.
-
-IDL_PROPERTY_SUPPORT   = YES
-
-# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
-# tag is set to YES, then doxygen will reuse the documentation of the first
-# member in the group (if any) for the other members of the group. By default
-# all members of a group must be documented explicitly.
-
-DISTRIBUTE_GROUP_DOC   = NO
-
-# Set the SUBGROUPING tag to YES (the default) to allow class member groups of
-# the same type (for instance a group of public functions) to be put as a
-# subgroup of that type (e.g. under the Public Functions section). Set it to
-# NO to prevent subgrouping. Alternatively, this can be done per class using
-# the \nosubgrouping command.
-
-SUBGROUPING            = YES
-
-# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and
-# unions are shown inside the group in which they are included (e.g. using
-# @ingroup) instead of on a separate page (for HTML and Man pages) or
-# section (for LaTeX and RTF).
-
-INLINE_GROUPED_CLASSES = NO
-
-# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and
-# unions with only public data fields will be shown inline in the documentation
-# of the scope in which they are defined (i.e. file, namespace, or group
-# documentation), provided this scope is documented. If set to NO (the default),
-# structs, classes, and unions are shown on a separate page (for HTML and Man
-# pages) or section (for LaTeX and RTF).
-
-INLINE_SIMPLE_STRUCTS  = NO
-
-# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum
-# is documented as struct, union, or enum with the name of the typedef. So
-# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
-# with name TypeT. When disabled the typedef will appear as a member of a file,
-# namespace, or class. And the struct will be named TypeS. This can typically
-# be useful for C code in case the coding convention dictates that all compound
-# types are typedef'ed and only the typedef is referenced, never the tag name.
-
-TYPEDEF_HIDES_STRUCT   = NO
-
-# Similar to the SYMBOL_CACHE_SIZE the size of the symbol lookup cache can be
-# set using LOOKUP_CACHE_SIZE. This cache is used to resolve symbols given
-# their name and scope. Since this can be an expensive process and often the
-# same symbol appear multiple times in the code, doxygen keeps a cache of
-# pre-resolved symbols. If the cache is too small doxygen will become slower.
-# If the cache is too large, memory is wasted. The cache size is given by this
-# formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range is 0..9, the default is 0,
-# corresponding to a cache size of 2^16 = 65536 symbols.
-
-LOOKUP_CACHE_SIZE      = 0
-
-#---------------------------------------------------------------------------
-# Build related configuration options
-#---------------------------------------------------------------------------
-
-# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in
-# documentation are documented, even if no documentation was available.
-# Private class members and static file members will be hidden unless
-# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES
-
-EXTRACT_ALL            = NO
-
-# If the EXTRACT_PRIVATE tag is set to YES all private members of a class
-# will be included in the documentation.
-
-EXTRACT_PRIVATE        = NO
-
-# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal
-# scope will be included in the documentation.
-
-EXTRACT_PACKAGE        = NO
-
-# If the EXTRACT_STATIC tag is set to YES all static members of a file
-# will be included in the documentation.
-
-EXTRACT_STATIC         = NO
-
-# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)
-# defined locally in source files will be included in the documentation.
-# If set to NO only classes defined in header files are included.
-
-EXTRACT_LOCAL_CLASSES  = YES
-
-# This flag is only useful for Objective-C code. When set to YES local
-# methods, which are defined in the implementation section but not in
-# the interface are included in the documentation.
-# If set to NO (the default) only methods in the interface are included.
-
-EXTRACT_LOCAL_METHODS  = NO
-
-# If this flag is set to YES, the members of anonymous namespaces will be
-# extracted and appear in the documentation as a namespace called
-# 'anonymous_namespace{file}', where file will be replaced with the base
-# name of the file that contains the anonymous namespace. By default
-# anonymous namespaces are hidden.
-
-EXTRACT_ANON_NSPACES   = NO
-
-# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all
-# undocumented members of documented classes, files or namespaces.
-# If set to NO (the default) these members will be included in the
-# various overviews, but no documentation section is generated.
-# This option has no effect if EXTRACT_ALL is enabled.
-
-HIDE_UNDOC_MEMBERS     = NO
-
-# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all
-# undocumented classes that are normally visible in the class hierarchy.
-# If set to NO (the default) these classes will be included in the various
-# overviews. This option has no effect if EXTRACT_ALL is enabled.
-
-HIDE_UNDOC_CLASSES     = NO
-
-# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all
-# friend (class|struct|union) declarations.
-# If set to NO (the default) these declarations will be included in the
-# documentation.
-
-HIDE_FRIEND_COMPOUNDS  = NO
-
-# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any
-# documentation blocks found inside the body of a function.
-# If set to NO (the default) these blocks will be appended to the
-# function's detailed documentation block.
-
-HIDE_IN_BODY_DOCS      = NO
-
-# The INTERNAL_DOCS tag determines if documentation
-# that is typed after a \internal command is included. If the tag is set
-# to NO (the default) then the documentation will be excluded.
-# Set it to YES to include the internal documentation.
-
-INTERNAL_DOCS          = NO
-
-# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate
-# file names in lower-case letters. If set to YES upper-case letters are also
-# allowed. This is useful if you have classes or files whose names only differ
-# in case and if your file system supports case sensitive file names. Windows
-# and Mac users are advised to set this option to NO.
-
-CASE_SENSE_NAMES       = NO
-
-# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen
-# will show members with their full class and namespace scopes in the
-# documentation. If set to YES the scope will be hidden.
-
-HIDE_SCOPE_NAMES       = YES
-
-# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen
-# will put a list of the files that are included by a file in the documentation
-# of that file.
-
-SHOW_INCLUDE_FILES     = YES
-
-# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen
-# will list include files with double quotes in the documentation
-# rather than with sharp brackets.
-
-FORCE_LOCAL_INCLUDES   = NO
-
-# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]
-# is inserted in the documentation for inline members.
-
-INLINE_INFO            = YES
-
-# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen
-# will sort the (detailed) documentation of file and class members
-# alphabetically by member name. If set to NO the members will appear in
-# declaration order.
-
-SORT_MEMBER_DOCS       = YES
-
-# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the
-# brief documentation of file, namespace and class members alphabetically
-# by member name. If set to NO (the default) the members will appear in
-# declaration order.
-
-SORT_BRIEF_DOCS        = NO
-
-# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen
-# will sort the (brief and detailed) documentation of class members so that
-# constructors and destructors are listed first. If set to NO (the default)
-# the constructors will appear in the respective orders defined by
-# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS.
-# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO
-# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.
-
-SORT_MEMBERS_CTORS_1ST = NO
-
-# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the
-# hierarchy of group names into alphabetical order. If set to NO (the default)
-# the group names will appear in their defined order.
-
-SORT_GROUP_NAMES       = NO
-
-# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be
-# sorted by fully-qualified names, including namespaces. If set to
-# NO (the default), the class list will be sorted only by class name,
-# not including the namespace part.
-# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
-# Note: This option applies only to the class list, not to the
-# alphabetical list.
-
-SORT_BY_SCOPE_NAME     = NO
-
-# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to
-# do proper type resolution of all parameters of a function it will reject a
-# match between the prototype and the implementation of a member function even
-# if there is only one candidate or it is obvious which candidate to choose
-# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen
-# will still accept a match between prototype and implementation in such cases.
-
-STRICT_PROTO_MATCHING  = NO
-
-# The GENERATE_TODOLIST tag can be used to enable (YES) or
-# disable (NO) the todo list. This list is created by putting \todo
-# commands in the documentation.
-
-GENERATE_TODOLIST      = NO
-
-# The GENERATE_TESTLIST tag can be used to enable (YES) or
-# disable (NO) the test list. This list is created by putting \test
-# commands in the documentation.
-
-GENERATE_TESTLIST      = YES
-
-# The GENERATE_BUGLIST tag can be used to enable (YES) or
-# disable (NO) the bug list. This list is created by putting \bug
-# commands in the documentation.
-
-GENERATE_BUGLIST       = YES
-
-# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or
-# disable (NO) the deprecated list. This list is created by putting
-# \deprecated commands in the documentation.
-
-GENERATE_DEPRECATEDLIST= YES
-
-# The ENABLED_SECTIONS tag can be used to enable conditional
-# documentation sections, marked by \if sectionname ... \endif.
-
-ENABLED_SECTIONS       =
-
-# The MAX_INITIALIZER_LINES tag determines the maximum number of lines
-# the initial value of a variable or macro consists of for it to appear in
-# the documentation. If the initializer consists of more lines than specified
-# here it will be hidden. Use a value of 0 to hide initializers completely.
-# The appearance of the initializer of individual variables and macros in the
-# documentation can be controlled using \showinitializer or \hideinitializer
-# command in the documentation regardless of this setting.
-
-MAX_INITIALIZER_LINES  = 30
-
-# Set the SHOW_USED_FILES tag to NO to disable the list of files generated
-# at the bottom of the documentation of classes and structs. If set to YES the
-# list will mention the files that were used to generate the documentation.
-
-SHOW_USED_FILES        = YES
-
-# Set the SHOW_FILES tag to NO to disable the generation of the Files page.
-# This will remove the Files entry from the Quick Index and from the
-# Folder Tree View (if specified). The default is YES.
-
-SHOW_FILES             = YES
-
-# Set the SHOW_NAMESPACES tag to NO to disable the generation of the
-# Namespaces page.  This will remove the Namespaces entry from the Quick Index
-# and from the Folder Tree View (if specified). The default is YES.
-
-SHOW_NAMESPACES        = YES
-
-# The FILE_VERSION_FILTER tag can be used to specify a program or script that
-# doxygen should invoke to get the current version for each file (typically from
-# the version control system). Doxygen will invoke the program by executing (via
-# popen()) the command <command> <input-file>, where <command> is the value of
-# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file
-# provided by doxygen. Whatever the program writes to standard output
-# is used as the file version. See the manual for examples.
-
-FILE_VERSION_FILTER    =
-
-# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
-# by doxygen. The layout file controls the global structure of the generated
-# output files in an output format independent way. To create the layout file
-# that represents doxygen's defaults, run doxygen with the -l option.
-# You can optionally specify a file name after the option, if omitted
-# DoxygenLayout.xml will be used as the name of the layout file.
-
-LAYOUT_FILE            =
-
-# The CITE_BIB_FILES tag can be used to specify one or more bib files
-# containing the references data. This must be a list of .bib files. The
-# .bib extension is automatically appended if omitted. Using this command
-# requires the bibtex tool to be installed. See also
-# http://en.wikipedia.org/wiki/BibTeX for more info. For LaTeX the style
-# of the bibliography can be controlled using LATEX_BIB_STYLE. To use this
-# feature you need bibtex and perl available in the search path.
-
-CITE_BIB_FILES         =
-
-#---------------------------------------------------------------------------
-# configuration options related to warning and progress messages
-#---------------------------------------------------------------------------
-
-# The QUIET tag can be used to turn on/off the messages that are generated
-# by doxygen. Possible values are YES and NO. If left blank NO is used.
-
-QUIET                  = NO
-
-# The WARNINGS tag can be used to turn on/off the warning messages that are
-# generated by doxygen. Possible values are YES and NO. If left blank
-# NO is used.
-
-WARNINGS               = YES
-
-# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings
-# for undocumented members. If EXTRACT_ALL is set to YES then this flag will
-# automatically be disabled.
-
-WARN_IF_UNDOCUMENTED   = YES
-
-# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for
-# potential errors in the documentation, such as not documenting some
-# parameters in a documented function, or documenting parameters that
-# don't exist or using markup commands wrongly.
-
-WARN_IF_DOC_ERROR      = YES
-
-# The WARN_NO_PARAMDOC option can be enabled to get warnings for
-# functions that are documented, but have no documentation for their parameters
-# or return value. If set to NO (the default) doxygen will only warn about
-# wrong or incomplete parameter documentation, but not about the absence of
-# documentation.
-
-WARN_NO_PARAMDOC       = NO
-
-# The WARN_FORMAT tag determines the format of the warning messages that
-# doxygen can produce. The string should contain the $file, $line, and $text
-# tags, which will be replaced by the file and line number from which the
-# warning originated and the warning text. Optionally the format may contain
-# $version, which will be replaced by the version of the file (if it could
-# be obtained via FILE_VERSION_FILTER)
-
-WARN_FORMAT            = "$file:$line: $text"
-
-# The WARN_LOGFILE tag can be used to specify a file to which warning
-# and error messages should be written. If left blank the output is written
-# to stderr.
-
-WARN_LOGFILE           =
-
-#---------------------------------------------------------------------------
-# configuration options related to the input files
-#---------------------------------------------------------------------------
-
-# The INPUT tag can be used to specify the files and/or directories that contain
-# documented source files. You may enter file names like "myfile.cpp" or
-# directories like "/usr/src/myproject". Separate the files or directories
-# with spaces.
-
-INPUT                  = "@APBS_ROOT@/src/" \
-                         ./mainpage.h \
-                         "@CMAKE_CURRENT_SOURCE_DIR@/license/LICENSE.txt"
-
-# This tag can be used to specify the character encoding of the source files
-# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is
-# also the default input encoding. Doxygen uses libiconv (or the iconv built
-# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for
-# the list of possible encodings.
-
-INPUT_ENCODING         = UTF-8
-
-# If the value of the INPUT tag contains directories, you can use the
-# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
-# and *.h) to filter out the source-files in the directories. If left
-# blank the following patterns are tested:
-# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh
-# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py
-# *.f90 *.f *.for *.vhd *.vhdl
-
-FILE_PATTERNS          = *.h \
-                         *.py \
-                         *.c
-
-# The RECURSIVE tag can be used to turn specify whether or not subdirectories
-# should be searched for input files as well. Possible values are YES and NO.
-# If left blank NO is used.
-
-RECURSIVE              = YES
-
-# The EXCLUDE tag can be used to specify files and/or directories that should be
-# excluded from the INPUT source files. This way you can easily exclude a
-# subdirectory from a directory tree whose root is specified with the INPUT tag.
-# Note that relative paths are relative to the directory from which doxygen is
-# run.
-
-EXCLUDE                =
-
-# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
-# directories that are symbolic links (a Unix file system feature) are excluded
-# from the input.
-
-EXCLUDE_SYMLINKS       = NO
-
-# If the value of the INPUT tag contains directories, you can use the
-# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
-# certain files from those directories. Note that the wildcards are matched
-# against the file with absolute path, so to exclude all test directories
-# for example use the pattern */test/*
-
-EXCLUDE_PATTERNS       = *-private.h
-
-# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
-# (namespaces, classes, functions, etc.) that should be excluded from the
-# output. The symbol name can be a fully qualified name, a word, or if the
-# wildcard * is used, a substring. Examples: ANamespace, AClass,
-# AClass::ANamespace, ANamespace::*Test
-
-EXCLUDE_SYMBOLS        = apbs_needs_mc \
-                         apbs_needs_blas \
-                         apbs_link \
-                         APBSFEM_dummy \
-                         Vfetk_qfEnergyAtom \
-                         diel \
-                         ionacc \
-                         smooth \
-                         debye_U \
-                         debye_Udiff \
-                         coulomb \
-                         init_2DP1 \
-                         init_3DP1 \
-                         setCoef \
-                         bcfl1sp \
-                         bcfl2 \
-                         extEnergy \
-                         focusFillBound
-
-# The EXAMPLE_PATH tag can be used to specify one or more files or
-# directories that contain example code fragments that are included (see
-# the \include command).
-
-EXAMPLE_PATH           =
-
-# If the value of the EXAMPLE_PATH tag contains directories, you can use the
-# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
-# and *.h) to filter out the source-files in the directories. If left
-# blank all files are included.
-
-EXAMPLE_PATTERNS       = *
-
-# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
-# searched for input files to be used with the \include or \dontinclude
-# commands irrespective of the value of the RECURSIVE tag.
-# Possible values are YES and NO. If left blank NO is used.
-
-EXAMPLE_RECURSIVE      = NO
-
-# The IMAGE_PATH tag can be used to specify one or more files or
-# directories that contain image that are included in the documentation (see
-# the \image command).
-
-IMAGE_PATH             =
-
-# The INPUT_FILTER tag can be used to specify a program that doxygen should
-# invoke to filter for each input file. Doxygen will invoke the filter program
-# by executing (via popen()) the command <filter> <input-file>, where <filter>
-# is the value of the INPUT_FILTER tag, and <input-file> is the name of an
-# input file. Doxygen will then use the output that the filter program writes
-# to standard output.  If FILTER_PATTERNS is specified, this tag will be
-# ignored.
-
-INPUT_FILTER           =
-
-# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
-# basis.  Doxygen will compare the file name with each pattern and apply the
-# filter if there is a match.  The filters are a list of the form:
-# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further
-# info on how filters are used. If FILTER_PATTERNS is empty or if
-# non of the patterns match the file name, INPUT_FILTER is applied.
-
-FILTER_PATTERNS        =
-
-# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
-# INPUT_FILTER) will be used to filter the input files when producing source
-# files to browse (i.e. when SOURCE_BROWSER is set to YES).
-
-FILTER_SOURCE_FILES    = NO
-
-# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
-# pattern. A pattern will override the setting for FILTER_PATTERN (if any)
-# and it is also possible to disable source filtering for a specific pattern
-# using *.ext= (so without naming a filter). This option only has effect when
-# FILTER_SOURCE_FILES is enabled.
-
-FILTER_SOURCE_PATTERNS =
-
-#---------------------------------------------------------------------------
-# configuration options related to source browsing
-#---------------------------------------------------------------------------
-
-# If the SOURCE_BROWSER tag is set to YES then a list of source files will
-# be generated. Documented entities will be cross-referenced with these sources.
-# Note: To get rid of all source code in the generated output, make sure also
-# VERBATIM_HEADERS is set to NO.
-
-SOURCE_BROWSER         = YES
-
-# Setting the INLINE_SOURCES tag to YES will include the body
-# of functions and classes directly in the documentation.
-
-INLINE_SOURCES         = NO
-
-# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct
-# doxygen to hide any special comment blocks from generated source code
-# fragments. Normal C, C++ and Fortran comments will always remain visible.
-
-STRIP_CODE_COMMENTS    = YES
-
-# If the REFERENCED_BY_RELATION tag is set to YES
-# then for each documented function all documented
-# functions referencing it will be listed.
-
-REFERENCED_BY_RELATION = NO
-
-# If the REFERENCES_RELATION tag is set to YES
-# then for each documented function all documented entities
-# called/used by that function will be listed.
-
-REFERENCES_RELATION    = NO
-
-# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)
-# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from
-# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will
-# link to the source code.  Otherwise they will link to the documentation.
-
-REFERENCES_LINK_SOURCE = YES
-
-# If the USE_HTAGS tag is set to YES then the references to source code
-# will point to the HTML generated by the htags(1) tool instead of doxygen
-# built-in source browser. The htags tool is part of GNU's global source
-# tagging system (see http://www.gnu.org/software/global/global.html). You
-# will need version 4.8.6 or higher.
-
-USE_HTAGS              = NO
-
-# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen
-# will generate a verbatim copy of the header file for each class for
-# which an include is specified. Set to NO to disable this.
-
-VERBATIM_HEADERS       = YES
-
-#---------------------------------------------------------------------------
-# configuration options related to the alphabetical class index
-#---------------------------------------------------------------------------
-
-# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index
-# of all compounds will be generated. Enable this if the project
-# contains a lot of classes, structs, unions or interfaces.
-
-ALPHABETICAL_INDEX     = YES
-
-# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then
-# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns
-# in which this list will be split (can be a number in the range [1..20])
-
-COLS_IN_ALPHA_INDEX    = 5
-
-# In case all classes in a project start with a common prefix, all
-# classes will be put under the same header in the alphabetical index.
-# The IGNORE_PREFIX tag can be used to specify one or more prefixes that
-# should be ignored while generating the index headers.
-
-IGNORE_PREFIX          =
-
-#---------------------------------------------------------------------------
-# configuration options related to the HTML output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_HTML tag is set to YES (the default) Doxygen will
-# generate HTML output.
-
-GENERATE_HTML          = YES
-
-# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be
-# put in front of it. If left blank `html' will be used as the default path.
-
-HTML_OUTPUT            = html
-
-# The HTML_FILE_EXTENSION tag can be used to specify the file extension for
-# each generated HTML page (for example: .htm,.php,.asp). If it is left blank
-# doxygen will generate files with .html extension.
-
-HTML_FILE_EXTENSION    = .html
-
-# The HTML_HEADER tag can be used to specify a personal HTML header for
-# each generated HTML page. If it is left blank doxygen will generate a
-# standard header. Note that when using a custom header you are responsible
-# for the proper inclusion of any scripts and style sheets that doxygen
-# needs, which is dependent on the configuration options used.
-# It is advised to generate a default header using "doxygen -w html
-# header.html footer.html stylesheet.css YourConfigFile" and then modify
-# that header. Note that the header is subject to change so you typically
-# have to redo this when upgrading to a newer version of doxygen or when
-# changing the value of configuration settings such as GENERATE_TREEVIEW!
-
-HTML_HEADER            =
-
-# The HTML_FOOTER tag can be used to specify a personal HTML footer for
-# each generated HTML page. If it is left blank doxygen will generate a
-# standard footer.
-
-HTML_FOOTER            =
-
-# The HTML_STYLESHEET tag can be used to specify a user-defined cascading
-# style sheet that is used by each HTML page. It can be used to
-# fine-tune the look of the HTML output. If the tag is left blank doxygen
-# will generate a default style sheet. Note that doxygen will try to copy
-# the style sheet file to the HTML output directory, so don't put your own
-# style sheet in the HTML output directory as well, or it will be erased!
-
-HTML_STYLESHEET        =
-
-# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
-# other source files which should be copied to the HTML output directory. Note
-# that these files will be copied to the base HTML output directory. Use the
-# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
-# files. In the HTML_STYLESHEET file, use the file name only. Also note that
-# the files will be copied as-is; there are no commands or markers available.
-
-HTML_EXTRA_FILES       =
-
-# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output.
-# Doxygen will adjust the colors in the style sheet and background images
-# according to this color. Hue is specified as an angle on a colorwheel,
-# see http://en.wikipedia.org/wiki/Hue for more information.
-# For instance the value 0 represents red, 60 is yellow, 120 is green,
-# 180 is cyan, 240 is blue, 300 purple, and 360 is red again.
-# The allowed range is 0 to 359.
-
-HTML_COLORSTYLE_HUE    = 220
-
-# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of
-# the colors in the HTML output. For a value of 0 the output will use
-# grayscales only. A value of 255 will produce the most vivid colors.
-
-HTML_COLORSTYLE_SAT    = 100
-
-# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to
-# the luminance component of the colors in the HTML output. Values below
-# 100 gradually make the output lighter, whereas values above 100 make
-# the output darker. The value divided by 100 is the actual gamma applied,
-# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2,
-# and 100 does not change the gamma.
-
-HTML_COLORSTYLE_GAMMA  = 80
-
-# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
-# page will contain the date and time when the page was generated. Setting
-# this to NO can help when comparing the output of multiple runs.
-
-HTML_TIMESTAMP         = YES
-
-# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
-# documentation will contain sections that can be hidden and shown after the
-# page has loaded.
-
-HTML_DYNAMIC_SECTIONS  = NO
-
-# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of
-# entries shown in the various tree structured indices initially; the user
-# can expand and collapse entries dynamically later on. Doxygen will expand
-# the tree to such a level that at most the specified number of entries are
-# visible (unless a fully collapsed tree already exceeds this amount).
-# So setting the number of entries 1 will produce a full collapsed tree by
-# default. 0 is a special value representing an infinite number of entries
-# and will result in a full expanded tree by default.
-
-HTML_INDEX_NUM_ENTRIES = 100
-
-# If the GENERATE_DOCSET tag is set to YES, additional index files
-# will be generated that can be used as input for Apple's Xcode 3
-# integrated development environment, introduced with OSX 10.5 (Leopard).
-# To create a documentation set, doxygen will generate a Makefile in the
-# HTML output directory. Running make will produce the docset in that
-# directory and running "make install" will install the docset in
-# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find
-# it at startup.
-# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html
-# for more information.
-
-GENERATE_DOCSET        = NO
-
-# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the
-# feed. A documentation feed provides an umbrella under which multiple
-# documentation sets from a single provider (such as a company or product suite)
-# can be grouped.
-
-DOCSET_FEEDNAME        = "Doxygen generated docs"
-
-# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that
-# should uniquely identify the documentation set bundle. This should be a
-# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen
-# will append .docset to the name.
-
-DOCSET_BUNDLE_ID       = org.doxygen.Project
-
-# When GENERATE_PUBLISHER_ID tag specifies a string that should uniquely identify
-# the documentation publisher. This should be a reverse domain-name style
-# string, e.g. com.mycompany.MyDocSet.documentation.
-
-DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
-
-# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.
-
-DOCSET_PUBLISHER_NAME  = Publisher
-
-# If the GENERATE_HTMLHELP tag is set to YES, additional index files
-# will be generated that can be used as input for tools like the
-# Microsoft HTML help workshop to generate a compiled HTML help file (.chm)
-# of the generated HTML documentation.
-
-GENERATE_HTMLHELP      = NO
-
-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can
-# be used to specify the file name of the resulting .chm file. You
-# can add a path in front of the file if the result should not be
-# written to the html output directory.
-
-CHM_FILE               =
-
-# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can
-# be used to specify the location (absolute path including file name) of
-# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run
-# the HTML help compiler on the generated index.hhp.
-
-HHC_LOCATION           =
-
-# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag
-# controls if a separate .chi index file is generated (YES) or that
-# it should be included in the master .chm file (NO).
-
-GENERATE_CHI           = NO
-
-# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING
-# is used to encode HtmlHelp index (hhk), content (hhc) and project file
-# content.
-
-CHM_INDEX_ENCODING     =
-
-# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag
-# controls whether a binary table of contents is generated (YES) or a
-# normal table of contents (NO) in the .chm file.
-
-BINARY_TOC             = NO
-
-# The TOC_EXPAND flag can be set to YES to add extra items for group members
-# to the contents of the HTML help documentation and to the tree view.
-
-TOC_EXPAND             = NO
-
-# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
-# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated
-# that can be used as input for Qt's qhelpgenerator to generate a
-# Qt Compressed Help (.qch) of the generated HTML documentation.
-
-GENERATE_QHP           = NO
-
-# If the QHG_LOCATION tag is specified, the QCH_FILE tag can
-# be used to specify the file name of the resulting .qch file.
-# The path specified is relative to the HTML output folder.
-
-QCH_FILE               =
-
-# The QHP_NAMESPACE tag specifies the namespace to use when generating
-# Qt Help Project output. For more information please see
-# http://doc.trolltech.com/qthelpproject.html#namespace
-
-QHP_NAMESPACE          = org.doxygen.Project
-
-# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating
-# Qt Help Project output. For more information please see
-# http://doc.trolltech.com/qthelpproject.html#virtual-folders
-
-QHP_VIRTUAL_FOLDER     = doc
-
-# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to
-# add. For more information please see
-# http://doc.trolltech.com/qthelpproject.html#custom-filters
-
-QHP_CUST_FILTER_NAME   =
-
-# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the
-# custom filter to add. For more information please see
-# <a href="http://doc.trolltech.com/qthelpproject.html#custom-filters">
-# Qt Help Project / Custom Filters</a>.
-
-QHP_CUST_FILTER_ATTRS  =
-
-# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
-# project's
-# filter section matches.
-# <a href="http://doc.trolltech.com/qthelpproject.html#filter-attributes">
-# Qt Help Project / Filter Attributes</a>.
-
-QHP_SECT_FILTER_ATTRS  =
-
-# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can
-# be used to specify the location of Qt's qhelpgenerator.
-# If non-empty doxygen will try to run qhelpgenerator on the generated
-# .qhp file.
-
-QHG_LOCATION           =
-
-# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files
-# will be generated, which together with the HTML files, form an Eclipse help
-# plugin. To install this plugin and make it available under the help contents
-# menu in Eclipse, the contents of the directory containing the HTML and XML
-# files needs to be copied into the plugins directory of eclipse. The name of
-# the directory within the plugins directory should be the same as
-# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before
-# the help appears.
-
-GENERATE_ECLIPSEHELP   = NO
-
-# A unique identifier for the eclipse help plugin. When installing the plugin
-# the directory name containing the HTML and XML files should also have
-# this name.
-
-ECLIPSE_DOC_ID         = org.doxygen.Project
-
-# The DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs)
-# at top of each HTML page. The value NO (the default) enables the index and
-# the value YES disables it. Since the tabs have the same information as the
-# navigation tree you can set this option to NO if you already set
-# GENERATE_TREEVIEW to YES.
-
-DISABLE_INDEX          = NO
-
-# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
-# structure should be generated to display hierarchical information.
-# If the tag value is set to YES, a side panel will be generated
-# containing a tree-like index structure (just like the one that
-# is generated for HTML Help). For this to work a browser that supports
-# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser).
-# Windows users are probably better off using the HTML help feature.
-# Since the tree basically has the same information as the tab index you
-# could consider to set DISABLE_INDEX to NO when enabling this option.
-
-GENERATE_TREEVIEW      = YES
-
-# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values
-# (range [0,1..20]) that doxygen will group on one line in the generated HTML
-# documentation. Note that a value of 0 will completely suppress the enum
-# values from appearing in the overview section.
-
-ENUM_VALUES_PER_LINE   = 4
-
-# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be
-# used to set the initial width (in pixels) of the frame in which the tree
-# is shown.
-
-TREEVIEW_WIDTH         = 250
-
-# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open
-# links to external symbols imported via tag files in a separate window.
-
-EXT_LINKS_IN_WINDOW    = NO
-
-# Use this tag to change the font size of Latex formulas included
-# as images in the HTML documentation. The default is 10. Note that
-# when you change the font size after a successful doxygen run you need
-# to manually remove any form_*.png images from the HTML output directory
-# to force them to be regenerated.
-
-FORMULA_FONTSIZE       = 10
-
-# Use the FORMULA_TRANPARENT tag to determine whether or not the images
-# generated for formulas are transparent PNGs. Transparent PNGs are
-# not supported properly for IE 6.0, but are supported on all modern browsers.
-# Note that when changing this option you need to delete any form_*.png files
-# in the HTML output before the changes have effect.
-
-FORMULA_TRANSPARENT    = YES
-
-# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax
-# (see http://www.mathjax.org) which uses client side Javascript for the
-# rendering instead of using prerendered bitmaps. Use this if you do not
-# have LaTeX installed or if you want to formulas look prettier in the HTML
-# output. When enabled you may also need to install MathJax separately and
-# configure the path to it using the MATHJAX_RELPATH option.
-
-USE_MATHJAX            = NO
-
-# When MathJax is enabled you need to specify the location relative to the
-# HTML output directory using the MATHJAX_RELPATH option. The destination
-# directory should contain the MathJax.js script. For instance, if the mathjax
-# directory is located at the same level as the HTML output directory, then
-# MATHJAX_RELPATH should be ../mathjax. The default value points to
-# the MathJax Content Delivery Network so you can quickly see the result without
-# installing MathJax.  However, it is strongly recommended to install a local
-# copy of MathJax from http://www.mathjax.org before deployment.
-
-MATHJAX_RELPATH        = http://www.mathjax.org/mathjax
-
-# The MATHJAX_EXTENSIONS tag can be used to specify one or MathJax extension
-# names that should be enabled during MathJax rendering.
-
-MATHJAX_EXTENSIONS     =
-
-# When the SEARCHENGINE tag is enabled doxygen will generate a search box
-# for the HTML output. The underlying search engine uses javascript
-# and DHTML and should work on any modern browser. Note that when using
-# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets
-# (GENERATE_DOCSET) there is already a search function so this one should
-# typically be disabled. For large projects the javascript based search engine
-# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.
-
-SEARCHENGINE           = YES
-
-# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
-# implemented using a PHP enabled web server instead of at the web client
-# using Javascript. Doxygen will generate the search PHP script and index
-# file to put on the web server. The advantage of the server
-# based approach is that it scales better to large projects and allows
-# full text search. The disadvantages are that it is more difficult to setup
-# and does not have live searching capabilities.
-
-SERVER_BASED_SEARCH    = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the LaTeX output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will
-# generate Latex output.
-
-GENERATE_LATEX         = YES
-
-# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be
-# put in front of it. If left blank `latex' will be used as the default path.
-
-LATEX_OUTPUT           = latex
-
-# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
-# invoked. If left blank `latex' will be used as the default command name.
-# Note that when enabling USE_PDFLATEX this option is only used for
-# generating bitmaps for formulas in the HTML output, but not in the
-# Makefile that is written to the output directory.
-
-LATEX_CMD_NAME         = latex
-
-# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to
-# generate index for LaTeX. If left blank `makeindex' will be used as the
-# default command name.
-
-MAKEINDEX_CMD_NAME     = makeindex
-
-# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact
-# LaTeX documents. This may be useful for small projects and may help to
-# save some trees in general.
-
-COMPACT_LATEX          = NO
-
-# The PAPER_TYPE tag can be used to set the paper type that is used
-# by the printer. Possible values are: a4, letter, legal and
-# executive. If left blank a4wide will be used.
-
-PAPER_TYPE             = letter
-
-# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX
-# packages that should be included in the LaTeX output.
-
-EXTRA_PACKAGES         =
-
-# The LATEX_HEADER tag can be used to specify a personal LaTeX header for
-# the generated latex document. The header should contain everything until
-# the first chapter. If it is left blank doxygen will generate a
-# standard header. Notice: only use this tag if you know what you are doing!
-
-LATEX_HEADER           =
-
-# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for
-# the generated latex document. The footer should contain everything after
-# the last chapter. If it is left blank doxygen will generate a
-# standard footer. Notice: only use this tag if you know what you are doing!
-
-LATEX_FOOTER           =
-
-# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated
-# is prepared for conversion to pdf (using ps2pdf). The pdf file will
-# contain links (just like the HTML output) instead of page references
-# This makes the output suitable for online browsing using a pdf viewer.
-
-PDF_HYPERLINKS         = YES
-
-# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of
-# plain latex in the generated Makefile. Set this option to YES to get a
-# higher quality PDF documentation.
-
-USE_PDFLATEX           = YES
-
-# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode.
-# command to the generated LaTeX files. This will instruct LaTeX to keep
-# running if errors occur, instead of asking the user for help.
-# This option is also used when generating formulas in HTML.
-
-LATEX_BATCHMODE        = NO
-
-# If LATEX_HIDE_INDICES is set to YES then doxygen will not
-# include the index chapters (such as File Index, Compound Index, etc.)
-# in the output.
-
-LATEX_HIDE_INDICES     = NO
-
-# If LATEX_SOURCE_CODE is set to YES then doxygen will include
-# source code with syntax highlighting in the LaTeX output.
-# Note that which sources are shown also depends on other settings
-# such as SOURCE_BROWSER.
-
-LATEX_SOURCE_CODE      = YES
-
-# The LATEX_BIB_STYLE tag can be used to specify the style to use for the
-# bibliography, e.g. plainnat, or ieeetr. The default style is "plain". See
-# http://en.wikipedia.org/wiki/BibTeX for more info.
-
-LATEX_BIB_STYLE        = plain
-
-#---------------------------------------------------------------------------
-# configuration options related to the RTF output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output
-# The RTF output is optimized for Word 97 and may not look very pretty with
-# other RTF readers or editors.
-
-GENERATE_RTF           = NO
-
-# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be
-# put in front of it. If left blank `rtf' will be used as the default path.
-
-RTF_OUTPUT             = rtf
-
-# If the COMPACT_RTF tag is set to YES Doxygen generates more compact
-# RTF documents. This may be useful for small projects and may help to
-# save some trees in general.
-
-COMPACT_RTF            = NO
-
-# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated
-# will contain hyperlink fields. The RTF file will
-# contain links (just like the HTML output) instead of page references.
-# This makes the output suitable for online browsing using WORD or other
-# programs which support those fields.
-# Note: wordpad (write) and others do not support links.
-
-RTF_HYPERLINKS         = YES
-
-# Load style sheet definitions from file. Syntax is similar to doxygen's
-# config file, i.e. a series of assignments. You only have to provide
-# replacements, missing definitions are set to their default value.
-
-RTF_STYLESHEET_FILE    =
-
-# Set optional variables used in the generation of an rtf document.
-# Syntax is similar to doxygen's config file.
-
-RTF_EXTENSIONS_FILE    =
-
-#---------------------------------------------------------------------------
-# configuration options related to the man page output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_MAN tag is set to YES (the default) Doxygen will
-# generate man pages
-
-GENERATE_MAN           = NO
-
-# The MAN_OUTPUT tag is used to specify where the man pages will be put.
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be
-# put in front of it. If left blank `man' will be used as the default path.
-
-MAN_OUTPUT             = man
-
-# The MAN_EXTENSION tag determines the extension that is added to
-# the generated man pages (default is the subroutine's section .3)
-
-MAN_EXTENSION          = .3
-
-# If the MAN_LINKS tag is set to YES and Doxygen generates man output,
-# then it will generate one additional man file for each entity
-# documented in the real man page(s). These additional files
-# only source the real man page, but without them the man command
-# would be unable to find the correct page. The default is NO.
-
-MAN_LINKS              = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the XML output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_XML tag is set to YES Doxygen will
-# generate an XML file that captures the structure of
-# the code including all documentation.
-
-GENERATE_XML           = NO
-
-# The XML_OUTPUT tag is used to specify where the XML pages will be put.
-# If a relative path is entered the value of OUTPUT_DIRECTORY will be
-# put in front of it. If left blank `xml' will be used as the default path.
-
-XML_OUTPUT             = xml
-
-# If the XML_PROGRAMLISTING tag is set to YES Doxygen will
-# dump the program listings (including syntax highlighting
-# and cross-referencing information) to the XML output. Note that
-# enabling this will significantly increase the size of the XML output.
-
-XML_PROGRAMLISTING     = YES
-
-#---------------------------------------------------------------------------
-# configuration options for the AutoGen Definitions output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will
-# generate an AutoGen Definitions (see autogen.sf.net) file
-# that captures the structure of the code including all
-# documentation. Note that this feature is still experimental
-# and incomplete at the moment.
-
-GENERATE_AUTOGEN_DEF   = NO
-
-#---------------------------------------------------------------------------
-# configuration options related to the Perl module output
-#---------------------------------------------------------------------------
-
-# If the GENERATE_PERLMOD tag is set to YES Doxygen will
-# generate a Perl module file that captures the structure of
-# the code including all documentation. Note that this
-# feature is still experimental and incomplete at the
-# moment.
-
-GENERATE_PERLMOD       = NO
-
-# If the PERLMOD_LATEX tag is set to YES Doxygen will generate
-# the necessary Makefile rules, Perl scripts and LaTeX code to be able
-# to generate PDF and DVI output from the Perl module output.
-
-PERLMOD_LATEX          = NO
-
-# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be
-# nicely formatted so it can be parsed by a human reader.  This is useful
-# if you want to understand what is going on.  On the other hand, if this
-# tag is set to NO the size of the Perl module output will be much smaller
-# and Perl will parse it just the same.
-
-PERLMOD_PRETTY         = YES
-
-# The names of the make variables in the generated doxyrules.make file
-# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.
-# This is useful so different doxyrules.make files included by the same
-# Makefile don't overwrite each other's variables.
-
-PERLMOD_MAKEVAR_PREFIX =
-
-#---------------------------------------------------------------------------
-# Configuration options related to the preprocessor
-#---------------------------------------------------------------------------
-
-# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will
-# evaluate all C-preprocessor directives found in the sources and include
-# files.
-
-ENABLE_PREPROCESSING   = YES
-
-# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro
-# names in the source code. If set to NO (the default) only conditional
-# compilation will be performed. Macro expansion can be done in a controlled
-# way by setting EXPAND_ONLY_PREDEF to YES.
-
-MACRO_EXPANSION        = NO
-
-# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES
-# then the macro expansion is limited to the macros specified with the
-# PREDEFINED and EXPAND_AS_DEFINED tags.
-
-EXPAND_ONLY_PREDEF     = NO
-
-# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files
-# pointed to by INCLUDE_PATH will be searched when a #include is found.
-
-SEARCH_INCLUDES        = YES
-
-# The INCLUDE_PATH tag can be used to specify one or more directories that
-# contain include files that are not input files but should be processed by
-# the preprocessor.
-
-INCLUDE_PATH           =
-
-# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
-# patterns (like *.h and *.hpp) to filter out the header-files in the
-# directories. If left blank, the patterns specified with FILE_PATTERNS will
-# be used.
-
-INCLUDE_FILE_PATTERNS  =
-
-# The PREDEFINED tag can be used to specify one or more macro names that
-# are defined before the preprocessor is started (similar to the -D option of
-# gcc). The argument of the tag is a list of macros of the form: name
-# or name=definition (no spaces). If the definition and the = are
-# omitted =1 is assumed. To prevent a macro definition from being
-# undefined via #undef or recursively expanded use the := operator
-# instead of the = operator.
-
-PREDEFINED             = HAVE_MC_H \
-                         HAVE_MCX_H \
-                         HAVE_EMBED \
-                         APBS_NOINLINE
-
-# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then
-# this tag can be used to specify a list of macro names that should be expanded.
-# The macro definition that is found in the sources will be used.
-# Use the PREDEFINED tag if you want to use a different macro definition that
-# overrules the definition found in the source code.
-
-EXPAND_AS_DEFINED      =
-
-# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then
-# doxygen's preprocessor will remove all references to function-like macros
-# that are alone on a line, have an all uppercase name, and do not end with a
-# semicolon, because these will confuse the parser if not removed.
-
-SKIP_FUNCTION_MACROS   = YES
-
-#---------------------------------------------------------------------------
-# Configuration::additions related to external references
-#---------------------------------------------------------------------------
-
-# The TAGFILES option can be used to specify one or more tagfiles. For each
-# tag file the location of the external documentation should be added. The
-# format of a tag file without this location is as follows:
-#   TAGFILES = file1 file2 ...
-# Adding location for the tag files is done as follows:
-#   TAGFILES = file1=loc1 "file2 = loc2" ...
-# where "loc1" and "loc2" can be relative or absolute paths
-# or URLs. Note that each tag file must have a unique name (where the name does
-# NOT include the path). If a tag file is not located in the directory in which
-# doxygen is run, you must also specify the path to the tagfile here.
-
-TAGFILES               =
-
-# When a file name is specified after GENERATE_TAGFILE, doxygen will create
-# a tag file that is based on the input files it reads.
-
-GENERATE_TAGFILE       =
-
-# If the ALLEXTERNALS tag is set to YES all external classes will be listed
-# in the class index. If set to NO only the inherited external classes
-# will be listed.
-
-ALLEXTERNALS           = NO
-
-# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed
-# in the modules index. If set to NO, only the current project's groups will
-# be listed.
-
-EXTERNAL_GROUPS        = YES
-
-# The PERL_PATH should be the absolute path and name of the perl script
-# interpreter (i.e. the result of `which perl').
-
-PERL_PATH              = /usr/bin/perl
-
-#---------------------------------------------------------------------------
-# Configuration options related to the dot tool
-#---------------------------------------------------------------------------
-
-# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will
-# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base
-# or super classes. Setting the tag to NO turns the diagrams off. Note that
-# this option also works with HAVE_DOT disabled, but it is recommended to
-# install and use dot, since it yields more powerful graphs.
-
-CLASS_DIAGRAMS         = NO
-
-# You can define message sequence charts within doxygen comments using the \msc
-# command. Doxygen will then run the mscgen tool (see
-# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the
-# documentation. The MSCGEN_PATH tag allows you to specify the directory where
-# the mscgen tool resides. If left empty the tool is assumed to be found in the
-# default search path.
-
-MSCGEN_PATH            =
-
-# If set to YES, the inheritance and collaboration graphs will hide
-# inheritance and usage relations if the target is undocumented
-# or is not a class.
-
-HIDE_UNDOC_RELATIONS   = YES
-
-# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
-# available from the path. This tool is part of Graphviz, a graph visualization
-# toolkit from AT&T and Lucent Bell Labs. The other options in this section
-# have no effect if this option is set to NO (the default)
-
-HAVE_DOT               = YES
-
-# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is
-# allowed to run in parallel. When set to 0 (the default) doxygen will
-# base this on the number of processors available in the system. You can set it
-# explicitly to a value larger than 0 to get control over the balance
-# between CPU load and processing speed.
-
-DOT_NUM_THREADS        = 0
-
-# By default doxygen will use the Helvetica font for all dot files that
-# doxygen generates. When you want a differently looking font you can specify
-# the font name using DOT_FONTNAME. You need to make sure dot is able to find
-# the font, which can be done by putting it in a standard location or by setting
-# the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the
-# directory containing the font.
-
-DOT_FONTNAME           = Anonymous Pro
-
-# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.
-# The default size is 10pt.
-
-DOT_FONTSIZE           = 10
-
-# By default doxygen will tell dot to use the Helvetica font.
-# If you specify a different font using DOT_FONTNAME you can use DOT_FONTPATH to
-# set the path where dot can find it.
-
-DOT_FONTPATH           =
-
-# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen
-# will generate a graph for each documented class showing the direct and
-# indirect inheritance relations. Setting this tag to YES will force the
-# CLASS_DIAGRAMS tag to NO.
-
-CLASS_GRAPH            = NO
-
-# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen
-# will generate a graph for each documented class showing the direct and
-# indirect implementation dependencies (inheritance, containment, and
-# class references variables) of the class with other documented classes.
-
-COLLABORATION_GRAPH    = NO
-
-# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen
-# will generate a graph for groups, showing the direct groups dependencies
-
-GROUP_GRAPHS           = NO
-
-# If the UML_LOOK tag is set to YES doxygen will generate inheritance and
-# collaboration diagrams in a style similar to the OMG's Unified Modeling
-# Language.
-
-UML_LOOK               = NO
-
-# If the UML_LOOK tag is enabled, the fields and methods are shown inside
-# the class node. If there are many fields or methods and many nodes the
-# graph may become too big to be useful. The UML_LIMIT_NUM_FIELDS
-# threshold limits the number of items for each type to make the size more
-# managable. Set this to 0 for no limit. Note that the threshold may be
-# exceeded by 50% before the limit is enforced.
-
-UML_LIMIT_NUM_FIELDS   = 10
-
-# If set to YES, the inheritance and collaboration graphs will show the
-# relations between templates and their instances.
-
-TEMPLATE_RELATIONS     = NO
-
-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT
-# tags are set to YES then doxygen will generate a graph for each documented
-# file showing the direct and indirect include dependencies of the file with
-# other documented files.
-
-INCLUDE_GRAPH          = YES
-
-# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and
-# HAVE_DOT tags are set to YES then doxygen will generate a graph for each
-# documented header file showing the documented files that directly or
-# indirectly include this file.
-
-INCLUDED_BY_GRAPH      = YES
-
-# If the CALL_GRAPH and HAVE_DOT options are set to YES then
-# doxygen will generate a call dependency graph for every global function
-# or class method. Note that enabling this option will significantly increase
-# the time of a run. So in most cases it will be better to enable call graphs
-# for selected functions only using the \callgraph command.
-
-CALL_GRAPH             = NO
-
-# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then
-# doxygen will generate a caller dependency graph for every global function
-# or class method. Note that enabling this option will significantly increase
-# the time of a run. So in most cases it will be better to enable caller
-# graphs for selected functions only using the \callergraph command.
-
-CALLER_GRAPH           = NO
-
-# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen
-# will generate a graphical hierarchy of all classes instead of a textual one.
-
-GRAPHICAL_HIERARCHY    = YES
-
-# If the DIRECTORY_GRAPH and HAVE_DOT tags are set to YES
-# then doxygen will show the dependencies a directory has on other directories
-# in a graphical way. The dependency relations are determined by the #include
-# relations between the files in the directories.
-
-DIRECTORY_GRAPH        = YES
-
-# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
-# generated by dot. Possible values are svg, png, jpg, or gif.
-# If left blank png will be used. If you choose svg you need to set
-# HTML_FILE_EXTENSION to xhtml in order to make the SVG files
-# visible in IE 9+ (other browsers do not have this requirement).
-
-DOT_IMAGE_FORMAT       = png
-
-# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
-# enable generation of interactive SVG images that allow zooming and panning.
-# Note that this requires a modern browser other than Internet Explorer.
-# Tested and working are Firefox, Chrome, Safari, and Opera. For IE 9+ you
-# need to set HTML_FILE_EXTENSION to xhtml in order to make the SVG files
-# visible. Older versions of IE do not have SVG support.
-
-INTERACTIVE_SVG        = NO
-
-# The tag DOT_PATH can be used to specify the path where the dot tool can be
-# found. If left blank, it is assumed the dot tool can be found in the path.
-
-DOT_PATH               =
-
-# The DOTFILE_DIRS tag can be used to specify one or more directories that
-# contain dot files that are included in the documentation (see the
-# \dotfile command).
-
-DOTFILE_DIRS           =
-
-# The MSCFILE_DIRS tag can be used to specify one or more directories that
-# contain msc files that are included in the documentation (see the
-# \mscfile command).
-
-MSCFILE_DIRS           =
-
-# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of
-# nodes that will be shown in the graph. If the number of nodes in a graph
-# becomes larger than this value, doxygen will truncate the graph, which is
-# visualized by representing a node as a red box. Note that doxygen if the
-# number of direct children of the root node in a graph is already larger than
-# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note
-# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
-
-DOT_GRAPH_MAX_NODES    = 50
-
-# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the
-# graphs generated by dot. A depth value of 3 means that only nodes reachable
-# from the root by following a path via at most 3 edges will be shown. Nodes
-# that lay further from the root node will be omitted. Note that setting this
-# option to 1 or 2 may greatly reduce the computation time needed for large
-# code bases. Also note that the size of a graph can be further restricted by
-# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
-
-MAX_DOT_GRAPH_DEPTH    = 0
-
-# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent
-# background. This is disabled by default, because dot on Windows does not
-# seem to support this out of the box. Warning: Depending on the platform used,
-# enabling this option may lead to badly anti-aliased labels on the edges of
-# a graph (i.e. they become hard to read).
-
-DOT_TRANSPARENT        = NO
-
-# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output
-# files in one run (i.e. multiple -o and -T options on the command line). This
-# makes dot run faster, but since only newer versions of dot (>1.8.10)
-# support this, this feature is disabled by default.
-
-DOT_MULTI_TARGETS      = NO
-
-# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will
-# generate a legend page explaining the meaning of the various boxes and
-# arrows in the dot generated graphs.
-
-GENERATE_LEGEND        = YES
-
-# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will
-# remove the intermediate dot files that are used to generate
-# the various graphs.
-
-DOT_CLEANUP            = NO
diff --new-file -ru apbs-3.0.0/doc/programmer/.config/mainpage.h.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/mainpage.h.in
--- apbs-3.0.0/doc/programmer/.config/mainpage.h.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/mainpage.h.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,167 +0,0 @@
-/**
- * <center>
- * @mainpage APBS Programmers Guide
- *
- * APBS was written by Nathan A. Baker.<br>
- * Additional contributing authors listed in the code documentation.
- * </center>
- *
- * <hr width="100%">
- * @section toc   Table of Contents
- * <ul>
- *   <li> @ref style
- *   <li> @ref api
- *     <ul>
- *       <li> <a href="modules.html">Modules</a>
- *       <li> <a href="annotated.html">Class list</a>
- *       <li> <a href="functions.html">Class members</a>
- *       <li> <a href="globals.html">Class methods</a>
- *    </ul>
- * </ul>
- *
- * <hr width="100%">
- * @section license License
- *
- * <p>
- * Primary author: Nathan A. Baker (<a href="mailto:nathan.baker@pnl.gov">nathan.baker@pnnl.gov</a>)<br>
- * Pacific Northwest National Laboratory<br>
- * Additional contributing authors are listed in the code documentation.</p>
- *
- * <p>
- * Copyright (c) 2010-2020 Battelle Memorial Institute. Developed at the Pacific
- * Northwest National Laboratory, operated by Battelle Memorial Institute, Pacific
- * Northwest Division for the U.S. Department of Energy.</p>
- *
- * <p>
- * Portions Copyright (c) 2002-2010, Washington University in St. Louis.<br/>
- * Portions Copyright (c) 2002-2020, Nathan A. Baker.<br/>
- * Portions Copyright (c) 1999-2002, The Regents of the University of California.<br/>
- * Portions Copyright (c) 1995, Michael Holst.
- * </p>
- *
- * <p>
- * All rights reserved.
- * </p>
- *
- * <p>
- * Redistribution and use in source and binary forms, with or without
- * modification, are permitted provided that the following conditions are met:
- * </p>
- * <ul>
- * <li>Redistributions of source code must retain the above copyright notice, this
- *   list of conditions and the following disclaimer.
- * <li>Redistributions in binary form must reproduce the above copyright notice,
- *   this list of conditions and the following disclaimer in the documentation
- *   and/or other materials provided with the distribution.
- * <li>Neither the name of the developer nor the names of its contributors may be
- *   used to endorse or promote products derived from this software without
- *   specific prior written permission.
- * </ul>
- * <p>
- * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
- * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
- * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
- * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
- * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
- * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
- * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
- * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
- * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
- * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
- * </p>
- *
- * <hr>
- * <p>
- * This documentation provides information about the programming interface
- * provided by the APBS software and a general guide to linking to the APBS
- * libraries.  Information about installation, configuration, and general usage
- * can be found in the <a href="user.html">User's Guide</a>.
- * <hr>
- *
- *  @section style Programming Style
- *
- *  <p>
- *  APBS was developed following the <a
- *  href="http://scicomp.ucsd.edu/~mholst/codes/maloc/cleanc.html">Clean OO
- *  C</a> style of Mike Holst.  In short, Clean OO C code is written in a
- *  object-oriented, ISO C-compliant fashion, and can be compiled with either a
- *  C or C++ compiler.  <p> Following this formalism, all public data is
- *  enclosed in structures which resemble C++ classes.  These structures and
- *  member functions are then declared in a public header file which provides a
- *  concise description of the interface for the class.  Private functions and
- *  data are included in private header files (or simply the source code files
- *  themselves) which are not distributed.  When using the library, the
- *  end-user only sees the public header file and the compiled library and is
- *  therefore (hopefully) oblivious to the private members and functions.  Each
- *  class is also equipped with a constructor and destructor function which is
- *  responsible for allocating and freeing any memory required by the
- *  instatiated objects.
- *
- *  <p>
- *  As mentioned above, public data members are enclosed in C structures which
- *  are visible to the end-user.  Public member functions are generated by
- *  mangling the class and function names <i>and</i> passing a pointer to the
- *  object on which the member function is supposed to act.  For example, a
- *  public member function with the C++ declaration
- *    <pre>
- *   public double Foo::bar(int i, double d)
- *   </pre>
- * would be declared as
- *   <pre>
- *   VEXTERNC double Foo_bar(Foo *thee, int i, double d)
- *   </pre>
- * where <code>VEXTERNC</code> is a compiler-dependent macro, the underscore
- * <code>_</code> replaces the C++ double-colon <code>::</code>, and
- * <code>thee</code> replaces the <code>this</code> variable implicit in all
- * C++ classes.  Since they do not appear in public header files, private
- * functions could be declared in any format pleasing to the user, however, the
- * above declaration convention should generally be used for both public and
- * private functions.  Within the source code, the public and private function
- * declarations/definitions are prefaced by the macros <code>VPUBLIC</code> and
- * <code>VPRIVATE</code>, respectively.  These are macros which reduce global
- * name pollution, similar to encapsulating private data withing C++ classes.
- *
- * <p>
- * The only C++ functions not explicitly covered by the above declaration
- * scheme are the constructors (used to allocate and initialize class data
- * members) and destructors (used to free allocated memory).  These are
- * declared in the following fashion:  a constructor with the C++ declaration
- *    <pre>
- *    public void Foo::Foo(int i, double d)
- *    </pre>
- * would be declared as
- *     <pre>
- *     VEXTERNC Foo* Foo_ctor(int i, double d)
- *     </pre>
- * which returns a pointer to the newly constructed <code>Foo</code> object.
- * Likewise, a destructor declared as
- *     <pre>
- *     public void Foo::~Foo()
- *     </pre>
- * in C++ would be
- *     <pre>
- *     VEXTERNC void Foo_dtor(Foo **thee)
- *     </pre>
- * in Clean OO C.
- * <p>
- * Finally, inline functions in C++ are simply treated as macros in Clean OO C
- * and declared/defined using <code>define</code> statements in the public
- * header file.
- * <p>
- * See any of the APBS header files for more information on Clean OO C
- * programming styles.
- *
- * @section api Application programming interface documentation
- * <p>
- * The API documentation for this code was generated by <a
- * href="http://www.doxygen.org">doxygen</a>.  You can either view the API
- * documentation by using the links at the top of this page, or the slight
- * re-worded/re-interpreted list below:
- *    <ul>
- *    <li> <a href="modules.html">Class overview</a>
- *    <li> <a href="annotated.html">Class declarations</a>
- *    <li> <a href="functions.html">Class members</a>
- *    <li> <a href="globals.html">Class methods</a>
- *    </ul>
- *
- */
diff --new-file -ru apbs-3.0.0/doc/programmer/.config/programmer.html.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/programmer.html.in
--- apbs-3.0.0/doc/programmer/.config/programmer.html.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/programmer/.config/programmer.html.in	1970-01-01 01:00:00.000000000 +0100
@@ -1,12 +0,0 @@
-<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> 
-<html>
-<head> 
-<title>APBS @APBS_VERSION@ - Programmer's Guide</title>
-<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
-</head>
-
-<meta http-equiv="REFRESH" content="0;url=html/index.html"></HEAD>
-<body>
-Optional page text here.
-</body>
-</html>
diff --new-file -ru apbs-3.0.0/doc/README apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/README
--- apbs-3.0.0/doc/README	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/README	1970-01-01 01:00:00.000000000 +0100
@@ -1,2 +0,0 @@
-See `../doc` for full documentation or visit http://www.poissonboltzmann.org
-
diff --new-file -ru apbs-3.0.0/doc/ReleaseNotes.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/ReleaseNotes.md
--- apbs-3.0.0/doc/ReleaseNotes.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/ReleaseNotes.md	1970-01-01 01:00:00.000000000 +0100
@@ -1,11 +0,0 @@
-Dearest APBS users,
-
-We are pleased to announce the latest release of APBS 1.5. The latest version of APBS includes several notable features and bug fixes. This release includes the addition of Poisson-Boltzmann Analytical-Method (PB-AM), Poisson-Boltzmann Semi-Analytical Method (PB-SAM) and the Treecode-Accelerated Boundary Integral Poisson-Boltzmann method (TABI). Additionally, we have made improvements to the build system and the system tests, as well as miscellaneous bug fixes. A full change log may be found [here](https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/doc/ChangeLog.md).
-
-For help with installation, building, or running APBS, please visit https://gitter.im/Electrostatics/help.
-
-We thank you for your continued support of APBS.
-
-Sincerely,
-
-The APBS Development Team
diff --new-file -ru apbs-3.0.0/doc/release_procedure.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/release_procedure.md
--- apbs-3.0.0/doc/release_procedure.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/doc/release_procedure.md	1970-01-01 01:00:00.000000000 +0100
@@ -1,143 +0,0 @@
-APBS Release Procedure
------------------------
- 1. Change Version Number
-	 - [ ] Edit [apbs/CMakeLists.txt]([https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/CMakeLists.txt)
-		Increment the value for the APBS_VERSION variable:
-	     set(APBS_VERSION "M.m.u")
-	     Where:
-		 - M is the Major version - increment if there are breaking changes or dropping support for previous features
-		 - m is the Minor version - increment for new features added
-		 - u is the Micro version - increment for adding small changes like new tests or fixing small bugs
-
- 2. Update the ChangeLog
-	 - [ ] Edit [apbs/doc/ChangeLog]([https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/doc/ChangeLog.md)
-	   - Document major/minor changes for this release
-   
-  3. Update License info
-	   - [ ] Update license dates and information in source files
-	   - In apbs/src edit all .c source files and all .h header files, update dates
-  
- * Test release
-   - Set up separate machines or virtual machines for target deploy platforms:
-	 - [ ] Ubuntu-latest 
-	 - [ ] MacOSX-latest
-	 - [ ] Windows-latest (Windows Subsystem Linux)
-     
-   - On testing platforms install or verify presence of required tools:
-	 - [ ] Essential compile toolchain 
-     - [ ] Python 3.6 or newer
-     - [ ] git
-     - [ ] CMake 3.12 or newer
-     - [ ] Doxygen
-     - [ ] LaTeX builder like texlive, tetex (usually already available in linux)
-     
-   - Clone apbs github repository to testing machines:
-```bash
-            #!/bin/bash
-            mkdir ~/git
-            cd ~/git
-            git clone https://github.com/Electrostatics/apbs-pdb2pqr.git
-            cd apbs-pdb2pqr
-            git submodule init
-            git submodule update
-```
-   - Build testing
-     - On each platform test machine us the script below to build APBS
-     - Ensure that all tests run without segmentation faults and results are acceptable
-
-```bash
-		#!/bin/bash
-		
-		export INSTALL_DIR=$HOME/apbs-install
-		cd ~/git/apbs-pdb2pqr
-		rm -rf build                                    || exit 1
-		mkdir build                                     || exit 1
-		cd build                                        || exit 1
-		#  Configure the software to be built
-		cmake                                     \
-		      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
-		      -DENABLE_GEOFLOW=ON                 \
-		      -DENABLE_BEM=ON -DGET_MSMS=ON       \
-		      -DENABLE_FETK=ON                    \
-		      -DENABLE_PBSAM=OFF                  \
-		      -DENABLE_PBAM=OFF                   \
-		      -DENABLE_PYTHON=OFF                 \
-		      -DBUILD_SHARED_LIBS=OFF             \
-		      -DCMAKE_C_FLAGS="-fPIC"             \
-		      -DBUILD_DOC=ON                      \
-		      ..                                        || exit 1
-		#  Build and install the software
-		VERBOSE=1 make -j 1 install                     || exit 1
-		#  Test the software
-		cd ../tests                                     || exit 1
-		TESTNAMES="actin-dimer-auto     \
-		           actin-dimer-parallel \
-		           alkanes              \
-		           born                 \
-		           FKBP                 \
-		           geoflow              \
-		           hca-bind             \
-		           ion-pmf              \
-		           ion-protein          \
-		           ionize               \
-		           pka-lig              \
-		           point-pmf            \
-		           solv                 \
-		           protein-rna"
-		for testname in `echo $TESTNAMES`
-		do
-		  pushd .
-		  echo bash run_travis_test.sh $INSTALL_DIR/bin $testname
-		       bash run_travis_test.sh $INSTALL_DIR/bin $testname
-		  popd
-		done
-```
-     
- * Upload Binary Packages
-   - On the following test platforms:
-	 - [ ] Ubuntu-latest 
-	 - [ ] MacOSX-latest
-	 - [ ] Windows-latest (Windows Subsystem Linux)
-     
-   - Add entire install structure to archive file
-```bash
-	     #!/bin/bash
-	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
-	     PLATFORM=`uname -s`
-	     ARCHITECTURE=`uname -m`
-	     tar -czf APBS-${VERSION}-${PLATFORM}-${ARCHITECTURE}.tgz ~/apbs-install
-```
-   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
-     
- * Upload Source Packages
-```bash
-	     #!/bin/bash
-	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
-	     cd ~/git/apbs-pdb2pqr/apbs
-	     #  Use git to remove all non-versioned files and directories
-	     #  NOTE: Use -dfn flags first for a dry run and make sure right files are rm'ed
-	     git clean -dfq
-	     #  NOTE: Add the whole apbs directory to an arcive
-	     tar -czf APBS-${VERSION}-source.tar.gz ~/git/apbs-pdb2pqr
-```
-   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
-     
- * Upload Package Programmer Guide Package
-   - Build documentation
-```bash
-	     #!/bin/bash
-	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
-	     cd ~/git/apbs-pdb2pqr/apbs/doc
-	     #  Use git to remove all non-versioned files and directories
-	     #  NOTE: Use -dfn flags first for a dry run and make sure right files are rm'ed
-	     git clean -dfq
-	     #  NOTE: Add the whole apbs directory to an arcive
-	     tar -czf APBS-${VERSION}-programmer_guide.tgz
-```
-     
-   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
-
- * Update http://www.poissonboltzmann.org/apbs/release-history with new release information.
-<!--stackedit_data:
-eyJoaXN0b3J5IjpbNTk4MzY2NDQ1XX0=
--->
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/background.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/background.rst
--- apbs-3.0.0/docs/background.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/background.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,215 @@
+Solvation model background
+==========================
+
+----------------
+Solvation models
+----------------
+
+Electrostatic and solvation models can be roughly divided into two classes ([Warshel2006]_, [Roux1999]_, [Ren2012]_) explicit solvent models that treat the solvent in atomic detail and implicit solvent models that generally replace the explicit solvent with a dielectric continuum.
+Each method has its strengths and weaknesses.
+While explicit solvent models offer some of the highest levels of detail, they generally require extensive sampling to converge properties of interest.
+On the other hand, implicit solvent models trade detail and some accuracy for the “pre-equilibration” of solvent degrees of freedom and elimination of sampling for these degrees of freedom. Implicit solvent methods are popular for a variety of biomedical research problems.
+
+The polar solvation energy is generally associated with a difference in charging free energies in vacuum and solvent.
+A variety of implicit solvent models are available to biomedical researchers to describe polar solvation; however, the most widely-used methods are currently the Generalized Born (GB) and Poisson-Boltzmann (PB) models.
+GB and related methods are very fast heuristic models for estimating the polar solvation energies of biomolecular structures and therefore are often used in high-throughput applications such as molecular dynamics simulations.
+PB methods can be formally derived from more detailed theories and offer a somewhat slower, but often more accurate, method for evaluating polar solvation properties and often serve as the basis for parameterization and testing of GB methods.
+Finally, unlike most GB methods, PB models provide a global solution for the electrostatic potential and field within and around a biomolecule, therefore making them uniquely suited to visualization and other structural analyses, diffusion simulations, and a number of other methods which require global electrostatic properties.
+
+The PB equation ([Fogolari2002]_, [Lamm2003]_, [Grochowski2007]_, [Baker2005]_) is a nonlinear elliptic partial differential equation of the form shown in the figure below which is solved for the electrostatic potential.
+The coefficients of this equation are directly related to the molecular structure of the system under consideration.
+PB theory is approximate and, as a result, has several well-known limitations which can affect its accuracy ([Grochowski2007]_, [Netz2000]_), particularly for strongly charged systems or high salt concentrations.
+However, despite these limitations, PB methods are still very important for biomolecular structural analysis, modeling, and simulation.
+Furthermore, these limitations are currently being addressed through new implicit solvent models and hybrid treatments which extend the applicability of PB theory while preserving some of its computational efficiency.
+There are currently examples of both types of treatments which leverage APBS ([Azuara2006]_, [Chu2007]_, [Vitalis2004]_).
+
+.. image:: /media/pb-schematic.png
+
+PB methods provide polar solvation energies and therefore must be complemented by non-polar solvation models to provide a complete view of biomolecular solvent-solute interactions. non-polar solvation is generally associated with the insertion of the uncharged solute into solvent. There are many non-polar solvation models available; however, work by Levy et al. [Levy2003]_ as well as our own research [Wagoner2006]_ has demonstrated the importance of non-polar implicit solvent models which include treatment of attractive solute-solvent dispersion terms.
+This model has been implemented in APBS and can also be easily transformed into simpler popular non-polar models (e.g., solvent-accessible surface area).
+While this model can be used separately from PB to analyze non-polar contributions to solvation energy, its preferred use is coupled to the PB equation through a geometric flow model [Chen2010]_ which treats polar and non-polar interactions in the same framework and reduces the number of user-specified empirical parameters.
+
+.. _errors:
+
+----------------------------
+Caveats and sources of error
+----------------------------
+
+^^^^^^^^^^^
+Model error
+^^^^^^^^^^^
+
+When performing solvation calculations using APBS, it is important to keep in mind that you are using an approximate model for solvation.
+Therefore, your answers may contain errors related to approximations in the model.
+Many review articles have covered the nature of these approximations, we will stress the highlights below.</p>
+
+""""""""""""""""""""""""""
+Linear dielectric response
+""""""""""""""""""""""""""
+
+The Poisson-Boltzmann equation models the solvent as a dielectric continuum that responds linearly to all applied fields.
+In particular, under this model, very strong fields can induce unrealistically strong polarization in the dielectric media representing the solvent and/or the solute interior.
+However, molecular solvents or solutes cannot support an infinite amount of polarization: they are limited by their density, their finite dipole moments, and their finite degree of electronic polarizability.
+Therefore, the continuum model assumption of linear dielectric response can break down in situations with strong electric fields; e.g., around nucleic acids or very highly-charged proteins.
+
+"""""""""""""""""""""""""
+Local dielectric response
+"""""""""""""""""""""""""
+
+The Poisson-Boltzmann equation models the solvent as a dielectric continuum that also responds locally to all applied fields. 
+n other words, under this model, the local polarization at a point x is only dependent on the field at point x.
+However, molecular solvents and solutes clearly don't obey this assumption: the variety of covalent, steric, and other non-bonded intra- and inter-molecular interactions ensures that the polarization at point x is dependent on solute-field interactions in a non-vanishing neighborhood around x.
+One way to limit the impact of this flawed assumption, is to model solute response as "explicitly" as possible in your continuum electrostatics problems.
+In other words, rather than relying upon the continuum model to reproduce conformational relaxation or response in your solute, model such response in detail through molecular simulations or other conformational sampling.
+
+"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+Ambiguity of dielectric interfaces and coefficient values
+"""""""""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Violation of the assumptions of linear and local dielectric response in real molecular systems leads to serious ambiguity in the definition of the dielectric coefficient in the Poisson-Boltzmann equation.
+In particular, while the values for bulk solvent (i.e., far away from the solute) response are well-defined, all other values of the dielectric coefficient are ambiguous.
+In general, continuum models assume a constant low-dielectric value inside the solute and the bulk solvent value outside the solute.
+This assumption creates tremendous sensitivity of calculation results on the placement of the dielectric interface (usually determined by solute atomic radii) and the specific value of the internal solute dielectric.
+In general, errors arising from this assumption can be minimized by using internal dielectric values that are consistent with the solute atomic radii parameterization.
+
+""""""""""""""""""""""""""""""""""""""""""""""""""
+No specific ion-solvent or ion-solute interactions
+""""""""""""""""""""""""""""""""""""""""""""""""""
+
+Most Poisson-Boltzmann models assume that ions do not interact directly with the solvent: they are charges embedded in the same dielectric material as the bulk solvent.
+This assumption implies that ions experience no "desolvation" penalty as they interact with the solute surface.
+Additionally, most Poisson-Boltzmann models assume that ions interaction with the solute only through electrostatic and hard-sphere steric potentials.
+However, this assumption neglects some of the subtlety of ion-protein interactions; in particular, dispersive interactions that can possibly lead to some degree of ion specificity.
+
+"""""""""""""""""""""""
+Mean field ion behavior
+"""""""""""""""""""""""
+
+Finally, the Poisson-Boltzmann model is a "mean field" description of ionic solutions.
+This means that ions only experience the average influence of other ions in the system; the model neglects fluctuations in the ionic atmosphere and correlations between the ions in solution.
+Such correlations and fluctuations can be very important at high ionic charge densities; e.g., for multivalent ions, high ion concentrations, or the high-density ionic regions near highly-charged biomolecules.
+
+^^^^^^^^^^^^^^^^^^^^
+Parameter set errors
+^^^^^^^^^^^^^^^^^^^^
+
+.. todo::
+
+   Under construction; please see https://arxiv.org/abs/1705.10035 for an initial discussion.
+   Saved as issue https://github.com/Electrostatics/apbs-pdb2pqr/issues/481 
+
+^^^^^^^^^^^^^^^^^^^^^^
+Structure-based errors
+^^^^^^^^^^^^^^^^^^^^^^
+
+Electrostatics calculations can be very sensitive to errors in the structure, including:
+
+* Misplaced atoms or sidechains
+
+* Missing regions of biomolecular structure
+
+* Incorrect titration state assignments
+
+Of these errors, incorrect titration states are the most common and, often, the most problematic.
+The software package PDB2PQR was created to minimize all of the above problems and we recommend its use to "pre-process" structures before electrostatics calculations.
+
+^^^^^^^^^^^^^^^^^^^^
+Discretization error
+^^^^^^^^^^^^^^^^^^^^
+
+The Poisson-Boltzmann partial differential equation must be discretized in order to be solved on a computer.
+APBS discretizes the equation in spacing by evaluating the problem coefficients and solving for the electrostatic potential on a set of grid (finite difference) or mesh (finite element) points.
+However, this discretization is an approximation to the actual, continuously-specified problem coefficients.
+Coarser discretization of coefficients and the solution reduce the overall accuracy and introduce errors into the final potential and calculated energies.
+
+It is very important to evaluate the sensitivity of your calculated energies to the grid spacings and lengths.
+In general, it is a good idea to scan a range of grid spacings and lengths before starting a problem and choose the largest problem domain with the smallest grid spacing that gives consistent results (e.g., results that don't change as you further reduce the grid spacing).
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^
+Solver and round-off error
+^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+APBS uses iterative solvers to solve the nonlinear algebraic equations resulting from the discretized Poisson-Boltzmann equation.
+Iterative solvers obtain solutions to algebraic equations which are accurate within a specified error tolerance.
+Current versions of APBS use a fixed error tolerance of 10\ :sup:`-6` which implies approximately 1 part per million root-mean-squared error in calculated potentials.
+Such error tolerances have been empirically observed to give good accuracy in the calculated energies obtained with APBS. 
+
+However, it is important to note that the error in potential does not necessarily directly relate to the error in the energies calculated by APBS.
+In particular, most meaningful energies are calculated as differences between energies from several calculations.
+While the accuracy of each separate energy can be related to the solver error tolerance, the energy difference can only be loosely bounded by the error tolerance.
+
+This issue is illustrated in the protein kinase ligand binding example provided with APBS as ``pka-lig`` and analyzed below.
+This example demonstrates that, while the errors for each calculation remain small, the overall error in the computed energy can be very large; particularly when two different methods are compared.
+
+.. list-table:: Sensitivity of PB energies to iterative solver error tolerance (APBS 1.2)
+   :header-rows: 1
+
+   * - Error tolerance
+     - Protein energy
+     - Protein energy relative error (with respect to 10\ :sup:`-12` tolerance)
+     - Ligand energy
+     - Ligand energy relative error (with respect to 10\ :sup:`-12` tolerance)
+     - Complex energy
+     - Complex energy relative error (with respect to 10\ :sup:`-12` tolerance)
+     - Binding energy
+     - Binding energy relative error (with respect to 10\ :sup:`-12` tolerance)
+   * - 1.00E-06
+     - 3.01E+05
+     - 2.47E-08
+     - 1.05E+04
+     - 1.42E-08
+     - 3.11E+05
+     - 2.45E-08
+     - 8.08E+00
+     - 7.75E-06
+   * - 1.00E-09
+     - 3.01E+05
+     - 3.19E-11
+     - 1.05E+04
+     - 1.71E-11
+     - 3.11E+05
+     - 2.45E-08
+     - 8.08E+00
+     - 2.48E-09
+   * - 1.00E-12
+     - 3.01E+05
+     - 0.00E+00
+     - 1.05E+04
+     - 0.00E+00
+     - 3.11E+05
+     - 0.00E+00
+     - 8.08E+00
+     - 0.00E+00
+
+---------------
+Further reading
+---------------
+
+.. [Azuara2006] Azuara C, Lindahl E, Koehl P, Orland H, and Delarue M, PDB_Hydro: incorporating dipolar solvents with variable density in the Poisson-Boltzmann treatment of macromolecule electrostatics. Nucleic Acids Research, 2006. 34: p. W38-W42.
+
+.. [Baker2005] Baker NA, Biomolecular Applications of Poisson-Boltzmann Methods, in Reviews in Computational Chemistry, Lipkowitz KB, Larter R, and Cundari TR, Editors. 2005, John Wiley and Sons.
+
+.. [Chen2010] Chen Z, Baker NA, Wei GW. Differential geometry based solvation model I: Eulerian formulation, J Comput Phys, 229, 8231-58, 2010.
+
+.. [Chu2007] Chu VB, Bai Y, Lipfert J, Herschlag D, and Doniach S, Evaluation of Ion Binding to DNA Duplexes Using a Size-Modified Poisson-Boltzmann Theory. Biophysical Journal, 2007. 93(9): p. 3202-9.
+
+.. [Fogolari2002] Fogolari F, Brigo A, and Molinari H, The Poisson-Boltzmann equation for biomolecular electrostatics: a tool for structural biology. Journal of Molecular Recognition, 2002. 15(6): p. 377-92.
+
+.. [Grochowski2007] Grochowski P, lstrok A, and Trylska J, Continuum molecular electrostatics, salt effects and counterion binding. A review of the Poisson-Boltzmann theory and its modifications. Biopolymers, 2007. 89(2): p. 93-113.
+
+.. [Lamm2003] Lamm G, The Poisson-Boltzmann Equation, in Reviews in Computational Chemistry, Lipkowitz KB, Larter R, and Cundari TR, Editors. 2003, John Wiley and Sons, Inc. p. 147-366.
+
+.. [Levy2003] Levy RM, Zhang LY, Gallicchio E, and Felts AK, On the nonpolar hydration free energy of proteins: surface area and continuum solvent models for the solute-solvent interaction energy. Journal of the American Chemical Society, 2003. 125(31): p. 9523-30.
+
+.. [Netz2000] Netz RR and Orland H, Beyond Poisson-Boltzmann: Fluctuation effects and correlation functions. European Physical Journal E, 2000. 1(2-3): p. 203-14.
+
+.. [Ren2012] Ren P, Chun J, Thomas DG, Schnieders M, Marucho M, Zhang J, Baker NA, Biomolecular electrostatics and solvation: a computational perspective. Quarterly Reviews of Biophysics, 2012. 45(4): p. 427-491.
+
+.. [Roux1999] Roux B and Simonson T, Implicit solvent models. Biophysical Chemistry, 1999. 78(1-2): p. 1-20.
+
+.. [Vitalis2004] Vitalis A, Baker NA, McCammon JA, ISIM: A program for grand canonical Monte Carlo simulations of the ionic environment of biomolecules, Molecular Simulation, 2004, 30(1), 45-61.
+
+.. [Wagoner2006] Wagoner JA and Baker NA, Assessing implicit models for nonpolar mean solvation forces: the importance of dispersion and volume terms. Proceedings of the National Academy of Sciences of the United States of America, 2006. 103(22): p. 8331-6.
+
+.. [Warshel2006] Warshel A, Sharma PK, Kato M, and Parson WW, Modeling electrostatic effects in proteins. Biochimica et Biophysica Acta (BBA) - Proteins & Proteomics, 2006. 1764(11): p. 1647-76.
+
diff --new-file -ru apbs-3.0.0/docs/ChangeLog.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/ChangeLog.md
--- apbs-3.0.0/docs/ChangeLog.md	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/ChangeLog.md	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,46 @@
+APBS 3.0 CHANGELOG
+==================
+
+These are notes for APBS version 3.0
+------------------------------------
+
+* Binary releases may be found on [GitHub](https://github.com/Electrostatics/apbs-pdb2pqr/releases) and on [SourceForge](http://sourceforge.net/projects/apbs/files/apbs).
+
+### New Features
+
+* Poisson-Boltzmann Analytical Method (PBAM, see [Lotan & Head-Gordon](http://pubs.acs.org/doi/full/10.1021/ct050263p)) and Semi-Analytical Method (PBSAM, see [Yap & Head-Gordon](http://pubs.acs.org/doi/abs/10.1021/ct100145f)) integrated with APBS. PBSAM is currently only available in the Linux and OS X distributions.
+    - Examples are located with the APBS examples in the pbam/ and pbsam/ directories.
+    - More information and documentation may be found in the [PBAM](http://www.poissonboltzmann.org/external_contributions/extern-pbam/) and [PBSAM](http://www.poissonboltzmann.org/external_contributions/extern-pbsam/) sections of the APBS-PDB2PQR website.
+* Tree-Code Accelerated Boundary Integral Poisson-Boltzmann Method (TABI-PB) integrated with APBS.(See [Geng & Krasny](http://www.sciencedirect.com/science/article/pii/S0021999113002404))
+    - Examples are located with the APBS examples in the bem/, bem-pKa/, and bem-binding-energies/ folders
+    - Included NanoShaper alternative to MSMS.
+    - More information and documentation may be found in the [Contributions](http://www.poissonboltzmann.org/external_contributions/extern-tabi/) section of the APBS-PDB2PQR website
+* Added binary DX format support to the appropriate APBS tools.
+* Test suite amended and expanded.
+* Removed hard-coded limitation to number of grid points used to determine surface accessibility.
+
+### Known Bugs / Limitations
+
+* PBSAM not building in windows due to C standard restrictions in the Microsoft compiler implementation.
+
+### Minor Updates
+
+* PB(S)AM now requires the key work 'pos' for the term argument.
+* PB(S)AM 'surf' keyword has been replaced with the 'usemesh' keyword.
+* PB(S)AM 'salt' keyword has been replaced with the 'ion' keyword.
+* PB(S)AM dynamics parameters are no longer accepted in the ELEC section.
+* PB(S)AM now has only one type of ELEC method: pb(s)am_auto.
+* PB(S)AM 'gridpts' keyword has been replaced with 'dime' keyword.
+* PB(S)AM 'dx' and '3dmap' keywords are deprecated to use the 'write' one instead.
+* BEM mesh keyword now requires method names instead of just integer values.
+* GEOFLOW ELEC type has been change from 'geoflow-auto' to 'geoflow'.
+* Fixed miscellaneous Windows build issues.
+* Update the build configurations for the Pythons libraries.
+
+### Notes
+
+* The following are included in APBS as Git submodules:
+- Geometric Flow ([link](https://github.com/Electrostatics/geoflow_c/tree/e8ce510a670e0b7f3501e72be6141fc20328f947))
+- FETk ([link](https://github.com/Electrostatics/FETK/tree/0c6fdeabe8929acea7481cb1480b5706b343b7e0))
+- PBAM/PBSAM ([link](https://github.com/davas301/pb_solvers/tree/4805cbec02b30e9bae927f03ac2fecd3217c4dad))
+- TABI-PB ([link](https://github.com/lwwilson1/TABIPB/tree/941eff91acd4153a06764e34d29b633c6e3b980f))
diff --new-file -ru apbs-3.0.0/docs/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/CMakeLists.txt
--- apbs-3.0.0/docs/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/CMakeLists.txt	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+################################################################################
+# TODO:  Generate license.html
+################################################################################
+
+find_package(Doxygen)
+
+if(Doxygen_FOUND)
+	configure_file(
+	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/Doxyfile.in
+	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
+	    ESCAPE_QUOTES
+	    )
+	
+	configure_file(
+	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/programmer.html.in
+	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/programmer.html
+	    )
+	
+	configure_file(
+	    ${CMAKE_CURRENT_SOURCE_DIR}/programmer/.config/mainpage.h.in
+	    ${CMAKE_CURRENT_BINARY_DIR}/programmer/mainpage.h
+	    )
+	
+	add_custom_target(
+	    doc
+	    ALL
+	    #COMMAND ${DOXYGEN_EXECUTABLE} ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
+	    COMMAND doxygen ${CMAKE_CURRENT_BINARY_DIR}/programmer/Doxyfile
+	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer
+	    COMMENT "Generating documentation with Doxygen" VERBATIM
+	  )
+
+	#file(MAKE_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer/latex)
+	
+	add_custom_target(
+	    doc-pdf
+	    ALL
+	    COMMAND make
+	    COMMAND cp refman.pdf ../programmer.pdf
+	    WORKING_DIRECTORY ${CMAKE_CURRENT_BINARY_DIR}/programmer/latex
+	    DEPENDS doc
+	    COMMENT "Generating pdf documentation" VERBATIM
+	)
+endif(Doxygen_FOUND)
diff --new-file -ru apbs-3.0.0/docs/conf.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/conf.py
--- apbs-3.0.0/docs/conf.py	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/conf.py	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,74 @@
+# Configuration file for the Sphinx documentation builder.
+#
+# This file only contains a selection of the most common options. For a full
+# list see the documentation:
+# https://www.sphinx-doc.org/en/master/usage/configuration.html
+
+# -- Path setup --------------------------------------------------------------
+
+# If extensions (or modules to document with autodoc) are in another directory,
+# add these directories to sys.path here. If the directory is relative to the
+# documentation root, use os.path.abspath to make it absolute, like shown here.
+#
+# import os
+# import sys
+# sys.path.insert(0, os.path.abspath('.'))
+
+
+# -- Project information -----------------------------------------------------
+
+project = 'APBS'
+copyright = '2020, Nathan Baker and many others'
+author = 'Nathan Baker and many others'
+
+# The full version, including alpha/beta/rc tags
+release = '3.0.0'
+
+
+# -- General configuration ---------------------------------------------------
+
+# Add any Sphinx extension module names here, as strings. They can be
+# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
+# ones.
+extensions = [
+    'sphinx.ext.autodoc', 'sphinx.ext.intersphinx', 'sphinx.ext.viewcode',
+    'sphinx.ext.napoleon', 'sphinx.ext.todo', 'sphinx.ext.autosummary',
+    'sphinx_rtd_theme', 'sphinx.ext.mathjax', 'sphinx_sitemap'
+]
+
+mathjax_path = 'https://cdnjs.cloudflare.com'
+mathjax_path += '/ajax/libs/mathjax/2.7.0/MathJax.js'
+mathjax_path += '?config=TeX-AMS-MML_HTMLorMML'
+site_url = "https://apbs.readthedocs.io"
+
+autosummary_generate = True
+autosummary_imported_members = False
+autosummary_generate_overwrite = True
+
+master_doc = 'index'
+
+# Add any paths that contain templates here, relative to this directory.
+templates_path = ['_templates']
+
+# List of patterns, relative to source directory, that match files and
+# directories to ignore when looking for source files.
+# This pattern also affects html_static_path and html_extra_path.
+exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']
+
+
+# -- Options for HTML output -------------------------------------------------
+
+# The theme to use for HTML and HTML Help pages.  See the documentation for
+# a list of builtin themes.
+#
+html_theme = 'sphinx_rtd_theme'
+
+# Add any paths that contain custom static files (such as style sheets) here,
+# relative to this directory. They are copied after the builtin static files,
+# so a file named "default.css" will overwrite the builtin "default.css".
+html_static_path = ['_static']
+
+# Enable intersphinx mapping
+intersphinx_mapping = {
+    'python': ('https://docs.python.org/3', None),
+}
diff --new-file -ru apbs-3.0.0/docs/formats/apbs-xml-parm.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/apbs-xml-parm.rst
--- apbs-3.0.0/docs/formats/apbs-xml-parm.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/apbs-xml-parm.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+.. _apbsxmlparm:
+
+APBS XML parameter format
+=========================
+
+This parameter file format has the following form:
+
+.. code-block:: xml
+
+   <ffname>
+      <residue>
+          <name>resname</name>
+          <atom>
+              <name>atomname</name>
+              <charge>atomcharge</charge>
+              <radius>atomradius</radius>
+              <epsilon>atomepsilon</epsilon>
+          </atom>
+          ...
+      </residue>
+      ...
+   </ffname>
+
+The variables in this example are:
+
+``ffname``
+  The name of the forcefield. This is the root element of the XML file.
+
+``resname``
+  A string giving the residue name, as provided in the PDB file to be parameterized.
+
+``atomname``
+  A string giving the atom name, as provided in the PDB file to be parameterized.
+
+``atomcharge``
+  A float giving the atomic charge (in electrons).
+
+``atomradius``
+  A float giving the atomic Radius (in Å).
+
+``atomepsilon``
+  A float giving the Lennard-Jones well depth :math:`\epsilon` (in kJ/mol).
+  This is used for the calculation of WCA energies in apolar solvation energies and forces.
+  We assume that the Lennard-Jones potential is defined in the "AMBER style"
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/formats/flat-parm.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/flat-parm.rst
--- apbs-3.0.0/docs/formats/flat-parm.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/flat-parm.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,30 @@
+.. _apbsflatparm:
+
+APBS flat-file parameter format
+===============================
+
+This parameter file format is a series of lines of the form:
+
+.. code-block:: bash
+
+   Residue_name Atom_name Charge Radius Epsilon
+
+where the whitespaces are important and denote separation between the fields.
+The fields here are:
+
+``Residue_name``
+  A string giving the residue name, as provided in the PDB file to be parametrized.
+
+``Atom_name``
+  A string giving the atom name, as provided in the PDB file to be parametrized.
+
+``Charge``
+  A float giving the atomic charge (in electrons).
+
+``Radius``
+  A float giving the atomic radius (in Å).
+
+``Epsilon``
+  A float giving the Lennard-Jones well depth (epsilon, in kJ/mol).
+  This is used for the calculation of WCA energies in apolar solvation energies and forces.
+  We assume that the Lennard-Jones potential is defined in the "AMBER style"
diff --new-file -ru apbs-3.0.0/docs/formats/harwell.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/harwell.rst
--- apbs-3.0.0/docs/formats/harwell.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/harwell.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,5 @@
+Harwell-Boeing matrix format
+============================
+
+This is the sparse matrix output format used by APBS for analyses of the matrix operators which are constructed during PB solution.
+This format was implemented so matrix operators could by decomposed with SuperLU and ARPACK but this also serves as a useful general mechanism for sparse matrix input and output.
diff --new-file -ru apbs-3.0.0/docs/formats/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/index.rst
--- apbs-3.0.0/docs/formats/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+File formats
+============
+
+----------------------------
+Mesh and scalar data formats
+----------------------------
+
+.. toctree:: 
+   :maxdepth: 1
+
+   opendx
+   mcsf
+   uhbd
+
+---------------------------
+Molecular structure formats
+---------------------------
+
+.. toctree::
+   :maxdepth: 1
+
+   pqr
+   pdb
+   xml-struct
+
+--------------
+Matrix formats
+--------------
+
+.. toctree:: 
+   :maxdepth: 1
+
+   harwell
+
+=================
+Parameter formats
+=================
+
+.. toctree::
+   :maxdepth: 1
+
+   apbs-xml-parm
+   flat-parm
+
diff --new-file -ru apbs-3.0.0/docs/formats/mcsf.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/mcsf.rst
--- apbs-3.0.0/docs/formats/mcsf.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/mcsf.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,6 @@
+.. _mcsf:
+
+MCSF mesh format
+================
+
+APBS reads and writes meshes in the `FEtk MCSF format <http://fetk.org/codes/mc/>`.
diff --new-file -ru apbs-3.0.0/docs/formats/opendx.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/opendx.rst
--- apbs-3.0.0/docs/formats/opendx.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/opendx.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,95 @@
+.. _opendx:
+
+OpenDX scalar data format
+=========================
+
+We output most discretized scalar data (e.g., potential, accessibility, etc.) from APBS in the data format used by the OpenDX software package.
+The OpenDX data format is very flexible; the following sections describe the application of this format for APBS multigrid and finite element datasets.
+
+The multigrid data format has the following form:
+
+.. code-block:: bash
+
+   object 1 class gridpositions counts nx ny nz
+   origin xmin ymin zmin
+   delta hx 0.0 0.0
+   delta 0.0 hy 0.0 
+   delta 0.0 0.0 hz
+   object 2 class gridconnections counts nx ny nz
+   object 3 class array type double rank 0 items n data follows
+   u(0,0,0) u(0,0,1) u(0,0,2)
+   ...
+   u(0,0,nz-3) u(0,0,nz-2) u(0,0,nz-1)
+   u(0,1,0) u(0,1,1) u(0,1,2)
+   ...
+   u(0,1,nz-3) u(0,1,nz-2) u(0,1,nz-1)
+   ...
+   u(0,ny-1,nz-3) u(0,ny-1,nz-2) u(0,ny-1,nz-1)
+   u(1,0,0) u(1,0,1) u(1,0,2)
+   ...
+   attribute "dep" string "positions"
+   object "regular positions regular connections" class field
+   component "positions" value 1
+   component "connections" value 2
+   component "data" value 3`
+
+The variables in this format include:
+
+``nx ny nz``
+  The number of grid points in the x-, y-, and z-directions
+
+``xmin ymin zmin``
+  The coordinates of the grid lower corner
+
+``hx hy hz``
+  The grid spacings in the x-, y-, and z-directions.
+
+``n``
+  The total number of grid points; :math:`n = nx * ny * nz`
+
+``u(*,*,*)``
+  The data values, ordered with the z-index increasing most quickly, followed by the y-index, and then the x-index.
+
+For finite element solutions, the OpenDX format takes the following form:
+
+.. code-block:: bash
+
+   object 1 class array type float rank 1 shape 3 items N
+   v1x v1y v1z
+   v2x v2y v2z
+   ...
+   vNx vNy vNz
+   object 2 class array type int rank 1 shape 4 items M
+   s1a s1b s1c s1d
+   s2a s2b s2c s2d
+   ...
+   sMa sMb sMc sMd
+   attribute "element type" string "tetrahedra"
+   object 3 class array type float rank 0 items N
+   u1
+   u2
+   ...
+   uN
+   attribute "dep" string "positions"
+   object "irregular positions irregular connections" class field
+   component "positions" value 1
+   component "connections" value 2
+   component "data" value 3
+   end
+
+where the variables in this format are:
+
+``N``
+  Number of vertices
+
+``vix viy viz``
+  Coordinates of vertex i
+
+``M``
+  Number of simplices
+
+``sia sib sic sid``
+  IDs of vertices in simplex i
+
+``ui``
+  Data value associated with vertex i
diff --new-file -ru apbs-3.0.0/docs/formats/pdb.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/pdb.rst
--- apbs-3.0.0/docs/formats/pdb.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/pdb.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,6 @@
+.. _pdb:
+
+PDB molecular structure format
+==============================
+
+The PDB file format is described in detail in the `Protein Data Bank documentation <http://www.rcsb.org/pdb/static.do?p=file_formats/pdb/index.html>`_.
diff --new-file -ru apbs-3.0.0/docs/formats/pqr.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/pqr.rst
--- apbs-3.0.0/docs/formats/pqr.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/pqr.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,49 @@
+.. _pqr:
+
+PQR molecular structure format
+==============================
+
+This format is a modification of the PDB format which allows users to add charge and radius parameters to existing PDB data while keeping it in a format amenable to visualization with standard molecular graphics programs.
+The origins of the PQR format are somewhat uncertain, but has been used by several computational biology software programs, including MEAD and AutoDock.
+UHBD uses a very similar format called QCD.
+
+APBS reads very loosely-formatted PQR files: all fields are whitespace-delimited rather than the strict column formatting mandated by the PDB format.
+This more liberal formatting allows coordinates which are larger/smaller than ± 999 Å.
+APBS reads data on a per-line basis from PQR files using the following format:::
+
+  Field_name Atom_number Atom_name Residue_name Chain_ID Residue_number X Y Z Charge Radius
+
+where the whitespace is the most important feature of this format.
+The fields are:
+
+``Field_name``
+  A string which specifies the type of PQR entry and should either be ATOM or HETATM in order to be parsed by APBS.
+
+``Atom_number``
+  An integer which provides the atom index.
+
+``Atom_name``
+  A string which provides the atom name.
+
+``Residue_name``
+  A string which provides the residue name.
+
+``Chain_ID``
+  An optional string which provides the chain ID of the atom.
+  Note that chain ID support is a new feature of APBS 0.5.0 and later versions.
+
+``Residue_number``
+  An integer which provides the residue index.
+
+``X Y Z``
+  3 floats which provide the atomic coordinates (in Å)
+
+``Charge``
+  A float which provides the atomic charge (in electrons).
+
+``Radius``
+  A float which provides the atomic radius (in Å).
+
+Clearly, this format can deviate wildly from PDB due to the use of whitespaces rather than specific column widths and alignments.
+This deviation can be particularly significant when large coordinate values are used.
+However, in order to maintain compatibility with most molecular graphics programs, the PDB2PQR program and the utilities provided with APBS attempt to preserve the PDB format as much as possible.
diff --new-file -ru apbs-3.0.0/docs/formats/uhbd.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/uhbd.rst
--- apbs-3.0.0/docs/formats/uhbd.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/uhbd.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,35 @@
+UHBD scalar data format
+=======================
+
+We also support scalar data output in the legacy "UHBD format" for use with programs such as `UHBD <http://browndye.ucsd.edu/>`_ and `SDA <https://mcm.h-its.org/sda/>`_.
+
+UHBD data is written in the format:
+
+.. code-block:: c
+
+    /* Write out the header */
+    Vio_printf(sock, "%72s\n", title);
+    Vio_printf(sock, "%12.5e%12.5e%7d%7d%7d%7d%7d\n", 1.0, 0.0, -1, 0,
+      nz, 1, nz);
+    Vio_printf(sock, "%7d%7d%7d%12.5e%12.5e%12.5e%12.5e\n", nx, ny, nz,
+      hx, (xmin-hx), (ymin-hx), (zmin-hx));
+    Vio_printf(sock, "%12.5e%12.5e%12.5e%12.5e\n", 0.0, 0.0, 0.0, 0.0);
+    Vio_printf(sock, "%12.5e%12.5e%7d%7d", 0.0, 0.0, 0, 0);
+
+    /* Write out the entries */
+    icol = 0;
+    for (k=0; k<nz; k++) {
+        Vio_printf(sock, "\n%7d%7d%7d\n", k+1, thee->nx, thee->ny);
+        icol = 0;
+        for (j=0; j<ny; j++) {
+            for (i=0; i<nx; i++) {
+                u = k*(nx)*(ny)+j*(nx)+i;
+                icol++;
+                Vio_printf(sock, " %12.5e", thee->data[u]);
+                if (icol == 6) {
+                    icol = 0;
+                    Vio_printf(sock, "\n");
+                }
+            }
+        }
+    }
diff --new-file -ru apbs-3.0.0/docs/formats/xml-struct.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/xml-struct.rst
--- apbs-3.0.0/docs/formats/xml-struct.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/formats/xml-struct.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+.. _xmlstruct:
+
+XML molecular structure format
+==============================
+
+The XML structure format was designed as a light-weight alternative to remediate some of the shortcomings of the flat-file format.
+By use of XML, issues related to extra fields in the file or columns merging together can easily be remedied.
+Additionally, APBS will only parse the necessary information from the XML file and will ignore all other information, so users wishing to store extra data related to a residue or atom can do so inline without affecting APBS.
+
+This data format has the following form:
+
+.. code-block:: xml
+
+   <roottag>
+      <residue>
+          <atom>
+              <x>x</x>
+              <y>y</y>
+              <z>z</z>
+              <charge>charge</charge>
+              <radius>radius</radius>
+          </atom>
+          ...
+      </residue>
+      ...
+   </roottag>
+
+The variables in this example are:
+
+``roottag``
+  This is the root element of the XML file. The value is not important to APBS - APBS simply checks that it is closed at the end of the file.
+
+``x y z``
+  A float giving the {x, y, z}-coordinate of the atom in Å.
+
+``charge``
+  A float giving the atomic charge (in electrons).
+
+``atomradius``
+  A float giving the atomic Radius (in Å).
+
+.. note::
+
+   Yes, we probably should have used `PDBML <http://pdbml.pdb.org/>`_ instead.
diff --new-file -ru apbs-3.0.0/docs/getting/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/getting/index.rst
--- apbs-3.0.0/docs/getting/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/getting/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,77 @@
+.. _registering: http://eepurl.com/by4eQr
+.. _SourceForge: http://sourceforge.net/projects/apbs
+.. _GitHub releases: https://github.com/Electrostatics/apbs/releases
+
+============
+Getting APBS
+============
+
+.. note::
+
+   *Before you begin!* APBS funding is dependent on your help for continued development and support. Please `register <http://eepurl.com/by4eQr>`_ before using the software so we can accurately report the number of users to our funding agencies.
+
+-----------
+Web servers
+-----------
+
+Most functionality is available through our online web servers.
+
+The web server offers a simple way to use both APBS and PDB2PQR without the need to download and install additional programs.
+
+After `registering`_, please visit http://server.poissonboltzmann.org/ to access the web server.
+
+-------------------------------------
+Installing from pre-compiled binaries
+-------------------------------------
+
+The best way to install APBS is via download of a pre-compiled binary from `SourceForge`_ or `GitHub releases`_ (after `registering`_, of course).
+
+^^^^^^^^^^^^^^^^^^
+What's in the box?
+^^^^^^^^^^^^^^^^^^
+
+The binary distributions typically provide the following contents:
+
+bin
+  contains the main APBS executable
+share/apbs
+  contains additional APBS-related files
+doc
+  the APBS programmer guide
+examples
+  APBS examples
+tests
+  the APBS test suite
+tools
+  useful programs to help process APBS input and output
+include
+  header files for building software that calls APBS
+lib
+  libraries for building software that calls APBS
+
+
+---------------------------
+Installing from source code
+---------------------------
+
+Those who enjoy an adventure can download the source code from `GitHub releases`_ and install from source code following the directions at the link below:
+
+.. toctree::
+   :maxdepth: 2
+
+   source
+
+------------------------
+Current platform support
+------------------------
+
++------------+---------+---------+------------+------+-------+------+---------+-------------+
+| OS         | PYTHON  | GEOFLOW | BEM,       | FETK | PBSAM | PBAM | PYTHON  | SHARED_LIBS |
+|            | VERSION |         | NanoShaper |      |       |      | SUPPORT |             |
++============+=========+=========+============+======+=======+======+=========+=============+
+| Ubuntu     | 3.7+    | Yes     | Yes        | Yes  | Yes   | Yes  | Yes     | Yes         |
++------------+---------+---------+------------+------+-------+------+---------+-------------+
+| MacOSX     | 3.7+    | Yes     | Yes        | Yes  | Yes   | Yes  | Yes     | Yes         |
++------------+---------+---------+------------+------+-------+------+---------+-------------+
+| Windows 10 | 3.7+    | Yes     | Yes        | No   | No    | Yes  | Yes     | No          |
++------------+---------+---------+------------+------+-------+------+---------+-------------+
diff --new-file -ru apbs-3.0.0/docs/getting/source.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/getting/source.rst
--- apbs-3.0.0/docs/getting/source.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/getting/source.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,234 @@
+.. _GitHub repository: https://github.com/Electrostatics/apbs
+.. _GitHub releases: https://github.com/Electrostatics/apbs/releases
+
+=============================
+How to build APBS from source
+=============================
+
+These instructions assume that you have downloaded the source code from `GitHub releases`_.
+
+.. caution:: We do not recommend cloning directly from the head of the master branch because it is typically under development and could be unstable. Unless you really know what you are doing, we advise you to skip the next step.
+
+-------------------------------
+Get source directly from Github
+-------------------------------
+
+Here are the commands to get the source directly from our `GitHub repository`_, 
+
+.. code:: bash
+
+   git clone https://github.com/Electrostatics/apbs
+   cd apbs
+
+-----------------
+Shortcut to build
+-----------------
+
+There is a script that is used to build APBS in the Github Actions. You may want to use the file, :file:`.build.sh`, as a template for building APBS.
+
+.. caution:: When using make, there can be race conditions with CMake, autoconf, downloading dependencies, and make. It is best to run 
+
+.. code:: bash
+
+   VERBOSE=1 make -j 1
+
+-----------------
+Import submodules
+-----------------
+
+We are using Git submodules to manage various pieces of code.  To build the master branch, after cloning it, you will need to do the following from within the top of the source directory:
+
+.. code:: bash
+
+   git submodule init
+   git submodule update
+
+------------
+Set up CMake
+------------
+
+From the top of the source directory, the basic commands for configuring the APBS build for CMake are
+
+.. code:: bash
+
+   mkdir build
+   cd build
+   # NOTE: This will be you $APBS_BUILD_DIR
+   export APBS_BUILD_DIR=`echo $(PWD)`
+   cmake ..
+
+To see all the options you can run:
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   ccmake ..
+
+Additional features can be built using the flags described below.
+
+^^^^^^^^^^^^^^
+Geometric flow
+^^^^^^^^^^^^^^
+
+If you want to use the geometric flow implementation, when invoking CMake, set :makevar:`ENABLE_GEOFLOW` to ``ON``; e.g.,
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   cmake -DENABLE_GEOFLOW=ON ..
+
+^^^^^^^^^^^
+Using PB-AM
+^^^^^^^^^^^
+
+If you want to use the Poisson-Boltzmann Analytical Method developed by the Teresa Head-Gordon lab, set the CMake variable :makevar:`ENABLE_PBAM` to ``ON``.
+
+.. warning::
+
+   PB-AM currently runs on OS X or Linux only.
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   cmake -DENABLE_PBAM=ON ..
+
+^^^^^^^^^^^^^
+Using TABI-PB
+^^^^^^^^^^^^^
+
+If you want to use the Treecode-Accelerated Boundary Integral method (TABI-PB) developed by Robert Krasny and Weihua Geng, set the CMake variable :makevar:`ENABLE_BEM` to ``ON``.
+
+TABI-PB requires the use of a molecular surface mesh generation software to create a surface representation of the molecule.
+By default, TABI-PB uses NanoShaper to generate an SES or Skin surface.
+See `TABI-PB documentation <https://github.com/Treecodes/TABI-PB>`_ for details on choosing NanoShaper.
+When TABI-PB runs, it will attempt to generate a surface mesh by looking in your path for the mesh generation executable.
+A user can obtain the appropriate executable using the steps described below. The user then must place these executables in their path.
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   cmake -DENABLE_BEM=ON ..
+
+"""""""""""""""""""""""""""""
+Getting NanoShaper executable
+"""""""""""""""""""""""""""""
+
+Surface meshing software executables are currently pre-built for OS X, Linux, and Windows and can be installed via CMake.
+The executables will be placed in the :file:`bin` directory of your build.
+
+NanoShaper is a molecular surface mesh generation software package developed by W. Rocchia and S. Decherchi.
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   cmake -DGET_NanoShaper=ON ..
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Using finite element support
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+.. warning::
+
+   Finite element methods are currently only supported on POSIX-like operating systems such as OS X or Linux.
+
+To enable finite element support, set the CMake :makevar:`ENABLE_FETK` variable to ``ON``.
+
+On Linux, the FETK shared libraries need to be locatable by the shared library loader.
+One way to do this is to update :makevar:`LD_LIBRARY_PATH` to point at :file:`<build-dir>/fetk/lib`, where ``<build-dir>`` is the location where APBS was built.
+In base, this can be accomplished with the command:
+
+.. code:: bash
+
+   export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<build-dir>/fetk/lib:<install-dir>/fetk/lib
+   cd $APBS_BUILD_DIR
+   cmake -DENABLE_FETK=ON ..
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Enabling APBS Python support
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+APBS Python support requires a local installation of `SWIG <http://www.swig.org/>`_.
+
+Assuming SWIG is installed, APBS Python support can be enabled by setting the CMake variable :makevar:`ENABLE_PYTHON` to ``ON``.
+If you are on Linux you will also need to set the CMake variable :makevar:`BUILD_SHARED_LIBS` to ``OFF``.
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   cmake -DENABLE_PYTHON=ON ..
+
+---------------------------
+Building the code - minimal
+---------------------------
+
+Assuming the Cmake command completed successfully, APBS can be built with
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   # Run cmake with the options you prefer:
+   VERBOSE=1 make -j 1
+
+----------------------------
+Building the code - advanced
+----------------------------
+
+.. code:: bash
+
+   export INSTALL_DIR=$SOME_DIR/apbs
+   export PATH=$INSTALL_DIR/bin:$PATH
+   # NOTE: In case you need to debug the source code:
+   # export RELEASE_TYPE=Debug
+   export RELEASE_TYPE=Release
+   # NOTE: If cmake or make fail, save yourself and make sure your remove
+   #       everything including the build directory. This code base uses
+   #       many older autoconf based projects that do not know how to save
+   #       state or recover from partial builds. If cmake or make fail, you
+   #       should figure out how to fix it and then remove everything and
+   #       try again.
+   rmdir $APBS_BUILD_DIR
+   mkdir -p $APBS_BUILD_DIR
+   cd $APBS_BUILD_DIR
+   # NOTE: In case you need to debug cmake, use verbose debug/trace mode:
+   # cmake -S .. -B $BUILD_DIR --trace-source=../CMakeLists.txt --trace-expand \
+   cmake                                        \
+      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR       \
+      -DCMAKE_BUILD_TYPE=$RELEASE_TYPE          \
+      -DENABLE_GEOFLOW=ON                       \
+      -DENABLE_BEM=ON                           \
+      -DENABLE_FETK=ON                          \
+      -DENABLE_OPENMP=ON                        \
+      -DENABLE_PBAM=ON                          \
+      -DENABLE_PBSAM=ON                         \
+      -DENABLE_PYTHON=ON                        \
+      -DENABLE_TESTS=ON                         \
+      -DENABLE_TINKER=OFF                       \
+      -DBUILD_SHARED_LIBS=ON                    \
+      ..
+   VERBOSE=1 make -j 1
+
+------------
+Testing APBS
+------------
+
+.. code:: bash
+
+   cd $APBS_BUILD_DIR
+   # NOTE: Assuming you have already built APBS
+   # NOTE: So that the apbs and optional NanoShaper binaries are in the path:
+   export PATH="$APBS_BUILD_DIR/bin:$PATH"
+   ctest -C Release --output-on-failure
+
+---------------
+Installing APBS
+---------------
+
+.. code:: bash
+
+   export INSTALL_DIR="Some directory - default is /usr/local"
+   cd $APBS_BUILD_DIR
+   cmake                                  \
+      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
+      # NOTE: Add cmake options that you used during the Build APBS section
+   ..
+   VERBOSE=1 make -j 1 install
diff --new-file -ru apbs-3.0.0/docs/help.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/help.rst
--- apbs-3.0.0/docs/help.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/help.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,24 @@
+.. _GitHub issues: https://github.com/Electrostatics/apbs/issues
+
+============
+Getting help
+============
+
+-------------
+GitHub issues
+-------------
+
+Our preferred mechanism for user questions and feedback is via `GitHub issues`_.
+We monitor these issues daily and usually respond within a few days.
+
+-------------
+Announcements
+-------------
+
+Announcements about updates to the APBS-PDB2PQR software and related news are available through our `mailing list <http://us11.campaign-archive1.com/home/?u=a5808042b2b3ea90ee3603cd8&id=28701e36f0>`_; please `register for updates <http://eepurl.com/by4eQr>`_.
+
+----------------------
+Contacting the authors
+----------------------
+
+If all else fails, feel free to contact nathanandrewbaker@gmail.com.
Binary files apbs-3.0.0/docs/icons/APBS_1024.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_1024.png differ
Binary files apbs-3.0.0/docs/icons/APBS_128.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_128.png differ
Binary files apbs-3.0.0/docs/icons/APBS_128_v2.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_128_v2.png differ
Binary files apbs-3.0.0/docs/icons/APBS_16.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_16.png differ
Binary files apbs-3.0.0/docs/icons/APBS_256.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_256.png differ
Binary files apbs-3.0.0/docs/icons/APBS_32.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_32.png differ
Binary files apbs-3.0.0/docs/icons/APBS_512.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_512.png differ
Binary files apbs-3.0.0/docs/icons/APBS_64.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/icons/APBS_64.png differ
diff --new-file -ru apbs-3.0.0/docs/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/index.rst
--- apbs-3.0.0/docs/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,49 @@
+.. APBS documentation master file, created by
+   sphinx-quickstart on Fri Jul 17 09:09:16 2020.
+   You can adapt this file completely to your liking, but it should at least
+   contain the root `toctree` directive.
+
+APBS - Adaptive Poisson-Boltzmann Solver
+========================================
+
+:Release: |release|
+:Date: |today|
+
+========
+Overview
+========
+
+An understanding of electrostatic interactions is essential for the study of biomolecular processes.
+The structures of proteins and other biopolymers are being determined at an increasing rate through structural genomics and other efforts while specific linkages of these biopolymers in cellular pathways or supramolecular assemblages are being detected by genetic and proteomic studies.
+To integrate this information in physical models for drug discovery or other applications requires the ability to evaluate the energetic interactions within and between biopolymers.
+Among the various components of molecular energetics, solvation properties and electrostatic interactions are of special importance due to the long range of these interactions and the substantial charges of typical biopolymer components.
+
+APBS solves the equations of continuum electrostatics for large biomolecular assemblages.
+This software was designed “from the ground up” using modern design principles to ensure its ability to interface with other computational packages and evolve as methods and applications change over time.
+The APBS code is accompanied by extensive documentation for both users and programmers and is supported by a variety of utilities for preparing calculations and analyzing results.
+Finally, the free, open-source APBS license ensures its accessibility to the entire biomedical community.
+
+========
+Contents
+========
+
+.. toctree::
+   :maxdepth: 2
+
+   getting/index
+   using/index
+   background
+   supporting
+   help
+   reading
+   formats/index
+   releases
+
+
+------------------
+Indices and tables
+------------------
+
+* :ref:`genindex`
+* :ref:`modindex`
+* :ref:`search`
diff --new-file -ru apbs-3.0.0/docs/make.bat apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/make.bat
--- apbs-3.0.0/docs/make.bat	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/make.bat	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,35 @@
+@ECHO OFF
+
+pushd %~dp0
+
+REM Command file for Sphinx documentation
+
+if "%SPHINXBUILD%" == "" (
+	set SPHINXBUILD=sphinx-build
+)
+set SOURCEDIR=.
+set BUILDDIR=_build
+
+if "%1" == "" goto help
+
+%SPHINXBUILD% >NUL 2>NUL
+if errorlevel 9009 (
+	echo.
+	echo.The 'sphinx-build' command was not found. Make sure you have Sphinx
+	echo.installed, then set the SPHINXBUILD environment variable to point
+	echo.to the full path of the 'sphinx-build' executable. Alternatively you
+	echo.may add the Sphinx directory to PATH.
+	echo.
+	echo.If you don't have Sphinx installed, grab it from
+	echo.http://sphinx-doc.org/
+	exit /b 1
+)
+
+%SPHINXBUILD% -M %1 %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+goto end
+
+:help
+%SPHINXBUILD% -M help %SOURCEDIR% %BUILDDIR% %SPHINXOPTS% %O%
+
+:end
+popd
diff --new-file -ru apbs-3.0.0/docs/Makefile apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/Makefile
--- apbs-3.0.0/docs/Makefile	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/Makefile	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+# Minimal makefile for Sphinx documentation
+#
+
+# You can set these variables from the command line, and also
+# from the environment for the first two.
+SPHINXOPTS    ?=
+SPHINXBUILD   ?= sphinx-build
+SOURCEDIR     = .
+BUILDDIR      = _build
+
+# Put it first so that "make" without argument is like "make help".
+help:
+	@$(SPHINXBUILD) -M help "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
+
+.PHONY: help Makefile
+
+# Catch-all target: route all unknown targets to Sphinx using the new
+# "make mode" option.  $(O) is meant as a shortcut for $(SPHINXOPTS).
+%: Makefile
+	@$(SPHINXBUILD) -M $@ "$(SOURCEDIR)" "$(BUILDDIR)" $(SPHINXOPTS) $(O)
Binary files apbs-3.0.0/docs/media/1fas_VR.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/1fas_VR.png differ
Binary files apbs-3.0.0/docs/media/2008-12_workshop_handouts.pdf and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/2008-12_workshop_handouts.pdf differ
Binary files apbs-3.0.0/docs/media/2008-12_workshop_lecture.mov and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/2008-12_workshop_lecture.mov differ
Binary files apbs-3.0.0/docs/media/2008-12_workshop_lecture.pdf and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/2008-12_workshop_lecture.pdf differ
Binary files apbs-3.0.0/docs/media/2009-03_BII_basic.mov and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/2009-03_BII_basic.mov differ
Binary files apbs-3.0.0/docs/media/2009-03_BII_basic.pdf and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/2009-03_BII_basic.pdf differ
Binary files apbs-3.0.0/docs/media/AChE.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/AChE.png differ
Binary files apbs-3.0.0/docs/media/actin_dimer-iso_trans.jpg and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/actin_dimer-iso_trans.jpg differ
Binary files apbs-3.0.0/docs/media/apbs_bind_eng.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/apbs_bind_eng.png differ
Binary files apbs-3.0.0/docs/media/apbs_sol_eng.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/apbs_sol_eng.png differ
Binary files apbs-3.0.0/docs/media/fas2-iso-pymol.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/fas2-iso-pymol.png differ
Binary files apbs-3.0.0/docs/media/fas2-surf-pymol.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/fas2-surf-pymol.png differ
Binary files apbs-3.0.0/docs/media/pb-schematic.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/pb-schematic.png differ
Binary files apbs-3.0.0/docs/media/rna-qdens-pymol.jpg and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/rna-qdens-pymol.jpg differ
Binary files apbs-3.0.0/docs/media/rna-qdens-vmd.jpg and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/rna-qdens-vmd.jpg differ
Binary files apbs-3.0.0/docs/media/UI.png and apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/media/UI.png differ
diff --new-file -ru apbs-3.0.0/docs/programmer/.config/Doxyfile.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/Doxyfile.in
--- apbs-3.0.0/docs/programmer/.config/Doxyfile.in	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/Doxyfile.in	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,1789 @@
+# Doxyfile 1.8.1.2
+
+# This file describes the settings to be used by the documentation system
+# doxygen (www.doxygen.org) for a project
+#
+# All text after a hash (#) is considered a comment and will be ignored
+# The format is:
+#       TAG = value [value, ...]
+# For lists items can also be appended using:
+#       TAG += value [value, ...]
+# Values that contain spaces should be placed between quotes (" ")
+
+#---------------------------------------------------------------------------
+# Project related configuration options
+#---------------------------------------------------------------------------
+
+# This tag specifies the encoding used for all characters in the config file
+# that follow. The default is UTF-8 which is also the encoding used for all
+# text before the first occurrence of this tag. Doxygen uses libiconv (or the
+# iconv built into libc) for the transcoding. See
+# http://www.gnu.org/software/libiconv for the list of possible encodings.
+
+DOXYFILE_ENCODING      = UTF-8
+
+# The PROJECT_NAME tag is a single word (or sequence of words) that should
+# identify the project. Note that if you do not use Doxywizard you need
+# to put quotes around the project name if it contains spaces.
+
+PROJECT_NAME           = APBS
+
+# The PROJECT_NUMBER tag can be used to enter a project or revision number.
+# This could be handy for archiving the generated documentation or
+# if some version control system is used.
+
+PROJECT_NUMBER         = @APBS_VERSION@
+
+# Using the PROJECT_BRIEF tag one can provide an optional one line description
+# for a project that appears at the top of each page and should give viewer
+# a quick idea about the purpose of the project. Keep the description short.
+
+PROJECT_BRIEF          =
+
+# With the PROJECT_LOGO tag one can specify an logo or icon that is
+# included in the documentation. The maximum height of the logo should not
+# exceed 55 pixels and the maximum width should not exceed 200 pixels.
+# Doxygen will copy the logo to the output directory.
+
+PROJECT_LOGO           =
+
+# The OUTPUT_DIRECTORY tag is used to specify the (relative or absolute)
+# base path where the generated documentation will be put.
+# If a relative path is entered, it will be relative to the location
+# where doxygen was started. If left blank the current directory will be used.
+
+OUTPUT_DIRECTORY       = .
+
+# If the CREATE_SUBDIRS tag is set to YES, then doxygen will create
+# 4096 sub-directories (in 2 levels) under the output directory of each output
+# format and will distribute the generated files over these directories.
+# Enabling this option can be useful when feeding doxygen a huge amount of
+# source files, where putting all generated files in the same directory would
+# otherwise cause performance problems for the file system.
+
+CREATE_SUBDIRS         = NO
+
+# The OUTPUT_LANGUAGE tag is used to specify the language in which all
+# documentation generated by doxygen is written. Doxygen will use this
+# information to generate all constant output in the proper language.
+# The default language is English, other supported languages are:
+# Afrikaans, Arabic, Brazilian, Catalan, Chinese, Chinese-Traditional,
+# Croatian, Czech, Danish, Dutch, Esperanto, Farsi, Finnish, French, German,
+# Greek, Hungarian, Italian, Japanese, Japanese-en (Japanese with English
+# messages), Korean, Korean-en, Lithuanian, Norwegian, Macedonian, Persian,
+# Polish, Portuguese, Romanian, Russian, Serbian, Serbian-Cyrillic, Slovak,
+# Slovene, Spanish, Swedish, Ukrainian, and Vietnamese.
+
+OUTPUT_LANGUAGE        = English
+
+# If the BRIEF_MEMBER_DESC tag is set to YES (the default) Doxygen will
+# include brief member descriptions after the members that are listed in
+# the file and class documentation (similar to JavaDoc).
+# Set to NO to disable this.
+
+BRIEF_MEMBER_DESC      = YES
+
+# If the REPEAT_BRIEF tag is set to YES (the default) Doxygen will prepend
+# the brief description of a member or function before the detailed description.
+# Note: if both HIDE_UNDOC_MEMBERS and BRIEF_MEMBER_DESC are set to NO, the
+# brief descriptions will be completely suppressed.
+
+REPEAT_BRIEF           = YES
+
+# This tag implements a quasi-intelligent brief description abbreviator
+# that is used to form the text in various listings. Each string
+# in this list, if found as the leading text of the brief description, will be
+# stripped from the text and the result after processing the whole list, is
+# used as the annotated text. Otherwise, the brief description is used as-is.
+# If left blank, the following values are used ("$name" is automatically
+# replaced with the name of the entity): "The $name class" "The $name widget"
+# "The $name file" "is" "provides" "specifies" "contains"
+# "represents" "a" "an" "the"
+
+ABBREVIATE_BRIEF       = "The $name class" \
+                         "The $name widget" \
+                         "The $name file" \
+                         is \
+                         provides \
+                         specifies \
+                         contains \
+                         represents \
+                         a \
+                         an \
+                         the
+
+# If the ALWAYS_DETAILED_SEC and REPEAT_BRIEF tags are both set to YES then
+# Doxygen will generate a detailed section even if there is only a brief
+# description.
+
+ALWAYS_DETAILED_SEC    = NO
+
+# If the INLINE_INHERITED_MEMB tag is set to YES, doxygen will show all
+# inherited members of a class in the documentation of that class as if those
+# members were ordinary class members. Constructors, destructors and assignment
+# operators of the base classes will not be shown.
+
+INLINE_INHERITED_MEMB  = NO
+
+# If the FULL_PATH_NAMES tag is set to YES then Doxygen will prepend the full
+# path before files name in the file list and in the header files. If set
+# to NO the shortest path that makes the file name unique will be used.
+
+FULL_PATH_NAMES        = YES
+
+# If the FULL_PATH_NAMES tag is set to YES then the STRIP_FROM_PATH tag
+# can be used to strip a user-defined part of the path. Stripping is
+# only done if one of the specified strings matches the left-hand part of
+# the path. The tag can be used to show relative paths in the file list.
+# If left blank the directory from which doxygen is run is used as the
+# path to strip.
+
+STRIP_FROM_PATH        = ../.. "@APBS_ROOT@"
+
+# The STRIP_FROM_INC_PATH tag can be used to strip a user-defined part of
+# the path mentioned in the documentation of a class, which tells
+# the reader which header file to include in order to use a class.
+# If left blank only the name of the header file containing the class
+# definition is used. Otherwise one should specify the include paths that
+# are normally passed to the compiler using the -I flag.
+
+STRIP_FROM_INC_PATH    = contrib
+
+# If the SHORT_NAMES tag is set to YES, doxygen will generate much shorter
+# (but less readable) file names. This can be useful if your file system
+# doesn't support long names like on DOS, Mac, or CD-ROM.
+
+SHORT_NAMES            = NO
+
+# If the JAVADOC_AUTOBRIEF tag is set to YES then Doxygen
+# will interpret the first line (until the first dot) of a JavaDoc-style
+# comment as the brief description. If set to NO, the JavaDoc
+# comments will behave just like regular Qt-style comments
+# (thus requiring an explicit @brief command for a brief description.)
+
+JAVADOC_AUTOBRIEF      = NO
+
+# If the QT_AUTOBRIEF tag is set to YES then Doxygen will
+# interpret the first line (until the first dot) of a Qt-style
+# comment as the brief description. If set to NO, the comments
+# will behave just like regular Qt-style comments (thus requiring
+# an explicit \brief command for a brief description.)
+
+QT_AUTOBRIEF           = NO
+
+# The MULTILINE_CPP_IS_BRIEF tag can be set to YES to make Doxygen
+# treat a multi-line C++ special comment block (i.e. a block of //! or ///
+# comments) as a brief description. This used to be the default behaviour.
+# The new default is to treat a multi-line C++ comment block as a detailed
+# description. Set this tag to YES if you prefer the old behaviour instead.
+
+MULTILINE_CPP_IS_BRIEF = NO
+
+# If the INHERIT_DOCS tag is set to YES (the default) then an undocumented
+# member inherits the documentation from any documented member that it
+# re-implements.
+
+INHERIT_DOCS           = YES
+
+# If the SEPARATE_MEMBER_PAGES tag is set to YES, then doxygen will produce
+# a new page for each member. If set to NO, the documentation of a member will
+# be part of the file/class/namespace that contains it.
+
+SEPARATE_MEMBER_PAGES  = NO
+
+# The TAB_SIZE tag can be used to set the number of spaces in a tab.
+# Doxygen uses this value to replace tabs by spaces in code fragments.
+
+TAB_SIZE               = 1
+
+# This tag can be used to specify a number of aliases that acts
+# as commands in the documentation. An alias has the form "name=value".
+# For example adding "sideeffect=\par Side Effects:\n" will allow you to
+# put the command \sideeffect (or @sideeffect) in the documentation, which
+# will result in a user-defined paragraph with heading "Side Effects:".
+# You can put \n's in the value part of an alias to insert newlines.
+
+ALIASES                =
+
+# This tag can be used to specify a number of word-keyword mappings (TCL only).
+# A mapping has the form "name=value". For example adding
+# "class=itcl::class" will allow you to use the command class in the
+# itcl::class meaning.
+
+TCL_SUBST              =
+
+# Set the OPTIMIZE_OUTPUT_FOR_C tag to YES if your project consists of C
+# sources only. Doxygen will then generate output that is more tailored for C.
+# For instance, some of the names that are used will be different. The list
+# of all members will be omitted, etc.
+
+OPTIMIZE_OUTPUT_FOR_C  = YES
+
+# Set the OPTIMIZE_OUTPUT_JAVA tag to YES if your project consists of Java
+# sources only. Doxygen will then generate output that is more tailored for
+# Java. For instance, namespaces will be presented as packages, qualified
+# scopes will look different, etc.
+
+OPTIMIZE_OUTPUT_JAVA   = NO
+
+# Set the OPTIMIZE_FOR_FORTRAN tag to YES if your project consists of Fortran
+# sources only. Doxygen will then generate output that is more tailored for
+# Fortran.
+
+OPTIMIZE_FOR_FORTRAN   = NO
+
+# Set the OPTIMIZE_OUTPUT_VHDL tag to YES if your project consists of VHDL
+# sources. Doxygen will then generate output that is tailored for
+# VHDL.
+
+OPTIMIZE_OUTPUT_VHDL   = NO
+
+# Doxygen selects the parser to use depending on the extension of the files it
+# parses. With this tag you can assign which parser to use for a given extension.
+# Doxygen has a built-in mapping, but you can override or extend it using this
+# tag. The format is ext=language, where ext is a file extension, and language
+# is one of the parsers supported by doxygen: IDL, Java, Javascript, CSharp, C,
+# C++, D, PHP, Objective-C, Python, Fortran, VHDL, C, C++. For instance to make
+# doxygen treat .inc files as Fortran files (default is PHP), and .f files as C
+# (default is Fortran), use: inc=Fortran f=C. Note that for custom extensions
+# you also need to set FILE_PATTERNS otherwise the files are not read by doxygen.
+
+EXTENSION_MAPPING      =
+
+# If MARKDOWN_SUPPORT is enabled (the default) then doxygen pre-processes all
+# comments according to the Markdown format, which allows for more readable
+# documentation. See http://daringfireball.net/projects/markdown/ for details.
+# The output of markdown processing is further processed by doxygen, so you
+# can mix doxygen, HTML, and XML commands with Markdown formatting.
+# Disable only in case of backward compatibilities issues.
+
+MARKDOWN_SUPPORT       = YES
+
+# If you use STL classes (i.e. std::string, std::vector, etc.) but do not want
+# to include (a tag file for) the STL sources as input, then you should
+# set this tag to YES in order to let doxygen match functions declarations and
+# definitions whose arguments contain STL classes (e.g. func(std::string); v.s.
+# func(std::string) {}). This also makes the inheritance and collaboration
+# diagrams that involve STL classes more complete and accurate.
+
+BUILTIN_STL_SUPPORT    = NO
+
+# If you use Microsoft's C++/CLI language, you should set this option to YES to
+# enable parsing support.
+
+CPP_CLI_SUPPORT        = NO
+
+# Set the SIP_SUPPORT tag to YES if your project consists of sip sources only.
+# Doxygen will parse them like normal C++ but will assume all classes use public
+# instead of private inheritance when no explicit protection keyword is present.
+
+SIP_SUPPORT            = NO
+
+# For Microsoft's IDL there are propget and propput attributes to indicate getter
+# and setter methods for a property. Setting this option to YES (the default)
+# will make doxygen replace the get and set methods by a property in the
+# documentation. This will only work if the methods are indeed getting or
+# setting a simple type. If this is not the case, or you want to show the
+# methods anyway, you should set this option to NO.
+
+IDL_PROPERTY_SUPPORT   = YES
+
+# If member grouping is used in the documentation and the DISTRIBUTE_GROUP_DOC
+# tag is set to YES, then doxygen will reuse the documentation of the first
+# member in the group (if any) for the other members of the group. By default
+# all members of a group must be documented explicitly.
+
+DISTRIBUTE_GROUP_DOC   = NO
+
+# Set the SUBGROUPING tag to YES (the default) to allow class member groups of
+# the same type (for instance a group of public functions) to be put as a
+# subgroup of that type (e.g. under the Public Functions section). Set it to
+# NO to prevent subgrouping. Alternatively, this can be done per class using
+# the \nosubgrouping command.
+
+SUBGROUPING            = YES
+
+# When the INLINE_GROUPED_CLASSES tag is set to YES, classes, structs and
+# unions are shown inside the group in which they are included (e.g. using
+# @ingroup) instead of on a separate page (for HTML and Man pages) or
+# section (for LaTeX and RTF).
+
+INLINE_GROUPED_CLASSES = NO
+
+# When the INLINE_SIMPLE_STRUCTS tag is set to YES, structs, classes, and
+# unions with only public data fields will be shown inline in the documentation
+# of the scope in which they are defined (i.e. file, namespace, or group
+# documentation), provided this scope is documented. If set to NO (the default),
+# structs, classes, and unions are shown on a separate page (for HTML and Man
+# pages) or section (for LaTeX and RTF).
+
+INLINE_SIMPLE_STRUCTS  = NO
+
+# When TYPEDEF_HIDES_STRUCT is enabled, a typedef of a struct, union, or enum
+# is documented as struct, union, or enum with the name of the typedef. So
+# typedef struct TypeS {} TypeT, will appear in the documentation as a struct
+# with name TypeT. When disabled the typedef will appear as a member of a file,
+# namespace, or class. And the struct will be named TypeS. This can typically
+# be useful for C code in case the coding convention dictates that all compound
+# types are typedef'ed and only the typedef is referenced, never the tag name.
+
+TYPEDEF_HIDES_STRUCT   = NO
+
+# Similar to the SYMBOL_CACHE_SIZE the size of the symbol lookup cache can be
+# set using LOOKUP_CACHE_SIZE. This cache is used to resolve symbols given
+# their name and scope. Since this can be an expensive process and often the
+# same symbol appear multiple times in the code, doxygen keeps a cache of
+# pre-resolved symbols. If the cache is too small doxygen will become slower.
+# If the cache is too large, memory is wasted. The cache size is given by this
+# formula: 2^(16+LOOKUP_CACHE_SIZE). The valid range is 0..9, the default is 0,
+# corresponding to a cache size of 2^16 = 65536 symbols.
+
+LOOKUP_CACHE_SIZE      = 0
+
+#---------------------------------------------------------------------------
+# Build related configuration options
+#---------------------------------------------------------------------------
+
+# If the EXTRACT_ALL tag is set to YES doxygen will assume all entities in
+# documentation are documented, even if no documentation was available.
+# Private class members and static file members will be hidden unless
+# the EXTRACT_PRIVATE and EXTRACT_STATIC tags are set to YES
+
+EXTRACT_ALL            = NO
+
+# If the EXTRACT_PRIVATE tag is set to YES all private members of a class
+# will be included in the documentation.
+
+EXTRACT_PRIVATE        = NO
+
+# If the EXTRACT_PACKAGE tag is set to YES all members with package or internal
+# scope will be included in the documentation.
+
+EXTRACT_PACKAGE        = NO
+
+# If the EXTRACT_STATIC tag is set to YES all static members of a file
+# will be included in the documentation.
+
+EXTRACT_STATIC         = NO
+
+# If the EXTRACT_LOCAL_CLASSES tag is set to YES classes (and structs)
+# defined locally in source files will be included in the documentation.
+# If set to NO only classes defined in header files are included.
+
+EXTRACT_LOCAL_CLASSES  = YES
+
+# This flag is only useful for Objective-C code. When set to YES local
+# methods, which are defined in the implementation section but not in
+# the interface are included in the documentation.
+# If set to NO (the default) only methods in the interface are included.
+
+EXTRACT_LOCAL_METHODS  = NO
+
+# If this flag is set to YES, the members of anonymous namespaces will be
+# extracted and appear in the documentation as a namespace called
+# 'anonymous_namespace{file}', where file will be replaced with the base
+# name of the file that contains the anonymous namespace. By default
+# anonymous namespaces are hidden.
+
+EXTRACT_ANON_NSPACES   = NO
+
+# If the HIDE_UNDOC_MEMBERS tag is set to YES, Doxygen will hide all
+# undocumented members of documented classes, files or namespaces.
+# If set to NO (the default) these members will be included in the
+# various overviews, but no documentation section is generated.
+# This option has no effect if EXTRACT_ALL is enabled.
+
+HIDE_UNDOC_MEMBERS     = NO
+
+# If the HIDE_UNDOC_CLASSES tag is set to YES, Doxygen will hide all
+# undocumented classes that are normally visible in the class hierarchy.
+# If set to NO (the default) these classes will be included in the various
+# overviews. This option has no effect if EXTRACT_ALL is enabled.
+
+HIDE_UNDOC_CLASSES     = NO
+
+# If the HIDE_FRIEND_COMPOUNDS tag is set to YES, Doxygen will hide all
+# friend (class|struct|union) declarations.
+# If set to NO (the default) these declarations will be included in the
+# documentation.
+
+HIDE_FRIEND_COMPOUNDS  = NO
+
+# If the HIDE_IN_BODY_DOCS tag is set to YES, Doxygen will hide any
+# documentation blocks found inside the body of a function.
+# If set to NO (the default) these blocks will be appended to the
+# function's detailed documentation block.
+
+HIDE_IN_BODY_DOCS      = NO
+
+# The INTERNAL_DOCS tag determines if documentation
+# that is typed after a \internal command is included. If the tag is set
+# to NO (the default) then the documentation will be excluded.
+# Set it to YES to include the internal documentation.
+
+INTERNAL_DOCS          = NO
+
+# If the CASE_SENSE_NAMES tag is set to NO then Doxygen will only generate
+# file names in lower-case letters. If set to YES upper-case letters are also
+# allowed. This is useful if you have classes or files whose names only differ
+# in case and if your file system supports case sensitive file names. Windows
+# and Mac users are advised to set this option to NO.
+
+CASE_SENSE_NAMES       = NO
+
+# If the HIDE_SCOPE_NAMES tag is set to NO (the default) then Doxygen
+# will show members with their full class and namespace scopes in the
+# documentation. If set to YES the scope will be hidden.
+
+HIDE_SCOPE_NAMES       = YES
+
+# If the SHOW_INCLUDE_FILES tag is set to YES (the default) then Doxygen
+# will put a list of the files that are included by a file in the documentation
+# of that file.
+
+SHOW_INCLUDE_FILES     = YES
+
+# If the FORCE_LOCAL_INCLUDES tag is set to YES then Doxygen
+# will list include files with double quotes in the documentation
+# rather than with sharp brackets.
+
+FORCE_LOCAL_INCLUDES   = NO
+
+# If the INLINE_INFO tag is set to YES (the default) then a tag [inline]
+# is inserted in the documentation for inline members.
+
+INLINE_INFO            = YES
+
+# If the SORT_MEMBER_DOCS tag is set to YES (the default) then doxygen
+# will sort the (detailed) documentation of file and class members
+# alphabetically by member name. If set to NO the members will appear in
+# declaration order.
+
+SORT_MEMBER_DOCS       = YES
+
+# If the SORT_BRIEF_DOCS tag is set to YES then doxygen will sort the
+# brief documentation of file, namespace and class members alphabetically
+# by member name. If set to NO (the default) the members will appear in
+# declaration order.
+
+SORT_BRIEF_DOCS        = NO
+
+# If the SORT_MEMBERS_CTORS_1ST tag is set to YES then doxygen
+# will sort the (brief and detailed) documentation of class members so that
+# constructors and destructors are listed first. If set to NO (the default)
+# the constructors will appear in the respective orders defined by
+# SORT_MEMBER_DOCS and SORT_BRIEF_DOCS.
+# This tag will be ignored for brief docs if SORT_BRIEF_DOCS is set to NO
+# and ignored for detailed docs if SORT_MEMBER_DOCS is set to NO.
+
+SORT_MEMBERS_CTORS_1ST = NO
+
+# If the SORT_GROUP_NAMES tag is set to YES then doxygen will sort the
+# hierarchy of group names into alphabetical order. If set to NO (the default)
+# the group names will appear in their defined order.
+
+SORT_GROUP_NAMES       = NO
+
+# If the SORT_BY_SCOPE_NAME tag is set to YES, the class list will be
+# sorted by fully-qualified names, including namespaces. If set to
+# NO (the default), the class list will be sorted only by class name,
+# not including the namespace part.
+# Note: This option is not very useful if HIDE_SCOPE_NAMES is set to YES.
+# Note: This option applies only to the class list, not to the
+# alphabetical list.
+
+SORT_BY_SCOPE_NAME     = NO
+
+# If the STRICT_PROTO_MATCHING option is enabled and doxygen fails to
+# do proper type resolution of all parameters of a function it will reject a
+# match between the prototype and the implementation of a member function even
+# if there is only one candidate or it is obvious which candidate to choose
+# by doing a simple string match. By disabling STRICT_PROTO_MATCHING doxygen
+# will still accept a match between prototype and implementation in such cases.
+
+STRICT_PROTO_MATCHING  = NO
+
+# The GENERATE_TODOLIST tag can be used to enable (YES) or
+# disable (NO) the todo list. This list is created by putting \todo
+# commands in the documentation.
+
+GENERATE_TODOLIST      = NO
+
+# The GENERATE_TESTLIST tag can be used to enable (YES) or
+# disable (NO) the test list. This list is created by putting \test
+# commands in the documentation.
+
+GENERATE_TESTLIST      = YES
+
+# The GENERATE_BUGLIST tag can be used to enable (YES) or
+# disable (NO) the bug list. This list is created by putting \bug
+# commands in the documentation.
+
+GENERATE_BUGLIST       = YES
+
+# The GENERATE_DEPRECATEDLIST tag can be used to enable (YES) or
+# disable (NO) the deprecated list. This list is created by putting
+# \deprecated commands in the documentation.
+
+GENERATE_DEPRECATEDLIST= YES
+
+# The ENABLED_SECTIONS tag can be used to enable conditional
+# documentation sections, marked by \if sectionname ... \endif.
+
+ENABLED_SECTIONS       =
+
+# The MAX_INITIALIZER_LINES tag determines the maximum number of lines
+# the initial value of a variable or macro consists of for it to appear in
+# the documentation. If the initializer consists of more lines than specified
+# here it will be hidden. Use a value of 0 to hide initializers completely.
+# The appearance of the initializer of individual variables and macros in the
+# documentation can be controlled using \showinitializer or \hideinitializer
+# command in the documentation regardless of this setting.
+
+MAX_INITIALIZER_LINES  = 30
+
+# Set the SHOW_USED_FILES tag to NO to disable the list of files generated
+# at the bottom of the documentation of classes and structs. If set to YES the
+# list will mention the files that were used to generate the documentation.
+
+SHOW_USED_FILES        = YES
+
+# Set the SHOW_FILES tag to NO to disable the generation of the Files page.
+# This will remove the Files entry from the Quick Index and from the
+# Folder Tree View (if specified). The default is YES.
+
+SHOW_FILES             = YES
+
+# Set the SHOW_NAMESPACES tag to NO to disable the generation of the
+# Namespaces page.  This will remove the Namespaces entry from the Quick Index
+# and from the Folder Tree View (if specified). The default is YES.
+
+SHOW_NAMESPACES        = YES
+
+# The FILE_VERSION_FILTER tag can be used to specify a program or script that
+# doxygen should invoke to get the current version for each file (typically from
+# the version control system). Doxygen will invoke the program by executing (via
+# popen()) the command <command> <input-file>, where <command> is the value of
+# the FILE_VERSION_FILTER tag, and <input-file> is the name of an input file
+# provided by doxygen. Whatever the program writes to standard output
+# is used as the file version. See the manual for examples.
+
+FILE_VERSION_FILTER    =
+
+# The LAYOUT_FILE tag can be used to specify a layout file which will be parsed
+# by doxygen. The layout file controls the global structure of the generated
+# output files in an output format independent way. To create the layout file
+# that represents doxygen's defaults, run doxygen with the -l option.
+# You can optionally specify a file name after the option, if omitted
+# DoxygenLayout.xml will be used as the name of the layout file.
+
+LAYOUT_FILE            =
+
+# The CITE_BIB_FILES tag can be used to specify one or more bib files
+# containing the references data. This must be a list of .bib files. The
+# .bib extension is automatically appended if omitted. Using this command
+# requires the bibtex tool to be installed. See also
+# http://en.wikipedia.org/wiki/BibTeX for more info. For LaTeX the style
+# of the bibliography can be controlled using LATEX_BIB_STYLE. To use this
+# feature you need bibtex and perl available in the search path.
+
+CITE_BIB_FILES         =
+
+#---------------------------------------------------------------------------
+# configuration options related to warning and progress messages
+#---------------------------------------------------------------------------
+
+# The QUIET tag can be used to turn on/off the messages that are generated
+# by doxygen. Possible values are YES and NO. If left blank NO is used.
+
+QUIET                  = NO
+
+# The WARNINGS tag can be used to turn on/off the warning messages that are
+# generated by doxygen. Possible values are YES and NO. If left blank
+# NO is used.
+
+WARNINGS               = YES
+
+# If WARN_IF_UNDOCUMENTED is set to YES, then doxygen will generate warnings
+# for undocumented members. If EXTRACT_ALL is set to YES then this flag will
+# automatically be disabled.
+
+WARN_IF_UNDOCUMENTED   = YES
+
+# If WARN_IF_DOC_ERROR is set to YES, doxygen will generate warnings for
+# potential errors in the documentation, such as not documenting some
+# parameters in a documented function, or documenting parameters that
+# don't exist or using markup commands wrongly.
+
+WARN_IF_DOC_ERROR      = YES
+
+# The WARN_NO_PARAMDOC option can be enabled to get warnings for
+# functions that are documented, but have no documentation for their parameters
+# or return value. If set to NO (the default) doxygen will only warn about
+# wrong or incomplete parameter documentation, but not about the absence of
+# documentation.
+
+WARN_NO_PARAMDOC       = NO
+
+# The WARN_FORMAT tag determines the format of the warning messages that
+# doxygen can produce. The string should contain the $file, $line, and $text
+# tags, which will be replaced by the file and line number from which the
+# warning originated and the warning text. Optionally the format may contain
+# $version, which will be replaced by the version of the file (if it could
+# be obtained via FILE_VERSION_FILTER)
+
+WARN_FORMAT            = "$file:$line: $text"
+
+# The WARN_LOGFILE tag can be used to specify a file to which warning
+# and error messages should be written. If left blank the output is written
+# to stderr.
+
+WARN_LOGFILE           =
+
+#---------------------------------------------------------------------------
+# configuration options related to the input files
+#---------------------------------------------------------------------------
+
+# The INPUT tag can be used to specify the files and/or directories that contain
+# documented source files. You may enter file names like "myfile.cpp" or
+# directories like "/usr/src/myproject". Separate the files or directories
+# with spaces.
+
+INPUT                  = "@APBS_ROOT@/src/" \
+                         ./mainpage.h \
+                         "@CMAKE_CURRENT_SOURCE_DIR@/license/LICENSE.txt"
+
+# This tag can be used to specify the character encoding of the source files
+# that doxygen parses. Internally doxygen uses the UTF-8 encoding, which is
+# also the default input encoding. Doxygen uses libiconv (or the iconv built
+# into libc) for the transcoding. See http://www.gnu.org/software/libiconv for
+# the list of possible encodings.
+
+INPUT_ENCODING         = UTF-8
+
+# If the value of the INPUT tag contains directories, you can use the
+# FILE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
+# and *.h) to filter out the source-files in the directories. If left
+# blank the following patterns are tested:
+# *.c *.cc *.cxx *.cpp *.c++ *.d *.java *.ii *.ixx *.ipp *.i++ *.inl *.h *.hh
+# *.hxx *.hpp *.h++ *.idl *.odl *.cs *.php *.php3 *.inc *.m *.mm *.dox *.py
+# *.f90 *.f *.for *.vhd *.vhdl
+
+FILE_PATTERNS          = *.h \
+                         *.py \
+                         *.c
+
+# The RECURSIVE tag can be used to turn specify whether or not subdirectories
+# should be searched for input files as well. Possible values are YES and NO.
+# If left blank NO is used.
+
+RECURSIVE              = YES
+
+# The EXCLUDE tag can be used to specify files and/or directories that should be
+# excluded from the INPUT source files. This way you can easily exclude a
+# subdirectory from a directory tree whose root is specified with the INPUT tag.
+# Note that relative paths are relative to the directory from which doxygen is
+# run.
+
+EXCLUDE                =
+
+# The EXCLUDE_SYMLINKS tag can be used to select whether or not files or
+# directories that are symbolic links (a Unix file system feature) are excluded
+# from the input.
+
+EXCLUDE_SYMLINKS       = NO
+
+# If the value of the INPUT tag contains directories, you can use the
+# EXCLUDE_PATTERNS tag to specify one or more wildcard patterns to exclude
+# certain files from those directories. Note that the wildcards are matched
+# against the file with absolute path, so to exclude all test directories
+# for example use the pattern */test/*
+
+EXCLUDE_PATTERNS       = *-private.h
+
+# The EXCLUDE_SYMBOLS tag can be used to specify one or more symbol names
+# (namespaces, classes, functions, etc.) that should be excluded from the
+# output. The symbol name can be a fully qualified name, a word, or if the
+# wildcard * is used, a substring. Examples: ANamespace, AClass,
+# AClass::ANamespace, ANamespace::*Test
+
+EXCLUDE_SYMBOLS        = apbs_needs_mc \
+                         apbs_needs_blas \
+                         apbs_link \
+                         APBSFEM_dummy \
+                         Vfetk_qfEnergyAtom \
+                         diel \
+                         ionacc \
+                         smooth \
+                         debye_U \
+                         debye_Udiff \
+                         coulomb \
+                         init_2DP1 \
+                         init_3DP1 \
+                         setCoef \
+                         bcfl1sp \
+                         bcfl2 \
+                         extEnergy \
+                         focusFillBound
+
+# The EXAMPLE_PATH tag can be used to specify one or more files or
+# directories that contain example code fragments that are included (see
+# the \include command).
+
+EXAMPLE_PATH           =
+
+# If the value of the EXAMPLE_PATH tag contains directories, you can use the
+# EXAMPLE_PATTERNS tag to specify one or more wildcard pattern (like *.cpp
+# and *.h) to filter out the source-files in the directories. If left
+# blank all files are included.
+
+EXAMPLE_PATTERNS       = *
+
+# If the EXAMPLE_RECURSIVE tag is set to YES then subdirectories will be
+# searched for input files to be used with the \include or \dontinclude
+# commands irrespective of the value of the RECURSIVE tag.
+# Possible values are YES and NO. If left blank NO is used.
+
+EXAMPLE_RECURSIVE      = NO
+
+# The IMAGE_PATH tag can be used to specify one or more files or
+# directories that contain image that are included in the documentation (see
+# the \image command).
+
+IMAGE_PATH             =
+
+# The INPUT_FILTER tag can be used to specify a program that doxygen should
+# invoke to filter for each input file. Doxygen will invoke the filter program
+# by executing (via popen()) the command <filter> <input-file>, where <filter>
+# is the value of the INPUT_FILTER tag, and <input-file> is the name of an
+# input file. Doxygen will then use the output that the filter program writes
+# to standard output.  If FILTER_PATTERNS is specified, this tag will be
+# ignored.
+
+INPUT_FILTER           =
+
+# The FILTER_PATTERNS tag can be used to specify filters on a per file pattern
+# basis.  Doxygen will compare the file name with each pattern and apply the
+# filter if there is a match.  The filters are a list of the form:
+# pattern=filter (like *.cpp=my_cpp_filter). See INPUT_FILTER for further
+# info on how filters are used. If FILTER_PATTERNS is empty or if
+# non of the patterns match the file name, INPUT_FILTER is applied.
+
+FILTER_PATTERNS        =
+
+# If the FILTER_SOURCE_FILES tag is set to YES, the input filter (if set using
+# INPUT_FILTER) will be used to filter the input files when producing source
+# files to browse (i.e. when SOURCE_BROWSER is set to YES).
+
+FILTER_SOURCE_FILES    = NO
+
+# The FILTER_SOURCE_PATTERNS tag can be used to specify source filters per file
+# pattern. A pattern will override the setting for FILTER_PATTERN (if any)
+# and it is also possible to disable source filtering for a specific pattern
+# using *.ext= (so without naming a filter). This option only has effect when
+# FILTER_SOURCE_FILES is enabled.
+
+FILTER_SOURCE_PATTERNS =
+
+#---------------------------------------------------------------------------
+# configuration options related to source browsing
+#---------------------------------------------------------------------------
+
+# If the SOURCE_BROWSER tag is set to YES then a list of source files will
+# be generated. Documented entities will be cross-referenced with these sources.
+# Note: To get rid of all source code in the generated output, make sure also
+# VERBATIM_HEADERS is set to NO.
+
+SOURCE_BROWSER         = YES
+
+# Setting the INLINE_SOURCES tag to YES will include the body
+# of functions and classes directly in the documentation.
+
+INLINE_SOURCES         = NO
+
+# Setting the STRIP_CODE_COMMENTS tag to YES (the default) will instruct
+# doxygen to hide any special comment blocks from generated source code
+# fragments. Normal C, C++ and Fortran comments will always remain visible.
+
+STRIP_CODE_COMMENTS    = YES
+
+# If the REFERENCED_BY_RELATION tag is set to YES
+# then for each documented function all documented
+# functions referencing it will be listed.
+
+REFERENCED_BY_RELATION = NO
+
+# If the REFERENCES_RELATION tag is set to YES
+# then for each documented function all documented entities
+# called/used by that function will be listed.
+
+REFERENCES_RELATION    = NO
+
+# If the REFERENCES_LINK_SOURCE tag is set to YES (the default)
+# and SOURCE_BROWSER tag is set to YES, then the hyperlinks from
+# functions in REFERENCES_RELATION and REFERENCED_BY_RELATION lists will
+# link to the source code.  Otherwise they will link to the documentation.
+
+REFERENCES_LINK_SOURCE = YES
+
+# If the USE_HTAGS tag is set to YES then the references to source code
+# will point to the HTML generated by the htags(1) tool instead of doxygen
+# built-in source browser. The htags tool is part of GNU's global source
+# tagging system (see http://www.gnu.org/software/global/global.html). You
+# will need version 4.8.6 or higher.
+
+USE_HTAGS              = NO
+
+# If the VERBATIM_HEADERS tag is set to YES (the default) then Doxygen
+# will generate a verbatim copy of the header file for each class for
+# which an include is specified. Set to NO to disable this.
+
+VERBATIM_HEADERS       = YES
+
+#---------------------------------------------------------------------------
+# configuration options related to the alphabetical class index
+#---------------------------------------------------------------------------
+
+# If the ALPHABETICAL_INDEX tag is set to YES, an alphabetical index
+# of all compounds will be generated. Enable this if the project
+# contains a lot of classes, structs, unions or interfaces.
+
+ALPHABETICAL_INDEX     = YES
+
+# If the alphabetical index is enabled (see ALPHABETICAL_INDEX) then
+# the COLS_IN_ALPHA_INDEX tag can be used to specify the number of columns
+# in which this list will be split (can be a number in the range [1..20])
+
+COLS_IN_ALPHA_INDEX    = 5
+
+# In case all classes in a project start with a common prefix, all
+# classes will be put under the same header in the alphabetical index.
+# The IGNORE_PREFIX tag can be used to specify one or more prefixes that
+# should be ignored while generating the index headers.
+
+IGNORE_PREFIX          =
+
+#---------------------------------------------------------------------------
+# configuration options related to the HTML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_HTML tag is set to YES (the default) Doxygen will
+# generate HTML output.
+
+GENERATE_HTML          = YES
+
+# The HTML_OUTPUT tag is used to specify where the HTML docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `html' will be used as the default path.
+
+HTML_OUTPUT            = html
+
+# The HTML_FILE_EXTENSION tag can be used to specify the file extension for
+# each generated HTML page (for example: .htm,.php,.asp). If it is left blank
+# doxygen will generate files with .html extension.
+
+HTML_FILE_EXTENSION    = .html
+
+# The HTML_HEADER tag can be used to specify a personal HTML header for
+# each generated HTML page. If it is left blank doxygen will generate a
+# standard header. Note that when using a custom header you are responsible
+# for the proper inclusion of any scripts and style sheets that doxygen
+# needs, which is dependent on the configuration options used.
+# It is advised to generate a default header using "doxygen -w html
+# header.html footer.html stylesheet.css YourConfigFile" and then modify
+# that header. Note that the header is subject to change so you typically
+# have to redo this when upgrading to a newer version of doxygen or when
+# changing the value of configuration settings such as GENERATE_TREEVIEW!
+
+HTML_HEADER            =
+
+# The HTML_FOOTER tag can be used to specify a personal HTML footer for
+# each generated HTML page. If it is left blank doxygen will generate a
+# standard footer.
+
+HTML_FOOTER            =
+
+# The HTML_STYLESHEET tag can be used to specify a user-defined cascading
+# style sheet that is used by each HTML page. It can be used to
+# fine-tune the look of the HTML output. If the tag is left blank doxygen
+# will generate a default style sheet. Note that doxygen will try to copy
+# the style sheet file to the HTML output directory, so don't put your own
+# style sheet in the HTML output directory as well, or it will be erased!
+
+HTML_STYLESHEET        =
+
+# The HTML_EXTRA_FILES tag can be used to specify one or more extra images or
+# other source files which should be copied to the HTML output directory. Note
+# that these files will be copied to the base HTML output directory. Use the
+# $relpath$ marker in the HTML_HEADER and/or HTML_FOOTER files to load these
+# files. In the HTML_STYLESHEET file, use the file name only. Also note that
+# the files will be copied as-is; there are no commands or markers available.
+
+HTML_EXTRA_FILES       =
+
+# The HTML_COLORSTYLE_HUE tag controls the color of the HTML output.
+# Doxygen will adjust the colors in the style sheet and background images
+# according to this color. Hue is specified as an angle on a colorwheel,
+# see http://en.wikipedia.org/wiki/Hue for more information.
+# For instance the value 0 represents red, 60 is yellow, 120 is green,
+# 180 is cyan, 240 is blue, 300 purple, and 360 is red again.
+# The allowed range is 0 to 359.
+
+HTML_COLORSTYLE_HUE    = 220
+
+# The HTML_COLORSTYLE_SAT tag controls the purity (or saturation) of
+# the colors in the HTML output. For a value of 0 the output will use
+# grayscales only. A value of 255 will produce the most vivid colors.
+
+HTML_COLORSTYLE_SAT    = 100
+
+# The HTML_COLORSTYLE_GAMMA tag controls the gamma correction applied to
+# the luminance component of the colors in the HTML output. Values below
+# 100 gradually make the output lighter, whereas values above 100 make
+# the output darker. The value divided by 100 is the actual gamma applied,
+# so 80 represents a gamma of 0.8, The value 220 represents a gamma of 2.2,
+# and 100 does not change the gamma.
+
+HTML_COLORSTYLE_GAMMA  = 80
+
+# If the HTML_TIMESTAMP tag is set to YES then the footer of each generated HTML
+# page will contain the date and time when the page was generated. Setting
+# this to NO can help when comparing the output of multiple runs.
+
+HTML_TIMESTAMP         = YES
+
+# If the HTML_DYNAMIC_SECTIONS tag is set to YES then the generated HTML
+# documentation will contain sections that can be hidden and shown after the
+# page has loaded.
+
+HTML_DYNAMIC_SECTIONS  = NO
+
+# With HTML_INDEX_NUM_ENTRIES one can control the preferred number of
+# entries shown in the various tree structured indices initially; the user
+# can expand and collapse entries dynamically later on. Doxygen will expand
+# the tree to such a level that at most the specified number of entries are
+# visible (unless a fully collapsed tree already exceeds this amount).
+# So setting the number of entries 1 will produce a full collapsed tree by
+# default. 0 is a special value representing an infinite number of entries
+# and will result in a full expanded tree by default.
+
+HTML_INDEX_NUM_ENTRIES = 100
+
+# If the GENERATE_DOCSET tag is set to YES, additional index files
+# will be generated that can be used as input for Apple's Xcode 3
+# integrated development environment, introduced with OSX 10.5 (Leopard).
+# To create a documentation set, doxygen will generate a Makefile in the
+# HTML output directory. Running make will produce the docset in that
+# directory and running "make install" will install the docset in
+# ~/Library/Developer/Shared/Documentation/DocSets so that Xcode will find
+# it at startup.
+# See http://developer.apple.com/tools/creatingdocsetswithdoxygen.html
+# for more information.
+
+GENERATE_DOCSET        = NO
+
+# When GENERATE_DOCSET tag is set to YES, this tag determines the name of the
+# feed. A documentation feed provides an umbrella under which multiple
+# documentation sets from a single provider (such as a company or product suite)
+# can be grouped.
+
+DOCSET_FEEDNAME        = "Doxygen generated docs"
+
+# When GENERATE_DOCSET tag is set to YES, this tag specifies a string that
+# should uniquely identify the documentation set bundle. This should be a
+# reverse domain-name style string, e.g. com.mycompany.MyDocSet. Doxygen
+# will append .docset to the name.
+
+DOCSET_BUNDLE_ID       = org.doxygen.Project
+
+# When GENERATE_PUBLISHER_ID tag specifies a string that should uniquely identify
+# the documentation publisher. This should be a reverse domain-name style
+# string, e.g. com.mycompany.MyDocSet.documentation.
+
+DOCSET_PUBLISHER_ID    = org.doxygen.Publisher
+
+# The GENERATE_PUBLISHER_NAME tag identifies the documentation publisher.
+
+DOCSET_PUBLISHER_NAME  = Publisher
+
+# If the GENERATE_HTMLHELP tag is set to YES, additional index files
+# will be generated that can be used as input for tools like the
+# Microsoft HTML help workshop to generate a compiled HTML help file (.chm)
+# of the generated HTML documentation.
+
+GENERATE_HTMLHELP      = NO
+
+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_FILE tag can
+# be used to specify the file name of the resulting .chm file. You
+# can add a path in front of the file if the result should not be
+# written to the html output directory.
+
+CHM_FILE               =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the HHC_LOCATION tag can
+# be used to specify the location (absolute path including file name) of
+# the HTML help compiler (hhc.exe). If non-empty doxygen will try to run
+# the HTML help compiler on the generated index.hhp.
+
+HHC_LOCATION           =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the GENERATE_CHI flag
+# controls if a separate .chi index file is generated (YES) or that
+# it should be included in the master .chm file (NO).
+
+GENERATE_CHI           = NO
+
+# If the GENERATE_HTMLHELP tag is set to YES, the CHM_INDEX_ENCODING
+# is used to encode HtmlHelp index (hhk), content (hhc) and project file
+# content.
+
+CHM_INDEX_ENCODING     =
+
+# If the GENERATE_HTMLHELP tag is set to YES, the BINARY_TOC flag
+# controls whether a binary table of contents is generated (YES) or a
+# normal table of contents (NO) in the .chm file.
+
+BINARY_TOC             = NO
+
+# The TOC_EXPAND flag can be set to YES to add extra items for group members
+# to the contents of the HTML help documentation and to the tree view.
+
+TOC_EXPAND             = NO
+
+# If the GENERATE_QHP tag is set to YES and both QHP_NAMESPACE and
+# QHP_VIRTUAL_FOLDER are set, an additional index file will be generated
+# that can be used as input for Qt's qhelpgenerator to generate a
+# Qt Compressed Help (.qch) of the generated HTML documentation.
+
+GENERATE_QHP           = NO
+
+# If the QHG_LOCATION tag is specified, the QCH_FILE tag can
+# be used to specify the file name of the resulting .qch file.
+# The path specified is relative to the HTML output folder.
+
+QCH_FILE               =
+
+# The QHP_NAMESPACE tag specifies the namespace to use when generating
+# Qt Help Project output. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#namespace
+
+QHP_NAMESPACE          = org.doxygen.Project
+
+# The QHP_VIRTUAL_FOLDER tag specifies the namespace to use when generating
+# Qt Help Project output. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#virtual-folders
+
+QHP_VIRTUAL_FOLDER     = doc
+
+# If QHP_CUST_FILTER_NAME is set, it specifies the name of a custom filter to
+# add. For more information please see
+# http://doc.trolltech.com/qthelpproject.html#custom-filters
+
+QHP_CUST_FILTER_NAME   =
+
+# The QHP_CUST_FILT_ATTRS tag specifies the list of the attributes of the
+# custom filter to add. For more information please see
+# <a href="http://doc.trolltech.com/qthelpproject.html#custom-filters">
+# Qt Help Project / Custom Filters</a>.
+
+QHP_CUST_FILTER_ATTRS  =
+
+# The QHP_SECT_FILTER_ATTRS tag specifies the list of the attributes this
+# project's
+# filter section matches.
+# <a href="http://doc.trolltech.com/qthelpproject.html#filter-attributes">
+# Qt Help Project / Filter Attributes</a>.
+
+QHP_SECT_FILTER_ATTRS  =
+
+# If the GENERATE_QHP tag is set to YES, the QHG_LOCATION tag can
+# be used to specify the location of Qt's qhelpgenerator.
+# If non-empty doxygen will try to run qhelpgenerator on the generated
+# .qhp file.
+
+QHG_LOCATION           =
+
+# If the GENERATE_ECLIPSEHELP tag is set to YES, additional index files
+# will be generated, which together with the HTML files, form an Eclipse help
+# plugin. To install this plugin and make it available under the help contents
+# menu in Eclipse, the contents of the directory containing the HTML and XML
+# files needs to be copied into the plugins directory of eclipse. The name of
+# the directory within the plugins directory should be the same as
+# the ECLIPSE_DOC_ID value. After copying Eclipse needs to be restarted before
+# the help appears.
+
+GENERATE_ECLIPSEHELP   = NO
+
+# A unique identifier for the eclipse help plugin. When installing the plugin
+# the directory name containing the HTML and XML files should also have
+# this name.
+
+ECLIPSE_DOC_ID         = org.doxygen.Project
+
+# The DISABLE_INDEX tag can be used to turn on/off the condensed index (tabs)
+# at top of each HTML page. The value NO (the default) enables the index and
+# the value YES disables it. Since the tabs have the same information as the
+# navigation tree you can set this option to NO if you already set
+# GENERATE_TREEVIEW to YES.
+
+DISABLE_INDEX          = NO
+
+# The GENERATE_TREEVIEW tag is used to specify whether a tree-like index
+# structure should be generated to display hierarchical information.
+# If the tag value is set to YES, a side panel will be generated
+# containing a tree-like index structure (just like the one that
+# is generated for HTML Help). For this to work a browser that supports
+# JavaScript, DHTML, CSS and frames is required (i.e. any modern browser).
+# Windows users are probably better off using the HTML help feature.
+# Since the tree basically has the same information as the tab index you
+# could consider to set DISABLE_INDEX to NO when enabling this option.
+
+GENERATE_TREEVIEW      = YES
+
+# The ENUM_VALUES_PER_LINE tag can be used to set the number of enum values
+# (range [0,1..20]) that doxygen will group on one line in the generated HTML
+# documentation. Note that a value of 0 will completely suppress the enum
+# values from appearing in the overview section.
+
+ENUM_VALUES_PER_LINE   = 4
+
+# If the treeview is enabled (see GENERATE_TREEVIEW) then this tag can be
+# used to set the initial width (in pixels) of the frame in which the tree
+# is shown.
+
+TREEVIEW_WIDTH         = 250
+
+# When the EXT_LINKS_IN_WINDOW option is set to YES doxygen will open
+# links to external symbols imported via tag files in a separate window.
+
+EXT_LINKS_IN_WINDOW    = NO
+
+# Use this tag to change the font size of Latex formulas included
+# as images in the HTML documentation. The default is 10. Note that
+# when you change the font size after a successful doxygen run you need
+# to manually remove any form_*.png images from the HTML output directory
+# to force them to be regenerated.
+
+FORMULA_FONTSIZE       = 10
+
+# Use the FORMULA_TRANPARENT tag to determine whether or not the images
+# generated for formulas are transparent PNGs. Transparent PNGs are
+# not supported properly for IE 6.0, but are supported on all modern browsers.
+# Note that when changing this option you need to delete any form_*.png files
+# in the HTML output before the changes have effect.
+
+FORMULA_TRANSPARENT    = YES
+
+# Enable the USE_MATHJAX option to render LaTeX formulas using MathJax
+# (see http://www.mathjax.org) which uses client side Javascript for the
+# rendering instead of using prerendered bitmaps. Use this if you do not
+# have LaTeX installed or if you want to formulas look prettier in the HTML
+# output. When enabled you may also need to install MathJax separately and
+# configure the path to it using the MATHJAX_RELPATH option.
+
+USE_MATHJAX            = NO
+
+# When MathJax is enabled you need to specify the location relative to the
+# HTML output directory using the MATHJAX_RELPATH option. The destination
+# directory should contain the MathJax.js script. For instance, if the mathjax
+# directory is located at the same level as the HTML output directory, then
+# MATHJAX_RELPATH should be ../mathjax. The default value points to
+# the MathJax Content Delivery Network so you can quickly see the result without
+# installing MathJax.  However, it is strongly recommended to install a local
+# copy of MathJax from http://www.mathjax.org before deployment.
+
+MATHJAX_RELPATH        = http://www.mathjax.org/mathjax
+
+# The MATHJAX_EXTENSIONS tag can be used to specify one or MathJax extension
+# names that should be enabled during MathJax rendering.
+
+MATHJAX_EXTENSIONS     =
+
+# When the SEARCHENGINE tag is enabled doxygen will generate a search box
+# for the HTML output. The underlying search engine uses javascript
+# and DHTML and should work on any modern browser. Note that when using
+# HTML help (GENERATE_HTMLHELP), Qt help (GENERATE_QHP), or docsets
+# (GENERATE_DOCSET) there is already a search function so this one should
+# typically be disabled. For large projects the javascript based search engine
+# can be slow, then enabling SERVER_BASED_SEARCH may provide a better solution.
+
+SEARCHENGINE           = YES
+
+# When the SERVER_BASED_SEARCH tag is enabled the search engine will be
+# implemented using a PHP enabled web server instead of at the web client
+# using Javascript. Doxygen will generate the search PHP script and index
+# file to put on the web server. The advantage of the server
+# based approach is that it scales better to large projects and allows
+# full text search. The disadvantages are that it is more difficult to setup
+# and does not have live searching capabilities.
+
+SERVER_BASED_SEARCH    = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the LaTeX output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_LATEX tag is set to YES (the default) Doxygen will
+# generate Latex output.
+
+GENERATE_LATEX         = YES
+
+# The LATEX_OUTPUT tag is used to specify where the LaTeX docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `latex' will be used as the default path.
+
+LATEX_OUTPUT           = latex
+
+# The LATEX_CMD_NAME tag can be used to specify the LaTeX command name to be
+# invoked. If left blank `latex' will be used as the default command name.
+# Note that when enabling USE_PDFLATEX this option is only used for
+# generating bitmaps for formulas in the HTML output, but not in the
+# Makefile that is written to the output directory.
+
+LATEX_CMD_NAME         = latex
+
+# The MAKEINDEX_CMD_NAME tag can be used to specify the command name to
+# generate index for LaTeX. If left blank `makeindex' will be used as the
+# default command name.
+
+MAKEINDEX_CMD_NAME     = makeindex
+
+# If the COMPACT_LATEX tag is set to YES Doxygen generates more compact
+# LaTeX documents. This may be useful for small projects and may help to
+# save some trees in general.
+
+COMPACT_LATEX          = NO
+
+# The PAPER_TYPE tag can be used to set the paper type that is used
+# by the printer. Possible values are: a4, letter, legal and
+# executive. If left blank a4wide will be used.
+
+PAPER_TYPE             = letter
+
+# The EXTRA_PACKAGES tag can be to specify one or more names of LaTeX
+# packages that should be included in the LaTeX output.
+
+EXTRA_PACKAGES         =
+
+# The LATEX_HEADER tag can be used to specify a personal LaTeX header for
+# the generated latex document. The header should contain everything until
+# the first chapter. If it is left blank doxygen will generate a
+# standard header. Notice: only use this tag if you know what you are doing!
+
+LATEX_HEADER           =
+
+# The LATEX_FOOTER tag can be used to specify a personal LaTeX footer for
+# the generated latex document. The footer should contain everything after
+# the last chapter. If it is left blank doxygen will generate a
+# standard footer. Notice: only use this tag if you know what you are doing!
+
+LATEX_FOOTER           =
+
+# If the PDF_HYPERLINKS tag is set to YES, the LaTeX that is generated
+# is prepared for conversion to pdf (using ps2pdf). The pdf file will
+# contain links (just like the HTML output) instead of page references
+# This makes the output suitable for online browsing using a pdf viewer.
+
+PDF_HYPERLINKS         = YES
+
+# If the USE_PDFLATEX tag is set to YES, pdflatex will be used instead of
+# plain latex in the generated Makefile. Set this option to YES to get a
+# higher quality PDF documentation.
+
+USE_PDFLATEX           = YES
+
+# If the LATEX_BATCHMODE tag is set to YES, doxygen will add the \\batchmode.
+# command to the generated LaTeX files. This will instruct LaTeX to keep
+# running if errors occur, instead of asking the user for help.
+# This option is also used when generating formulas in HTML.
+
+LATEX_BATCHMODE        = NO
+
+# If LATEX_HIDE_INDICES is set to YES then doxygen will not
+# include the index chapters (such as File Index, Compound Index, etc.)
+# in the output.
+
+LATEX_HIDE_INDICES     = NO
+
+# If LATEX_SOURCE_CODE is set to YES then doxygen will include
+# source code with syntax highlighting in the LaTeX output.
+# Note that which sources are shown also depends on other settings
+# such as SOURCE_BROWSER.
+
+LATEX_SOURCE_CODE      = YES
+
+# The LATEX_BIB_STYLE tag can be used to specify the style to use for the
+# bibliography, e.g. plainnat, or ieeetr. The default style is "plain". See
+# http://en.wikipedia.org/wiki/BibTeX for more info.
+
+LATEX_BIB_STYLE        = plain
+
+#---------------------------------------------------------------------------
+# configuration options related to the RTF output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_RTF tag is set to YES Doxygen will generate RTF output
+# The RTF output is optimized for Word 97 and may not look very pretty with
+# other RTF readers or editors.
+
+GENERATE_RTF           = NO
+
+# The RTF_OUTPUT tag is used to specify where the RTF docs will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `rtf' will be used as the default path.
+
+RTF_OUTPUT             = rtf
+
+# If the COMPACT_RTF tag is set to YES Doxygen generates more compact
+# RTF documents. This may be useful for small projects and may help to
+# save some trees in general.
+
+COMPACT_RTF            = NO
+
+# If the RTF_HYPERLINKS tag is set to YES, the RTF that is generated
+# will contain hyperlink fields. The RTF file will
+# contain links (just like the HTML output) instead of page references.
+# This makes the output suitable for online browsing using WORD or other
+# programs which support those fields.
+# Note: wordpad (write) and others do not support links.
+
+RTF_HYPERLINKS         = YES
+
+# Load style sheet definitions from file. Syntax is similar to doxygen's
+# config file, i.e. a series of assignments. You only have to provide
+# replacements, missing definitions are set to their default value.
+
+RTF_STYLESHEET_FILE    =
+
+# Set optional variables used in the generation of an rtf document.
+# Syntax is similar to doxygen's config file.
+
+RTF_EXTENSIONS_FILE    =
+
+#---------------------------------------------------------------------------
+# configuration options related to the man page output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_MAN tag is set to YES (the default) Doxygen will
+# generate man pages
+
+GENERATE_MAN           = NO
+
+# The MAN_OUTPUT tag is used to specify where the man pages will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `man' will be used as the default path.
+
+MAN_OUTPUT             = man
+
+# The MAN_EXTENSION tag determines the extension that is added to
+# the generated man pages (default is the subroutine's section .3)
+
+MAN_EXTENSION          = .3
+
+# If the MAN_LINKS tag is set to YES and Doxygen generates man output,
+# then it will generate one additional man file for each entity
+# documented in the real man page(s). These additional files
+# only source the real man page, but without them the man command
+# would be unable to find the correct page. The default is NO.
+
+MAN_LINKS              = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the XML output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_XML tag is set to YES Doxygen will
+# generate an XML file that captures the structure of
+# the code including all documentation.
+
+GENERATE_XML           = NO
+
+# The XML_OUTPUT tag is used to specify where the XML pages will be put.
+# If a relative path is entered the value of OUTPUT_DIRECTORY will be
+# put in front of it. If left blank `xml' will be used as the default path.
+
+XML_OUTPUT             = xml
+
+# If the XML_PROGRAMLISTING tag is set to YES Doxygen will
+# dump the program listings (including syntax highlighting
+# and cross-referencing information) to the XML output. Note that
+# enabling this will significantly increase the size of the XML output.
+
+XML_PROGRAMLISTING     = YES
+
+#---------------------------------------------------------------------------
+# configuration options for the AutoGen Definitions output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_AUTOGEN_DEF tag is set to YES Doxygen will
+# generate an AutoGen Definitions (see autogen.sf.net) file
+# that captures the structure of the code including all
+# documentation. Note that this feature is still experimental
+# and incomplete at the moment.
+
+GENERATE_AUTOGEN_DEF   = NO
+
+#---------------------------------------------------------------------------
+# configuration options related to the Perl module output
+#---------------------------------------------------------------------------
+
+# If the GENERATE_PERLMOD tag is set to YES Doxygen will
+# generate a Perl module file that captures the structure of
+# the code including all documentation. Note that this
+# feature is still experimental and incomplete at the
+# moment.
+
+GENERATE_PERLMOD       = NO
+
+# If the PERLMOD_LATEX tag is set to YES Doxygen will generate
+# the necessary Makefile rules, Perl scripts and LaTeX code to be able
+# to generate PDF and DVI output from the Perl module output.
+
+PERLMOD_LATEX          = NO
+
+# If the PERLMOD_PRETTY tag is set to YES the Perl module output will be
+# nicely formatted so it can be parsed by a human reader.  This is useful
+# if you want to understand what is going on.  On the other hand, if this
+# tag is set to NO the size of the Perl module output will be much smaller
+# and Perl will parse it just the same.
+
+PERLMOD_PRETTY         = YES
+
+# The names of the make variables in the generated doxyrules.make file
+# are prefixed with the string contained in PERLMOD_MAKEVAR_PREFIX.
+# This is useful so different doxyrules.make files included by the same
+# Makefile don't overwrite each other's variables.
+
+PERLMOD_MAKEVAR_PREFIX =
+
+#---------------------------------------------------------------------------
+# Configuration options related to the preprocessor
+#---------------------------------------------------------------------------
+
+# If the ENABLE_PREPROCESSING tag is set to YES (the default) Doxygen will
+# evaluate all C-preprocessor directives found in the sources and include
+# files.
+
+ENABLE_PREPROCESSING   = YES
+
+# If the MACRO_EXPANSION tag is set to YES Doxygen will expand all macro
+# names in the source code. If set to NO (the default) only conditional
+# compilation will be performed. Macro expansion can be done in a controlled
+# way by setting EXPAND_ONLY_PREDEF to YES.
+
+MACRO_EXPANSION        = NO
+
+# If the EXPAND_ONLY_PREDEF and MACRO_EXPANSION tags are both set to YES
+# then the macro expansion is limited to the macros specified with the
+# PREDEFINED and EXPAND_AS_DEFINED tags.
+
+EXPAND_ONLY_PREDEF     = NO
+
+# If the SEARCH_INCLUDES tag is set to YES (the default) the includes files
+# pointed to by INCLUDE_PATH will be searched when a #include is found.
+
+SEARCH_INCLUDES        = YES
+
+# The INCLUDE_PATH tag can be used to specify one or more directories that
+# contain include files that are not input files but should be processed by
+# the preprocessor.
+
+INCLUDE_PATH           =
+
+# You can use the INCLUDE_FILE_PATTERNS tag to specify one or more wildcard
+# patterns (like *.h and *.hpp) to filter out the header-files in the
+# directories. If left blank, the patterns specified with FILE_PATTERNS will
+# be used.
+
+INCLUDE_FILE_PATTERNS  =
+
+# The PREDEFINED tag can be used to specify one or more macro names that
+# are defined before the preprocessor is started (similar to the -D option of
+# gcc). The argument of the tag is a list of macros of the form: name
+# or name=definition (no spaces). If the definition and the = are
+# omitted =1 is assumed. To prevent a macro definition from being
+# undefined via #undef or recursively expanded use the := operator
+# instead of the = operator.
+
+PREDEFINED             = HAVE_MC_H \
+                         HAVE_MCX_H \
+                         HAVE_EMBED \
+                         APBS_NOINLINE
+
+# If the MACRO_EXPANSION and EXPAND_ONLY_PREDEF tags are set to YES then
+# this tag can be used to specify a list of macro names that should be expanded.
+# The macro definition that is found in the sources will be used.
+# Use the PREDEFINED tag if you want to use a different macro definition that
+# overrules the definition found in the source code.
+
+EXPAND_AS_DEFINED      =
+
+# If the SKIP_FUNCTION_MACROS tag is set to YES (the default) then
+# doxygen's preprocessor will remove all references to function-like macros
+# that are alone on a line, have an all uppercase name, and do not end with a
+# semicolon, because these will confuse the parser if not removed.
+
+SKIP_FUNCTION_MACROS   = YES
+
+#---------------------------------------------------------------------------
+# Configuration::additions related to external references
+#---------------------------------------------------------------------------
+
+# The TAGFILES option can be used to specify one or more tagfiles. For each
+# tag file the location of the external documentation should be added. The
+# format of a tag file without this location is as follows:
+#   TAGFILES = file1 file2 ...
+# Adding location for the tag files is done as follows:
+#   TAGFILES = file1=loc1 "file2 = loc2" ...
+# where "loc1" and "loc2" can be relative or absolute paths
+# or URLs. Note that each tag file must have a unique name (where the name does
+# NOT include the path). If a tag file is not located in the directory in which
+# doxygen is run, you must also specify the path to the tagfile here.
+
+TAGFILES               =
+
+# When a file name is specified after GENERATE_TAGFILE, doxygen will create
+# a tag file that is based on the input files it reads.
+
+GENERATE_TAGFILE       =
+
+# If the ALLEXTERNALS tag is set to YES all external classes will be listed
+# in the class index. If set to NO only the inherited external classes
+# will be listed.
+
+ALLEXTERNALS           = NO
+
+# If the EXTERNAL_GROUPS tag is set to YES all external groups will be listed
+# in the modules index. If set to NO, only the current project's groups will
+# be listed.
+
+EXTERNAL_GROUPS        = YES
+
+# The PERL_PATH should be the absolute path and name of the perl script
+# interpreter (i.e. the result of `which perl').
+
+PERL_PATH              = /usr/bin/perl
+
+#---------------------------------------------------------------------------
+# Configuration options related to the dot tool
+#---------------------------------------------------------------------------
+
+# If the CLASS_DIAGRAMS tag is set to YES (the default) Doxygen will
+# generate a inheritance diagram (in HTML, RTF and LaTeX) for classes with base
+# or super classes. Setting the tag to NO turns the diagrams off. Note that
+# this option also works with HAVE_DOT disabled, but it is recommended to
+# install and use dot, since it yields more powerful graphs.
+
+CLASS_DIAGRAMS         = NO
+
+# You can define message sequence charts within doxygen comments using the \msc
+# command. Doxygen will then run the mscgen tool (see
+# http://www.mcternan.me.uk/mscgen/) to produce the chart and insert it in the
+# documentation. The MSCGEN_PATH tag allows you to specify the directory where
+# the mscgen tool resides. If left empty the tool is assumed to be found in the
+# default search path.
+
+MSCGEN_PATH            =
+
+# If set to YES, the inheritance and collaboration graphs will hide
+# inheritance and usage relations if the target is undocumented
+# or is not a class.
+
+HIDE_UNDOC_RELATIONS   = YES
+
+# If you set the HAVE_DOT tag to YES then doxygen will assume the dot tool is
+# available from the path. This tool is part of Graphviz, a graph visualization
+# toolkit from AT&T and Lucent Bell Labs. The other options in this section
+# have no effect if this option is set to NO (the default)
+
+HAVE_DOT               = YES
+
+# The DOT_NUM_THREADS specifies the number of dot invocations doxygen is
+# allowed to run in parallel. When set to 0 (the default) doxygen will
+# base this on the number of processors available in the system. You can set it
+# explicitly to a value larger than 0 to get control over the balance
+# between CPU load and processing speed.
+
+DOT_NUM_THREADS        = 0
+
+# By default doxygen will use the Helvetica font for all dot files that
+# doxygen generates. When you want a differently looking font you can specify
+# the font name using DOT_FONTNAME. You need to make sure dot is able to find
+# the font, which can be done by putting it in a standard location or by setting
+# the DOTFONTPATH environment variable or by setting DOT_FONTPATH to the
+# directory containing the font.
+
+DOT_FONTNAME           = Anonymous Pro
+
+# The DOT_FONTSIZE tag can be used to set the size of the font of dot graphs.
+# The default size is 10pt.
+
+DOT_FONTSIZE           = 10
+
+# By default doxygen will tell dot to use the Helvetica font.
+# If you specify a different font using DOT_FONTNAME you can use DOT_FONTPATH to
+# set the path where dot can find it.
+
+DOT_FONTPATH           =
+
+# If the CLASS_GRAPH and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for each documented class showing the direct and
+# indirect inheritance relations. Setting this tag to YES will force the
+# CLASS_DIAGRAMS tag to NO.
+
+CLASS_GRAPH            = NO
+
+# If the COLLABORATION_GRAPH and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for each documented class showing the direct and
+# indirect implementation dependencies (inheritance, containment, and
+# class references variables) of the class with other documented classes.
+
+COLLABORATION_GRAPH    = NO
+
+# If the GROUP_GRAPHS and HAVE_DOT tags are set to YES then doxygen
+# will generate a graph for groups, showing the direct groups dependencies
+
+GROUP_GRAPHS           = NO
+
+# If the UML_LOOK tag is set to YES doxygen will generate inheritance and
+# collaboration diagrams in a style similar to the OMG's Unified Modeling
+# Language.
+
+UML_LOOK               = NO
+
+# If the UML_LOOK tag is enabled, the fields and methods are shown inside
+# the class node. If there are many fields or methods and many nodes the
+# graph may become too big to be useful. The UML_LIMIT_NUM_FIELDS
+# threshold limits the number of items for each type to make the size more
+# managable. Set this to 0 for no limit. Note that the threshold may be
+# exceeded by 50% before the limit is enforced.
+
+UML_LIMIT_NUM_FIELDS   = 10
+
+# If set to YES, the inheritance and collaboration graphs will show the
+# relations between templates and their instances.
+
+TEMPLATE_RELATIONS     = NO
+
+# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDE_GRAPH, and HAVE_DOT
+# tags are set to YES then doxygen will generate a graph for each documented
+# file showing the direct and indirect include dependencies of the file with
+# other documented files.
+
+INCLUDE_GRAPH          = YES
+
+# If the ENABLE_PREPROCESSING, SEARCH_INCLUDES, INCLUDED_BY_GRAPH, and
+# HAVE_DOT tags are set to YES then doxygen will generate a graph for each
+# documented header file showing the documented files that directly or
+# indirectly include this file.
+
+INCLUDED_BY_GRAPH      = YES
+
+# If the CALL_GRAPH and HAVE_DOT options are set to YES then
+# doxygen will generate a call dependency graph for every global function
+# or class method. Note that enabling this option will significantly increase
+# the time of a run. So in most cases it will be better to enable call graphs
+# for selected functions only using the \callgraph command.
+
+CALL_GRAPH             = NO
+
+# If the CALLER_GRAPH and HAVE_DOT tags are set to YES then
+# doxygen will generate a caller dependency graph for every global function
+# or class method. Note that enabling this option will significantly increase
+# the time of a run. So in most cases it will be better to enable caller
+# graphs for selected functions only using the \callergraph command.
+
+CALLER_GRAPH           = NO
+
+# If the GRAPHICAL_HIERARCHY and HAVE_DOT tags are set to YES then doxygen
+# will generate a graphical hierarchy of all classes instead of a textual one.
+
+GRAPHICAL_HIERARCHY    = YES
+
+# If the DIRECTORY_GRAPH and HAVE_DOT tags are set to YES
+# then doxygen will show the dependencies a directory has on other directories
+# in a graphical way. The dependency relations are determined by the #include
+# relations between the files in the directories.
+
+DIRECTORY_GRAPH        = YES
+
+# The DOT_IMAGE_FORMAT tag can be used to set the image format of the images
+# generated by dot. Possible values are svg, png, jpg, or gif.
+# If left blank png will be used. If you choose svg you need to set
+# HTML_FILE_EXTENSION to xhtml in order to make the SVG files
+# visible in IE 9+ (other browsers do not have this requirement).
+
+DOT_IMAGE_FORMAT       = png
+
+# If DOT_IMAGE_FORMAT is set to svg, then this option can be set to YES to
+# enable generation of interactive SVG images that allow zooming and panning.
+# Note that this requires a modern browser other than Internet Explorer.
+# Tested and working are Firefox, Chrome, Safari, and Opera. For IE 9+ you
+# need to set HTML_FILE_EXTENSION to xhtml in order to make the SVG files
+# visible. Older versions of IE do not have SVG support.
+
+INTERACTIVE_SVG        = NO
+
+# The tag DOT_PATH can be used to specify the path where the dot tool can be
+# found. If left blank, it is assumed the dot tool can be found in the path.
+
+DOT_PATH               =
+
+# The DOTFILE_DIRS tag can be used to specify one or more directories that
+# contain dot files that are included in the documentation (see the
+# \dotfile command).
+
+DOTFILE_DIRS           =
+
+# The MSCFILE_DIRS tag can be used to specify one or more directories that
+# contain msc files that are included in the documentation (see the
+# \mscfile command).
+
+MSCFILE_DIRS           =
+
+# The DOT_GRAPH_MAX_NODES tag can be used to set the maximum number of
+# nodes that will be shown in the graph. If the number of nodes in a graph
+# becomes larger than this value, doxygen will truncate the graph, which is
+# visualized by representing a node as a red box. Note that doxygen if the
+# number of direct children of the root node in a graph is already larger than
+# DOT_GRAPH_MAX_NODES then the graph will not be shown at all. Also note
+# that the size of a graph can be further restricted by MAX_DOT_GRAPH_DEPTH.
+
+DOT_GRAPH_MAX_NODES    = 50
+
+# The MAX_DOT_GRAPH_DEPTH tag can be used to set the maximum depth of the
+# graphs generated by dot. A depth value of 3 means that only nodes reachable
+# from the root by following a path via at most 3 edges will be shown. Nodes
+# that lay further from the root node will be omitted. Note that setting this
+# option to 1 or 2 may greatly reduce the computation time needed for large
+# code bases. Also note that the size of a graph can be further restricted by
+# DOT_GRAPH_MAX_NODES. Using a depth of 0 means no depth restriction.
+
+MAX_DOT_GRAPH_DEPTH    = 0
+
+# Set the DOT_TRANSPARENT tag to YES to generate images with a transparent
+# background. This is disabled by default, because dot on Windows does not
+# seem to support this out of the box. Warning: Depending on the platform used,
+# enabling this option may lead to badly anti-aliased labels on the edges of
+# a graph (i.e. they become hard to read).
+
+DOT_TRANSPARENT        = NO
+
+# Set the DOT_MULTI_TARGETS tag to YES allow dot to generate multiple output
+# files in one run (i.e. multiple -o and -T options on the command line). This
+# makes dot run faster, but since only newer versions of dot (>1.8.10)
+# support this, this feature is disabled by default.
+
+DOT_MULTI_TARGETS      = NO
+
+# If the GENERATE_LEGEND tag is set to YES (the default) Doxygen will
+# generate a legend page explaining the meaning of the various boxes and
+# arrows in the dot generated graphs.
+
+GENERATE_LEGEND        = YES
+
+# If the DOT_CLEANUP tag is set to YES (the default) Doxygen will
+# remove the intermediate dot files that are used to generate
+# the various graphs.
+
+DOT_CLEANUP            = NO
diff --new-file -ru apbs-3.0.0/docs/programmer/.config/mainpage.h.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/mainpage.h.in
--- apbs-3.0.0/docs/programmer/.config/mainpage.h.in	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/mainpage.h.in	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,167 @@
+/**
+ * <center>
+ * @mainpage APBS Programmers Guide
+ *
+ * APBS was written by Nathan A. Baker.<br>
+ * Additional contributing authors listed in the code documentation.
+ * </center>
+ *
+ * <hr width="100%">
+ * @section toc   Table of Contents
+ * <ul>
+ *   <li> @ref style
+ *   <li> @ref api
+ *     <ul>
+ *       <li> <a href="modules.html">Modules</a>
+ *       <li> <a href="annotated.html">Class list</a>
+ *       <li> <a href="functions.html">Class members</a>
+ *       <li> <a href="globals.html">Class methods</a>
+ *    </ul>
+ * </ul>
+ *
+ * <hr width="100%">
+ * @section license License
+ *
+ * <p>
+ * Primary author: Nathan A. Baker (<a href="mailto:nathan.baker@pnl.gov">nathan.baker@pnnl.gov</a>)<br>
+ * Pacific Northwest National Laboratory<br>
+ * Additional contributing authors are listed in the code documentation.</p>
+ *
+ * <p>
+ * Copyright (c) 2010-2020 Battelle Memorial Institute. Developed at the Pacific
+ * Northwest National Laboratory, operated by Battelle Memorial Institute, Pacific
+ * Northwest Division for the U.S. Department of Energy.</p>
+ *
+ * <p>
+ * Portions Copyright (c) 2002-2010, Washington University in St. Louis.<br/>
+ * Portions Copyright (c) 2002-2020, Nathan A. Baker.<br/>
+ * Portions Copyright (c) 1999-2002, The Regents of the University of California.<br/>
+ * Portions Copyright (c) 1995, Michael Holst.
+ * </p>
+ *
+ * <p>
+ * All rights reserved.
+ * </p>
+ *
+ * <p>
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions are met:
+ * </p>
+ * <ul>
+ * <li>Redistributions of source code must retain the above copyright notice, this
+ *   list of conditions and the following disclaimer.
+ * <li>Redistributions in binary form must reproduce the above copyright notice,
+ *   this list of conditions and the following disclaimer in the documentation
+ *   and/or other materials provided with the distribution.
+ * <li>Neither the name of the developer nor the names of its contributors may be
+ *   used to endorse or promote products derived from this software without
+ *   specific prior written permission.
+ * </ul>
+ * <p>
+ * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
+ * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
+ * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
+ * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
+ * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
+ * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
+ * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+ * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+ * </p>
+ *
+ * <hr>
+ * <p>
+ * This documentation provides information about the programming interface
+ * provided by the APBS software and a general guide to linking to the APBS
+ * libraries.  Information about installation, configuration, and general usage
+ * can be found in the <a href="user.html">User's Guide</a>.
+ * <hr>
+ *
+ *  @section style Programming Style
+ *
+ *  <p>
+ *  APBS was developed following the <a
+ *  href="http://scicomp.ucsd.edu/~mholst/codes/maloc/cleanc.html">Clean OO
+ *  C</a> style of Mike Holst.  In short, Clean OO C code is written in a
+ *  object-oriented, ISO C-compliant fashion, and can be compiled with either a
+ *  C or C++ compiler.  <p> Following this formalism, all public data is
+ *  enclosed in structures which resemble C++ classes.  These structures and
+ *  member functions are then declared in a public header file which provides a
+ *  concise description of the interface for the class.  Private functions and
+ *  data are included in private header files (or simply the source code files
+ *  themselves) which are not distributed.  When using the library, the
+ *  end-user only sees the public header file and the compiled library and is
+ *  therefore (hopefully) oblivious to the private members and functions.  Each
+ *  class is also equipped with a constructor and destructor function which is
+ *  responsible for allocating and freeing any memory required by the
+ *  instatiated objects.
+ *
+ *  <p>
+ *  As mentioned above, public data members are enclosed in C structures which
+ *  are visible to the end-user.  Public member functions are generated by
+ *  mangling the class and function names <i>and</i> passing a pointer to the
+ *  object on which the member function is supposed to act.  For example, a
+ *  public member function with the C++ declaration
+ *    <pre>
+ *   public double Foo::bar(int i, double d)
+ *   </pre>
+ * would be declared as
+ *   <pre>
+ *   VEXTERNC double Foo_bar(Foo *thee, int i, double d)
+ *   </pre>
+ * where <code>VEXTERNC</code> is a compiler-dependent macro, the underscore
+ * <code>_</code> replaces the C++ double-colon <code>::</code>, and
+ * <code>thee</code> replaces the <code>this</code> variable implicit in all
+ * C++ classes.  Since they do not appear in public header files, private
+ * functions could be declared in any format pleasing to the user, however, the
+ * above declaration convention should generally be used for both public and
+ * private functions.  Within the source code, the public and private function
+ * declarations/definitions are prefaced by the macros <code>VPUBLIC</code> and
+ * <code>VPRIVATE</code>, respectively.  These are macros which reduce global
+ * name pollution, similar to encapsulating private data withing C++ classes.
+ *
+ * <p>
+ * The only C++ functions not explicitly covered by the above declaration
+ * scheme are the constructors (used to allocate and initialize class data
+ * members) and destructors (used to free allocated memory).  These are
+ * declared in the following fashion:  a constructor with the C++ declaration
+ *    <pre>
+ *    public void Foo::Foo(int i, double d)
+ *    </pre>
+ * would be declared as
+ *     <pre>
+ *     VEXTERNC Foo* Foo_ctor(int i, double d)
+ *     </pre>
+ * which returns a pointer to the newly constructed <code>Foo</code> object.
+ * Likewise, a destructor declared as
+ *     <pre>
+ *     public void Foo::~Foo()
+ *     </pre>
+ * in C++ would be
+ *     <pre>
+ *     VEXTERNC void Foo_dtor(Foo **thee)
+ *     </pre>
+ * in Clean OO C.
+ * <p>
+ * Finally, inline functions in C++ are simply treated as macros in Clean OO C
+ * and declared/defined using <code>define</code> statements in the public
+ * header file.
+ * <p>
+ * See any of the APBS header files for more information on Clean OO C
+ * programming styles.
+ *
+ * @section api Application programming interface documentation
+ * <p>
+ * The API documentation for this code was generated by <a
+ * href="http://www.doxygen.org">doxygen</a>.  You can either view the API
+ * documentation by using the links at the top of this page, or the slight
+ * re-worded/re-interpreted list below:
+ *    <ul>
+ *    <li> <a href="modules.html">Class overview</a>
+ *    <li> <a href="annotated.html">Class declarations</a>
+ *    <li> <a href="functions.html">Class members</a>
+ *    <li> <a href="globals.html">Class methods</a>
+ *    </ul>
+ *
+ */
diff --new-file -ru apbs-3.0.0/docs/programmer/.config/programmer.html.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/programmer.html.in
--- apbs-3.0.0/docs/programmer/.config/programmer.html.in	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/programmer/.config/programmer.html.in	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,12 @@
+<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN"> 
+<html>
+<head> 
+<title>APBS @APBS_VERSION@ - Programmer's Guide</title>
+<meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1">
+</head>
+
+<meta http-equiv="REFRESH" content="0;url=html/index.html"></HEAD>
+<body>
+Optional page text here.
+</body>
+</html>
diff --new-file -ru apbs-3.0.0/docs/reading.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/reading.rst
--- apbs-3.0.0/docs/reading.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/reading.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,73 @@
+===============
+Further reading
+===============
+
+-------------------------
+General solvation reviews
+-------------------------
+
+* Baker NA. Poisson-Boltzmann methods for biomolecular electrostatics. Methods in Enzymology, 383, 94-118, 2004. http://www.sciencedirect.com/science/article/pii/S0076687904830052
+* Baker NA, McCammon JA. Electrostatic interactions. Structural Bioinformatics. Weissig H, Bourne PE, eds., 2005. http://dx.doi.org/10.1002/0471721204.ch21
+* Baker NA. Biomolecular applications of Poisson-Boltzmann methods. Reviews in Computational Chemistry. Lipkowitz KB, Larter R, Cundari TR., 21, 2005. http://dx.doi.org/10.1002/0471720895.ch5
+* Baker NA. Improving implicit solvent simulations: a Poisson-centric view. Curr Opin Struct Biol, 15, 137-43, 2005. http://dx.doi.org/10.1016/j.sbi.2005.02.001
+* Baker NA, Bashford D, Case DA. Implicit solvent electrostatics in biomolecular simulation. New Algorithms for Macromolecular Simulation. Leimkuhler B, Chipot C, Elber R, Laaksonen A, Mark A, Schlick T, Schutte C, Skeel R, eds., 2006. http://dx.doi.org/10.1007/3-540-31618-3_15
+* Dong F, Olsen B, Baker NA. Computational Methods for Biomolecular Electrostatics. Methods in Cell Biology: Biophysical Tools for Biologists, 84, 843-870, 2008. http://www.sciencedirect.com/science/article/pii/S0091679X0784026X
+* Ren P, Chun J, Thomas DG, Schnieders MJ, Marucho M, Zhang J, Baker NA. Biomolecular electrostatics and solvation: a computational perspective. Quart Rev Biophys, 45 (4), 427-491, 2012. http://dx.doi.org/10.1017/S003358351200011X
+
+---------------------
+APBS parallel solvers
+---------------------
+
+* Baker NA, Sept D, Joseph S, Holst MJ, McCammon JA. Electrostatics of nanosystems: application to microtubules and the ribosome. Proc Natl Acad Sci USA, 98, 10037-41, 2001. http://dx.doi.org/10.1073/pnas.181342398
+* Baker NA, Sept D, Holst MJ, McCammon JA. The adaptive multilevel finite element solution of the Poisson-Boltzmann equation on massively parallel computers. IBM J Res Devel, 45, 427-38, 2001. http://dx.doi.org/10.1147/rd.453.0427
+
+---------------------
+APBS multigrid solver
+---------------------
+
+* M. Holst, Adaptive numerical treatment of elliptic systems on manifolds. Advances in Computational Mathematics 15, 139-191, 2001 http://dx.doi.org/10.1023/A:1014246117321
+* M. Holst and F. Saied, Numerical solution of the nonlinear Poisson-Boltzmann equation: Developing more robust and efficient methods. J. Comput. Chem. 16, 337-364, 1995.
+* M. Holst and F. Saied, Multigrid solution of the Poisson-Boltzmann equation. J. Comput. Chem. 14, 105-113, 1993.
+
+--------------------------
+APBS finite element solver
+--------------------------
+
+* Holst M, Baker NA, Wang F. Adaptive multilevel finite element solution of the Poisson-Boltzmann equation I: algorithms and examples. J Comput Chem, 21, 1319-42, 2000. http://bit.ly/1goFAFE
+* Baker N, Holst M, Wang F. Adaptive multilevel finite element solution of the Poisson-Boltzmann equation II: refinement schemes based on solvent accessible surfaces. J Comput Chem, 21, 1343-52, 2000. http://bit.ly/1dNSP8l
+
+--------------------------
+APBS geometric flow solver
+--------------------------
+
+* Chen Z, Baker NA, Wei GW. Differential geometry based solvation model I: Eulerian formulation, J Comput Phys, 229, 8231-58, 2010. http://dx.doi.org/10.1016/j.jcp.2010.06.036
+* Chen Z, Baker NA, Wei GW. Differential geometry based solvation model II: Lagrangian formulation. J Math Biol, 63, 1139-1200, 2011. http://dx.doi.org/10.1007/s00285-011-0402-z
+* Chen Z, Zhao S, Chun J, Thomas DG, Baker NA, Wei GW. Variational approach for nonpolar solvation analysis. Journal of Chemical Physics, 137, 084101, 2012. http://dx.doi.org/10.1063/1.4745084
+* Thomas DG, Chun J, Chen Z, Wei G, Baker NA. Parameterization of a Geometric flow implicit solvation model. Journal of Computational Chemistry, 34, 687-95, 2013. http://dx.doi.org/10.1002/jcc.23181
+* Daily M, Chun J, Heredia-Langner A, Baker NA. Origin of parameter degeneracy and molecular shape relationships in geometric-flow calculations of solvation free energies. J Chem Phys, 139, 204108, 2013. http://dx.doi.org/10.1063/1.4832900
+
+-------------------------------
+TABI-PB boundary element solver
+-------------------------------
+
+* Geng W, Krasny R. A treecode-accelerated boundary integral Poisson–Boltzmann solver for electrostatics of solvated biomolecules, J Comput Phys, 247, 62-78, 2013. https://doi.org/10.1016/j.jcp.2013.03.056
+
+-----------------------------------------------------------
+Structural bioinformatics based on electrostatic properties
+-----------------------------------------------------------
+
+* Zhang X, Bajaj CL, Kwon B, Dolinsky TJ, Nielsen JE, Baker NA. Application of new multi-resolution methods for the comparison of biomolecular electrostatic properties in the absence of global structural similarity. Multiscale Model Simul, 5, 1196-213, 2006. http://dx.doi.org/10.1137/050647670
+* Chakraborty S, Rao BJ, Baker N, Ásgeirsson B. Structural phylogeny by profile extraction and multiple superimposition using electrostatic congruence as a discriminator. Intrinsically Disordered Proteins, 1 (1), e25463, 2013. https://www.landesbioscience.com/journals/idp/article/25463/
+
+-------------------
+Other fun with APBS
+-------------------
+
+* Wagoner JA, Baker NA. Assessing implicit models for nonpolar mean solvation forces: the importance of dispersion and volume terms. Proc Natl Acad Sci USA, 103, 8331-6, 2006. http://dx.doi.org/10.1073/pnas.0600118103
+* Swanson JMJ, Wagoner JA, Baker NA, McCammon JA. Optimizing the Poisson dielectric boundary with explicit solvent forces and energies: lessons learned with atom-centered dielectric functions. J Chem Theory Comput, 3, 170-83, 2007. http://dx.doi.org/10.1021/ct600216k
+* Schnieders MJ, Baker NA, Ren P, Ponder JW. Polarizable Atomic Multipole Solutes in a Poisson-Boltzmann Continuum. J Chem Phys, 126, 124114, 2007. http://dx.doi.org/10.1063/1.2714528
+* Callenberg KM, Choudhary OP, de Forest GL, Gohara DW, Baker NA, Grabe M. APBSmem: A graphical interface for electrostatic calculations at the membrane. PLoS ONE, 5, e12722, 2010. http://dx.doi.org/10.1371/journal.pone.0012722
+* Unni S, Huang Y, Hanson RM, Tobias M, Krishnan S, Li WW, Nielsen JE, Baker NA. Web servers and services for electrostatics calculations with APBS and PDB2PQR. J Comput Chem, 32 (7), 1488-1491, 2011. http://dx.doi.org/10.1002/jcc.21720
+* Konecny R, Baker NA, McCammon JA. iAPBS: a programming interface to the adaptive Poisson–Boltzmann solver. Computational Science and Discovery, 5, 015005, 2012. http://dx.doi.org/10.1088/1749-4699/5/1/015005
+* Jurrus E, Engel D, Star K, Monson K, Brandi J, Felberg LE, Brookes DH, Wilson L, Chen J, Liles K, Chun M, Li P, Gohara DW, Dolinsky T, Konecny R, Koes DR, Nielsen JE, Head-Gordon T, Geng W, Krasny R, Wei G-W, Holst MJ, McCammon JA, Baker NA. Improvements to the APBS biomolecular solvation software suite. Protein Sci, 27 (1), 112-128, 2018. https://doi.org/10.1002/pro.3280
+* Laureanti J, Brandi J, Offor E, Engel D, Rallo R, Ginovska B, Martinez X, Baaden M, Baker NA. Visualizing biomolecular electrostatics in virtual reality with UnityMol‐APBS. Protein Sci, 29 (1), 237-246, 2020. https://doi.org/10.1002/pro.3773
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/README apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/README
--- apbs-3.0.0/docs/README	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/README	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,2 @@
+See `../doc` for full documentation or visit http://www.poissonboltzmann.org
+
diff --new-file -ru apbs-3.0.0/docs/release_procedure.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/release_procedure.md
--- apbs-3.0.0/docs/release_procedure.md	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/release_procedure.md	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,120 @@
+APBS Release Procedure
+-----------------------
+ 1. Change Version Number
+	 - [ ] Edit [apbs/CMakeLists.txt]([https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/CMakeLists.txt)
+		Increment the value for the APBS_VERSION variable:
+	     set(APBS_VERSION "M.m.u")
+	     Where:
+		 - M is the Major version - increment if there are breaking changes or dropping support for previous features
+		 - m is the Minor version - increment for new features added
+		 - u is the Micro version - increment for adding small changes like new tests or fixing small bugs
+
+ 2. Update the ChangeLog
+	 - [ ] Edit [apbs/doc/ChangeLog]([https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/doc/ChangeLog.md)
+	   - Document major/minor changes for this release
+   
+  3. Update License info
+	   - [ ] Update license dates and information in source files
+	   - In apbs/src edit all .c source files and all .h header files, update dates
+  
+ * Test release
+   - Set up separate machines or virtual machines for target deploy platforms:
+	 - [ ] Ubuntu-latest 
+	 - [ ] MacOSX-latest
+	 - [ ] Windows-latest (Windows Subsystem Linux)
+     
+   - On testing platforms install or verify presence of required tools:
+	 - [ ] Essential compile toolchain 
+     - [ ] Python 3.6 or newer
+     - [ ] git
+     - [ ] CMake 3.12 or newer
+     - [ ] Doxygen
+     - [ ] LaTeX builder like texlive, tetex (usually already available in linux)
+     
+   - Clone apbs github repository to testing machines:
+```bash
+            #!/bin/bash
+            mkdir ~/git
+            cd ~/git
+            git clone https://github.com/Electrostatics/apbs-pdb2pqr.git
+            cd apbs-pdb2pqr
+            git submodule init
+            git submodule update
+```
+   - Build testing
+     - On each platform test machine us the script below to build APBS
+     - Ensure that all tests run without segmentation faults and results are acceptable
+
+```bash
+		#!/bin/bash
+		
+		export INSTALL_DIR=$HOME/apbs-install
+		cd ~/git/apbs-pdb2pqr
+		rm -rf build                                    || exit 1
+		mkdir build                                     || exit 1
+		cd build                                        || exit 1
+		#  Configure the software to be built
+		cmake                                     \
+		      -DCMAKE_INSTALL_PREFIX=$INSTALL_DIR \
+		      -DENABLE_GEOFLOW=ON                 \
+		      -DENABLE_BEM=ON                     \
+		      -DENABLE_FETK=ON                    \
+		      -DENABLE_PBSAM=OFF                  \
+		      -DENABLE_PBAM=OFF                   \
+		      -DENABLE_PYTHON=OFF                 \
+		      -DBUILD_SHARED_LIBS=OFF             \
+		      -DCMAKE_C_FLAGS="-fPIC"             \
+		      -DBUILD_DOC=ON                      \
+		      ..                                        || exit 1
+		#  Build and install the software
+		VERBOSE=1 make -j 1 install                     || exit 1
+```
+     
+ * Upload Binary Packages
+   - On the following test platforms:
+	 - [ ] Ubuntu-latest 
+	 - [ ] MacOSX-latest
+	 - [ ] Windows-latest (Windows Subsystem Linux)
+     
+   - Add entire install structure to archive file
+```bash
+	     #!/bin/bash
+	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
+	     PLATFORM=`uname -s`
+	     ARCHITECTURE=`uname -m`
+	     tar -czf APBS-${VERSION}-${PLATFORM}-${ARCHITECTURE}.tgz ~/apbs-install
+```
+   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
+     
+ * Upload Source Packages
+```bash
+	     #!/bin/bash
+	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
+	     cd ~/git/apbs-pdb2pqr/apbs
+	     #  Use git to remove all non-versioned files and directories
+	     #  NOTE: Use -dfn flags first for a dry run and make sure right files are rm'ed
+	     git clean -dfq
+	     #  NOTE: Add the whole apbs directory to an arcive
+	     tar -czf APBS-${VERSION}-source.tar.gz ~/git/apbs-pdb2pqr
+```
+   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
+     
+ * Upload Package Programmer Guide Package
+   - Build documentation
+```bash
+	     #!/bin/bash
+	     VERSION=`cat ~/git/apbs-pdb2pqr/VERSION | sed -e "s/_/./g"`
+	     cd ~/git/apbs-pdb2pqr/apbs/doc
+	     #  Use git to remove all non-versioned files and directories
+	     #  NOTE: Use -dfn flags first for a dry run and make sure right files are rm'ed
+	     git clean -dfq
+	     #  NOTE: Add the whole apbs directory to an arcive
+	     tar -czf APBS-${VERSION}-programmer_guide.tgz
+```
+     
+   - Upload the archive to apbs project on https://sourceforge.net/projects/apbs/files/apbs/
+
+ * Update http://www.poissonboltzmann.org/apbs/release-history with new release information.
+<!--stackedit_data:
+eyJoaXN0b3J5IjpbNTk4MzY2NDQ1XX0=
+-->
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/releases.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/releases.rst
--- apbs-3.0.0/docs/releases.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/releases.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,921 @@
+===============
+Release history
+===============
+
+-------------------
+APBS 3.0 (May 2020)
+-------------------
+
+* Binary releases may be found in `GitHub releases <https://github.com/Electrostatics/apbs-pdb2pqr/releases>`_ and on `SourceForge <http://sourceforge.net/projects/apbs/files/apbs>`_.
+
+^^^^^^^^^^^^
+New Features
+^^^^^^^^^^^^
+
+* Poisson-Boltzmann Analytical Method (PBAM, see `Lotan & Head-Gordon <http://pubs.acs.org/doi/full/10.1021/ct050263p>`_) and Semi-Analytical Method (PBSAM, see `Yap & Head-Gordon <http://pubs.acs.org/doi/abs/10.1021/ct100145f>`_) integrated with APBS. PBSAM is currently only available in the Linux and OS X distributions.
+
+  * Examples are located with the APBS examples in the pbam/ and pbsam/ directories.
+
+* Tree-Code Accelerated Boundary Integral Poisson-Boltzmann Method (TABI-PB) integrated with APBS (See `Geng & Krasny <http://www.sciencedirect.com/science/article/pii/S0021999113002404>`_).
+
+  * Examples are located with the APBS examples in the bem/, bem-pKa/, and bem-binding-energies/ folders
+  * Included NanoShaper alternative to MSMS.
+  * More information and documentation may be found in the `Contributions <http://www.poissonboltzmann.org/external_contributions/extern-tabi/>`_ section of the APBS-PDB2PQR website
+
+* Added binary DX format support to the appropriate APBS tools.
+* Test suite amended and expanded.
+* Removed hard-coded limitation to number of grid points used to determine surface accessibility.
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^
+Known Bugs and Limitations
+^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+* PBSAM not building in windows due to C standard restrictions in the Microsoft compiler implementation.
+
+^^^^^^^^^^^^^
+Minor Updates
+^^^^^^^^^^^^^
+
+* PB(S)AM now requires the key work 'pos' for the term argument.
+* PB(S)AM 'surf' keyword has been replaced with the 'usemesh' keyword.
+* PB(S)AM 'salt' keyword has been replaced with the 'ion' keyword.
+* PB(S)AM dynamics parameters are no longer accepted in the ELEC section.
+* PB(S)AM now has only one type of ELEC method: pb(s)am_auto.
+* PB(S)AM 'gridpts' keyword has been replaced with 'dime' keyword.
+* PB(S)AM 'dx' and '3dmap' keywords are deprecated to use the 'write' one instead.
+* BEM mesh keyword now requires method names instead of just integer values.
+* GEOFLOW ELEC type has been change from 'geoflow-auto' to 'geoflow'.
+* Fixed miscellaneous Windows build issues.
+* Update the build configurations for the Pythons libraries.
+
+^^^^^
+Notes
+^^^^^
+
+* The following are included in APBS as Git submodules:
+
+  * `Geometric Flow <https://github.com/Electrostatics/geoflow_c/tree/e8ce510a670e0b7f3501e72be6141fc20328f947>`_
+  * `FETk <https://github.com/Electrostatics/FETK/tree/0c6fdeabe8929acea7481cb1480b5706b343b7e0>`_
+  * `PBAM/PBSAM <https://github.com/davas301/pb_solvers/tree/4805cbec02b30e9bae927f03ac2fecd3217c4dad>`_
+  * `TABI-PB <https://github.com/lwwilson1/TABIPB/tree/941eff91acd4153a06764e34d29b633c6e3b980f>`_
+
+
+-------------------
+APBS 1.5 (Oct 2016)
+-------------------
+
+Dearest APBS users,
+
+We are pleased to announce the latest release of APBS 1.5. The latest version of APBS includes several notable features and bug fixes. This release includes the addition of Poisson-Boltzmann Analytical-Method (PB-AM), Poisson-Boltzmann Semi-Analytical Method (PB-SAM) and the Treecode-Accelerated Boundary Integral Poisson-Boltzmann method (TABI). Additionally, we have made improvements to the build system and the system tests, as well as miscellaneous bug fixes. A full change log may be found `here <https://github.com/Electrostatics/apbs-pdb2pqr/blob/master/apbs/doc/ChangeLog.md>`_.
+
+For help with installation, building, or running APBS, please visit https://gitter.im/Electrostatics/help.
+
+We thank you for your continued support of APBS.
+
+Sincerely,
+
+The APBS Development Team
+
+-----------------------
+APBS 1.4.2.1 (Jan 2016)
+-----------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Poisson-Boltzmann Semi-Analytical Method (PB-SAM) packaged and built with APBS.
+* New Geometric flow API and improvements in speed.
+* Support for BinaryDX file format.
+* SOR solver added for mg-auto input file option.
+* DXMath improvements.
+* Test suit improvements:
+
+  * APBS build in Travis-CI
+  * Geometric Flow tests added.
+  * Protein RNA tests enabled.
+  * Intermediate results testing.
+
+* Example READMEs onverted to markdown and updated with latest results. 
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* OpenMPI (mg-para) functionality restored.
+* Fixed parsing PQR files that contained records other than ATOM and HETATM.
+* Geometric Flow boundary indexing bug fixed.
+* Build fixes:
+
+  * Out of source CMake build are again working.
+  * Python library may be built.
+  * CentOS 5 binary builds for glibc compatibility.
+  * Pull requests merged.
+
+* Removed irrelevant warning messages.
+
+^^^^^
+Notes
+^^^^^
+
+The following packages are treated as submodules in APBS:
+
+* Geometric Flow has been moved to its own `repository <https://github.com/Electrostatics/geoflow_c>`_.
+* FETk has been `cloned <https://github.com/Electrostatics/FETK>`_ so that we could effect updates.
+* PB-SAM lives here:  https://github.com/Electrostatics/PB-SAM
+
+Added a `chat feature <https://gitter.im/Electrostatics/help>`_ for users.
+
+^^^^^^^^^^
+Known bugs
+^^^^^^^^^^
+
+* Travis CI Linux builds are breaking because Geometric Flow relies on C++11 and Travis boxen have an old GCC that does not support C++11. This also and issue for CentOS 5.
+* BEM is temporarily disabled due to build issues.
+* Geometric Flow build is currently broken on Windows using Visual Studio.
+
+-----------------------
+APBS 1.4.2.0 (Jan 2016)
+-----------------------
+
+^^^^^^^^^^^^^
+Binary builds
+^^^^^^^^^^^^^
+
+Binary releases are available.
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Poisson-Boltzmann Semi-Analytical Method (PB-SAM) packaged and build with APBS.
+* New Geometric flow API and improvements: https://github.com/Electrostatics/apbs-pdb2pqr/issues/235
+* Support for BinaryDX file format: https://github.com/Electrostatics/apbs-pdb2pqr/issues/216
+* SOR solver added for mg-auto input file option.
+* DXMath improvements https://github.com/Electrostatics/apbs-pdb2pqr/issues/168 and https://github.com/Electrostatics/apbs-pdb2pqr/issues/216
+* Test suite improvements:
+
+  * APBS build in Travis-CI
+  * Geometric Flow test added.
+  * Protein RNA test enabled https://github.com/Electrostatics/apbs-pdb2pqr/issues/149
+  * Intermediate result testing https://github.com/Electrostatics/apbs-pdb2pqr/issues/64
+
+* Example READMEs converted to markdown and updated with latest results.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* OpenMPI (mg-para) functionality restored: https://github.com/Electrostatics/apbs-pdb2pqr/issues/190
+* Fized parsing PQR files that contained records other than ATOM and HETATM: https://github.com/Electrostatics/apbs-pdb2pqr/issues/77 and https://github.com/Electrostatics/apbs-pdb2pqr/issues/214
+* Geometrix Flow boundary indexing bug fixed.
+* Build fixes:
+
+  * Out of source CMake build are again working.
+  * Python library may be built:  https://github.com/Electrostatics/apbs-pdb2pqr/issues/372
+  * CentOS 5 binary builds for glibc compability.
+  * Pull requests merged.
+
+*  Removed irrelevant warning messages: https://github.com/Electrostatics/apbs-pdb2pqr/issues/378
+
+^^^^^
+Notes
+^^^^^
+
+* The following packages are treated as submodules in APBS:
+
+  * Geometric Flow has been moved to its own repository:  https://github.com/Electrostatics/geoflow_c/
+  * FETk has been cloned: https://github.com/Electrostatics/FETK/
+  * PB-SAM lives here:  https://github.com/Electrostatics/PB-SAM/
+
+* Added chat feature at https://gitter.im/Electrostatics/help/ for users. 
+
+^^^^^^^^^^
+Known bugs
+^^^^^^^^^^
+
+* Travis-CI Linux builds are breaking because Geometric Flow relies on C++11 and Travis boxen have an old GCC that does not support C++11. This is also an issue for CentOS 5.
+* BEM is temporarily disabled due to build issues.
+* Geometric Flow build is currently broken on Windows using Visual Studio.
+
+---------------------
+APBS 1.4.1 (Aug 2014)
+---------------------
+
+^^^^^^^
+Summary
+^^^^^^^
+
+We are pleased to announced the release of APBS 1.4.1. This was primarily a bug fix release; however, we have added a few features we'd like to hightlight below.
+We would like to also highlight our new website, still located at: http://www.poissonboltzmann.org. This site is also hosted at GitHub and we hope that the new organization will make it easier for people to find the content they need. While we are still in the process of migrating some remaining content, we have added links to the previous page when needed.
+Thank you for your continuing support of APBS. As always, please use our mailing list to send up questions or comments about our software.
+
+^^^^^^^^^^^^^^^^
+Detailed changes
+^^^^^^^^^^^^^^^^
+
+* Multigrid bug fix for volumes with large problem domain.
+* We have added a preliminary implementation of geometric flow.
+* Finite element method support has been re-enabled.
+* Migration of the APBS source tree to `GitHub <http://github.com/Electrostatics/apbs-pdb2pqr>`_ for better collaboration, issue tracking, and source code management.
+* Improved test suite.
+
+---------------------
+APBS 1.4.0 (Jul 2012)
+---------------------
+
+^^^^^^^
+Summary
+^^^^^^^
+
+We are pleased to announce the release of APBS 1.4.0. This version of APBS includes a massive rewrite to eliminate FORTRAN from the software code base to improve portability and facilitate planned optimization and parallelization activities. A more detailed list of changes is provided below.
+Starting with this release, we have created separate installation packages for the APBS binaries, examples, and programming documentation. This change is in response to user requests and recognition of the large size of the examples and documentation directories.
+
+^^^^^^^^^^^^^^^^
+Detailed changes
+^^^^^^^^^^^^^^^^
+
+
+* Removed FORTRAN dependency from APBS
+* Direct line by line translation of all source from contrib/pmgZ
+* Functions replaced and tested incrementally to ensure code congruence
+* Created new subfolder src/pmgC for translated pmg library
+* Created new macros for 2d, 3d matrix access
+* In src/generic/apbs/vmatrix.h
+* Simulate native FORTRAN 2 and 3 dimensional arrays
+* Use 1-indexed, column-major ordering
+* Allowed direct 1-1 translation from FORTRAN to ensurre code congruence
+* Added additional debugging and output macros to src/generic/apbs/vhal.h
+* Added message, error message, assertion, warning, and abort macros
+* Macro behavior modified by the --enable-debug flag for configure
+* Non-error messages directed to stderr in debug, io.mc otherwise
+* All error messages are directed to stdout
+* In debug mode, verbose location information is provided
+* Added additional flags to configure
+* --with-fetk replaces FETK_INCLUDE, FETK_LIBRARY environment flags
+* --with-efence enables compiling with electric fence library
+* --enable-debug eliminates compiling optimization and includes line no info
+* ---enable-profiling adds profiling information and sets --enable-debug
+* --enable-verbose-debug prints lots of function specific information
+
+-------------------
+APBS 1.3 (Oct 2010)
+-------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Added in new read and write binary (gz) commands. Can read gzipped DX files directly.
+* Added new write format to output the atomic potentials to a flat file (see atompot)
+* Added new functionality for using a previously calculated potential map for a new calculation.
+* Added a new program for converting delphi potential maps to OpenDX format. tools/mesh/del2dx
+* Updated Doxygen manual with call/caller graphs.  Replaced HTML with PDF.
+* Added tools/matlab/solver with simple Matlab LPBE solver for prototyping, teaching, etc.
+* Deprecated APBS XML output format.
+* Deprecated nlev keyword.
+* Added etol keyword, which allows user-defined error tolerance in LPBE and NPBE calculations (default errtol value is 1.0e-6).
+* Added more explanatory error messages for the case in which parm keyword is missing from APBS input file for apolar calculations.
+* Added a polar and apolor forces calculation example to examples/born/ .
+* Added warning messages for users who try to compile APBS with --enable-tinker flag and run APBS stand-alone execution.
+* Switched default Opal service urls from sccne.wustl.edu to NBCR.
+* Added a sanity check in routines.c: 'bcfl map' in the input file requires 'usemap pot' statement in the input file as well.
+* Introduced Vpmgp_size() routine to replace F77MGSZ call in vpmg.c
+* Updated test results for APBS-1.3 release.
+    
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Modified Vpmg_dbForce with some grid checking code provided by Matteo Rotter.
+* Fixed a bug in psize.py per Michael Lerner's suggestion. The old version of psize.py gives wrong cglen and fglen results in special cases (e.g., all y coordinates are negative values).
+* Fixed a bug in examples/scripts/checkforces.sh: the condition for "Passed with rounding error" is abs(difference) < errortol, not the other way around.
+* Fixed the help string in ApbsClient.py .
+* Fixed a bug in Vacc_atomdSASA(): the atom SASA needs to be reset to zero displacement after finite melement methods.
+* Fixed a bug in Vpmg_dbForce(): the initialization of rtot should appear before it is used.
+* Fixed a bug in initAPOL(): center should be initialized before used.
+* Fixed a bug in routines.c: eliminated spurious "Invalid data type for writing!" and "Invalid format for writing!" from outputs with "write atompot" statement in the input file.
+* Fixed a bug in vpmg.c: fixed zero potential value problem on eges and corners in non-focusing calculations.
+
+---------------------
+APBS 1.2.1 (Dec 2009)
+---------------------
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Added in warning into focusFillBound if there is a large value detected in setting the boundary conditions during a focusing calculation
+* Added in a check and abort in Vpmg_qmEnergy if chopped values are detected. This occurs under certain conditions for NPBE calculations where focusing cuts into a low-dielectric regions.
+* Fixed a bug in Vpmg_MolIon that causes npbe based calculations to return very large energies.  This occurs under certain conditions for NPBE calculations where focusing cuts into a low-dielectric regions.
+
+---------------------
+APBS 1.2.0 (Oct 2009)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Updated NBCR opal service urls from http://ws.nbcr.net/opal/... to http://ws.nbcr.net/opal2/... 
+* Increased the number of allowed write statements from 10 to 20
+* Updated inputgen.py with --potdx and --istrng options added, original modification code provided by Miguel Ortiz-Lombardía
+* Added more information on PQR file parsing failures
+* Added in support for OpenMP calculations for multiprocessor machines.
+* Changed default Opal service from http://ws.nbcr.net/opal2/services/APBS_1.1.0 to http://sccne.wustl.edu:8082/opal2/services/apbs-1.2
+
+^^^^^^^^^^^^^
+Modifications
+^^^^^^^^^^^^^
+
+* Applied Robert Konecny's patch to bin/routines.h (no need to include apbscfg.h in routines.h)
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Added a remove_Valist function in Python wrapper files, to fix a memory leak problem in pdb2pka
+* Fixed a bug in smooth.c: bandwidth iband, jband and kband (in grid units) should be positive integers
+* Fixed a bug in psize.py: for a pqr file with no ATOM entries but only HETATM entries in it, inputgen.py should still create an APBS input file with reasonable grid lengths
+* Fixed a bug in Vgrid_integrate: weight w should return to 1.0 after every i, j or k loop is finished
+* Fixed a bug in routines.c, now runGB.py and main.py in tools/python/ should be working again instead of producing segfault
+* Fixed a few bugs in ApbsClient.py.in related to custom-defined APBS Opal service urls, now it should be OK to use custom-defined APBS Opal service urls for PDB2PQR web server installations
+
+---------------------
+APBS 1.1.0 (Mar 2009)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Moved APBS user guide and tutorial to MediaWiki
+* Added in support for OpenMPI for parallel calculations
+* Added in command line support for Opal job submissions (Code by Samir Unni)
+* Allowed pathname containing spaces in input file, as long as the whole pathname is in quotes ("")
+* Documented 'make test' and related features
+
+^^^^^^^^^^^^^
+Modifications
+^^^^^^^^^^^^^
+
+* Modified the function bcCalc to march through the data array linearly when setting boundary conditions. This removes duplication of grid points on the edge of the array and corners.
+* Clarified documentation on the IDs assigned to input maps, PQRs, parameter files, etc.
+* pdated tutorial to warn against spaces in APBS working directory path in VMD; updated user guide to warn against spaces in APBS installation path on Windows
+* 'make test' has been reconfigured to run before issuing make install (can be run from top directory)
+* Removed tools/visualization/vmd from tools directory in lieu of built-in support in VMD
+* Path lengths can now be larger than 80 characters
+* Expanded authorship list
+* Added in 'make test-opal' as a post install test (run from the examples install directory)
+* Added additional concentrations to protein-rna test case to better encompass experimental conditions used by Garcia-Garcia and Draper; this improves agreement with the published data
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Fixed typos in User Guide (ion keyword) and clarified SMPBE keyword usage
+* Fixed typo in User Guide (writemat: poission -> poisson)
+* Updated psize.py with Robert's patch to fix inconsistent assignment of fine grid numbers in some (very) rare cases
+* Fixed bug with boundary condition assignment.  This could potentially affect all calculations; however, probably has limited impact:  many test cases gave identical results after the bug fix; the largest change in value was < 0.07%.
+
+---------------------
+APBS 1.0.0 (Apr 2008)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+
+* Changed license to New BSD style open source license (see http://www.opensource.org/licenses/bsd-license.php) for more information
+* Added in a feature limited version of PMG (Aqua) that reduces the memory footprint of an APBS run by 2-fold
+* Modified several routines to boost the speed of APBS calculations by approximately 10% when combined with the low memory version of APBS
+* Simplified parameter input for ION and SMPBE keywords (key-value pairs) 
+* Examples and documentation for size-modified PBE code (Vincent Chu et al)
+* Added in "fast" compile-time option that uses optimized parameters for multigrid calculations
+* mg-dummy calculations can be run with any number (n>3) of grid points
+* Updated PMG license to LGPL
+* Added per-atom SASA information output from APOLAR calculations
+* Added per-atom verbosity to APOLAR calculation outputs
+* Ability to read-in MCSF-format finite element meshes (e.g., as produced by Holst group GAMER software)
+* Updated installation instructions in user guide
+* Updated inputgen.py to write out the electrostatic potential for APBS input file.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Updated tools/python/apbslib* for new NOsh functionality
+* Clarified ELEC/DIME and ELEC/PDIME documentation
+* Added more transparent warnings/error messages about path lengths which exceed the 80-character limit
+* Fixed small typo in user guide in installation instructions
+* Fixed memory leaks throughout the APBS code
+* Fixed NOsh_parseREAD errors for input files with \r line feeds.
+* Fixed a variable setting error in the test examples
+* Fixed a bug where memory usage is reported incorrectly for large allocations on 64-bit systems
+* Added DTRSV to APBS-supplied BLAS to satisfy FEtk SuperLU dependency
+* Fixed a small bug in routines.c to print out uncharged molecule id
+* Limited calculation of forces when surface maps are read in 
+
+---------------------
+APBS 0.5.1 (Jul 2007)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Replaced APOLAR->glen and APOLAR->dime keywords with APOLAR->grid
+* Deprecated mergedx. Added mergedx2
+    
+    * mergedx2 takes the bounding box that a user wishes to calculate a map for, as well as a resolution of the output map. An output map meeting those specifications is calculated and store.
+    
+* Added pKa tutorial
+* Added warning about strange grid settings (MGparm)
+* Fixed a bug in vpmg.c that occured when a user supplied a dielectric map with the ionic strength set to zero, causing the map to not be used.
+* Removed deprecated (as of 0.5.0) tools/manip/acc in lieu of new APOLAR APBS features
+* Added enumerations for return codes, new PBE solver (SMPBE) and linear/ nonlinear types
+* Added in code for Size-Modified PBE (SMPBE)
+
+
+^^^^^^^^^^^^^^^^^^^^^^^^^
+Bug fixes and API changes
+^^^^^^^^^^^^^^^^^^^^^^^^^
+
+* Fixed buffer over-run problem
+* Fixed case inconsistency with inputgen.py and psize.py scripts which caused problems with some versions of Python
+* Fixed bug wherein 'bcfl sdh' behaved essentially like 'bcfl zero'.  Now we have the correct behavior:  'bcfl sdh' behaves like 'bcfl mdh' thanks to the multipole code added by Mike Schnieders.  Interestingly, this bug didn't have a major on the large-molecule test cases/examples provided by APBS but did affect the small molecule solvation energies.  Thanks to Bradley Scott Perrin for reporting this bug.
+* Added support for chain IDs in noinput.py
+* Fixed bug in noinput.py where REMARK lines would cause the script to fail.
+
+---------------------
+APBS 0.5.0 (Jan 2007)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Significantly streamlined the configure/build/install procedure:
+    
+    * Most common compiler/library options now detected by default
+    * MALOC is now included as a "plugin" to simplify installation and compatibility issue
+    
+* Added new APOLAR section to input file and updated documentation -- this function renders tools/manip/acc obsolete.
+* Added support for standard one-character chain IDs in PQR files. 
+* Added a new "spl4" charge method (chgm) option to support a quintic B-spline discretization (thanks to Michael Schnieders).
+* Updated psize.py
+* Added a new "spl4" ion-accessibility coefficient model (srfm) option that uses a 7th order polynomial. This option provides the higher order continuity necessary for stable force calculations with atomic multipole force fields (thanks to Michael Schnieders).
+* Modified the "sdh" boundary condition (bcfl) option to include dipoles and quadrupoles.  Well-converged APBS calculations won't change with the dipole and quadrupole molecular moments included in the boundary potential estimate, but calculations run with the boundary close to the solute should give an improved result (thanks to Michael Schnieders). 
+* Updated documentation to reflect new iAPBS features (NAMD support)
+* Added Gemstone example to the tutorial
+* New example demonstrating salt dependence of protein-RNA interactions.
+* Added code to allow for an interface with TINKER (thanks to Michael Schnieders).
+* The Python wrappers are now disabled by default.  They can be compiled by passing the --enable-python flag to the configure script.  This will allow users to attempt to compile the wrappers on various systems as desired.
+* Added XML support for reading in parameter files when using PDB files as input.  New XML files can be found in tools/conversion/param/vparam.
+* Added XML support for reading "PQR" files in XML format.
+* Added support for command line --version and --help flags. 
+* Added support for XML output options via the --output-file and  --output-format flags.
+* Updated runme script in ion-pmf example to use environmental variable for APBS path
+* Modified the license to allow exceptions for packaging APBS binaries with several visualization programs.  PMG license modifed as well.
+* Added a DONEUMANN macro to vfetk.c to test FEM problems with all Neumann boundary conditions (e.g., membranes).
+* Added Vpmg_splineSelect to select the correct Normalization method with either cubic or quintic (7th order polynomial) spline methods.
+* Modified the selection criteria in Vpmg_qfForce, Vpmg_ibForce and Vpmg_dbnpForce for use with the new spline based (spl4) method. 
+* Added ion-pmf to the make test suite.
+* Updated splash screen to include new PMG acknowledgment
+* Added runGB.py and readGB.py to the Python utilities, which calculate solvation energy based on APBS parameterized Generalized Born model.
+* Updated authorship and tool documentation
+* Deprecated ELEC->gamma keyword in lieu of APOLAR->gamma
+
+^^^^^^^^^^^^^^^^^^^^^^^^^
+Bug fixes and API changes
+^^^^^^^^^^^^^^^^^^^^^^^^^
+
+* Cleanup of documentation, new Gemstone example
+* Clarified usage of dime in mg-para ELEC statements
+* Massive cleanup of NOsh, standardizing molecule and calculation IDs and making the serial focusing procedure more robust
+* Removed MGparm partOlap* data members; the parallel focusing centering is now done entirely within NOsh
+* Updated the user manual and tutorial
+* Updated psize.py to use centers and radii when calculating grid sizes (thanks to John Mongan)
+* Fixed problems with FEM-based NPBE, LPBE, and LRPBE calculations
+* Fixed a minor bug in the configure script that prevented MPI libraries from being found when using certain compilers.
+* Updated acinclude.m4, aclocal.m4, config/* for new version (1.9) of automake and compatibility with new MALOC
+* Fixed a bug where reading in a file in PDB format had atom IDs starting  at 1 rather than 0, leading to a segmentation fault.
+* Fixed a bug in mypde.f where double precision values were initialized with single precision number (causing multiplication errors).
+* Fixed a bug in the FEM code. Now calls the npbe solver works properly with FEtk 1.40
+* Modified the FEMParm struct to contain a new variable pkey, which is  required for selecting the correct path in AM_Refine
+
+---------------------
+APBS 0.4.0 (Dec 2005)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* New version of the 'acc' program available.
+* Added additional verbosity to APBS output.
+* Added tools/python/vgrid to the autoconf script. The directory compiles with the rest of the Python utilities and is used for manipulating dx files.
+* Modified the tools/python/noinput.py example to show the ability to get and print energy and force vectors directly into Python arrays.
+* Added dx2uhbd tool to tools/mesh for converting from dx format to UHBD format (Thanks to Robert Konecny)
+* Added ability of tools/manip/inputgen.py to split a single mg-para APBS input file into multiple asynchronous input files.
+* Modified inputgen.py to be more flexible for developers wishing to directly interface with APBS.
+* Added Vclist cell list class to replace internal hash table in Vacc
+* Modified Vacc class to use Vclist, including changes to the Vacc interface (and required changes throughout the code)
+* Consolidated Vpmg_ctor and Vpmg_ctorFocus into Vpmg_ctor
+* Consolidated vpmg.c, vpmg-force.c, vpmg-energy.c, vpmg-setup.c
+* Added autoconf support for compilation on the MinGW32 Windows Environment
+* Added autoconf support (with Python) for Mac OS 10.4 (Tiger)
+* Added the function Vpmg_solveLaplace to solve homogeneous versions of Poisson's equation using Laplacian eigenfunctions.
+* Modified the dielectric smoothing algorithm (srfm smol) to a 9 point method based on Bruccoleri, et al.  J Comput Chem 18 268-276 (1997).  NOTE:  This is a faster and more flexible smoothing method.  However, when combined with the the molecular surface bugfixes listed below, this change has the potential to make the srfm smol method give very different results from what was calculated in APBS 0.3.2.  Users who need backwards compatibility are encouraged to use the spline based smoothing method (srfm spl2) or the molecular surface without smoothing (srfm mol).
+* Added new 'sdens' input keyword to allow user to control the sphere density used in Vacc.  This became necessary due to the Vacc_molAcc bug fix listed below.  Only applies to srfm mol and srfm smol.
+* Made the examples directory documentation much more streamlined.
+* Added tests for examples directory.  Users can now issue a "make test" in the desired directory to compare local results with expected results. Also includes timing results for tests for comparison between installations.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Fixed a bug in Vpmg_qmEnergy to remove a spurious coefficient of z_i^2 from the energy calculation.  This generated incorrect results for multivalent ions (but then again, the validity of the NPBE is questionable for multivalents...)  (Big thanks to Vincent Chu)
+* Fixed a bug in vacc.c where atoms with radii less than 1A were not considered instead of atoms with no radii.
+* Fixed error in tools/mesh/dx2mol.c (Thanks to Fred Damberger)
+* Fixed floating point error which resulted in improper grid spacings for some cases.
+* Fixed a bug in Vacc_molAcc which generates spurious regions of high internal dielectric for molecular surface-based dielectric definitions.  These regions were very small and apparently affected energies by 1-2% (when used with the 'srfm mol'; the 'srfm smol' can potentially give larger deviations).  The new version of the molecular surface is actually faster (requires 50-70% of the time for most cases) but we should all be using the spline surface anyway -- right? (Thanks to John Mongan and Jessica Swanson for finding this bug).
+* Fixed a bug in vpmg.c that caused an assertion error when writing out laplacian maps (Thanks to Vincent Chu).
+* Ensured Vpmg::ccf was always re-initialized (in the case where the Vpmg object is being re-used).
+* Removed a spurious error estimation in finite element calculations.
+* Clarified the role of ccf and other variables in mypde.f and vpmg.c by expanding/revising the inline comments.
+
+---------------------
+APBS 0.3.2 (Nov 2004)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* Updated tutorial with more mg-auto examples
+* Updated apbs.spec file for generating RPMs on more platforms.
+* Added new Python wrapper to tools/python directory showing how to run APBS without PQR and .in inputs.
+* Python wrappers are now configured to compile on more architectures/ from more compilers.
+* Updated tools/conversion/pdb2pqr to a new version (0.1.0) of PDB2PQR, which now can handle nucleic acids, rebuild missing heavy atoms, add hydrogens, and perform some optimization.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* The dimensions of the fine grids in the pka-lig example calculations were increased to give more reliable results (albeit ones which don't agree with the reported UHBD values as well).
+* hz in mgparse.c causes name clash with AIX environmental variable; fixed.
+* Fixed documentation to state that using a kappa map does not ignore ELEC ION statements.
+* Added a stability fix for printing charge densities for LPBE-type calculations.
+* Fixed a bug in NPBE calculations which led to incorrect charge densities and slightly modified total energies.
+* Modified the origin when creating UHBD grids to match standard UHBD format.
+* Fixed VASSERT error caused by rounding error when reading in dx grid files.
+
+---------------------
+APBS 0.3.1 (Apr 2004)
+---------------------
+
+^^^^^^^^^^^^
+New features
+^^^^^^^^^^^^
+
+* New APBS tutorial
+* New :file:`tools/python/vgrid/mergedx.py` script to merge dx files generated from parallel APBS runs back into a single dx file.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Fixed bug in parallel calculations where atoms or points on a border between two processors were not included.  Modified setup algorithm for parallel calculations to allow partitions in order to obtain grid points and spacing from the global grid information.
+* Modified extEnergy function to work with parallel calculations, giving better accuracy.
+
+---------------------
+APBS 0.3.0 (Feb 2004)
+---------------------
+
+^^^^
+News
+^^^^
+
+APBS is now supported by the NIH via NIGMS grant GM69702-01.
+
+^^^^^^^^^^^^^^^^^^^^^^^^^
+Changes that affect users
+^^^^^^^^^^^^^^^^^^^^^^^^^
+
+* New version of the documentation
+* New directory structure in tools/
+* Finished fe-manual mode for ELEC calculations -- this is the adaptive finite element solver
+* Added documetnation for fe-manual
+* New apbs/tools/manip/inputgen.py script to automatically generate input APBS files from PQR data
+* Added new asynchronous mode in mg-para parallel calculations to enable running on-demand and/or limited resources
+* Added new script (tools/manip/async.sh) to convert mg-para calculations in mg-async calculations
+* Added following aliases for some of the more obscure parameters in the input files:
+
+  * chgm 0 ==> chgm spl0
+  * chgm 1 ==> chgm spl2
+  * srfm 0 ==> srfm mol
+  * srfm 1 ==> srfm smol
+  * srfm 2 ==> srfm spl2
+  * bcfl 0 ==> bcfl zero
+  * bcfl 1 ==> bcfl sdh
+  * bcfl 2 ==> bcfl mdh
+  * bcfl 4 ==> bcfl focus
+  * calcenergy 0 ==> calcenergy no
+  * calcenergy 1 ==> calcenergy total
+  * calcenergy 2 ==> calcenergy comps
+  * calcforce 0 ==> calcforce no
+  * calcforce 1 ==> calcforce total
+  * calcforce 2 ==> calcforce comps
+
+* Example input files have been updated to reflect this change. NOTE: the code is backward-compliant; i.e., old input files WILL still work.
+* Added new READ options "PARM" and "MOL PDB", see documentation for more information. These options allow users to use unparameterized PDB files together with a parameter database.
+* Updated the documentation
+* Now include support for chain IDs and other optional fields in PQR/PDB files
+* Added support for parsing PDB files
+* Renamed:
+
+* amber2charmm -> amber2charmm.sh
+* pdb2pqr -> pdb2pqr.awk
+* qcd2pqr -> qcd2pqr.awk
+
+* Added a new Python-based pdb2pqr (tools/conversion/pdb2pqr) script that allows users to choose parameters from different forcefields.
+* Updated Python wrappers (tools/python) and added the python directory to autoconf/automake.
+* Reformatted examples/README.html for readability.
+
+^^^^^^^^^
+Bug fixes
+^^^^^^^^^
+
+* Fixed bug in PQR parsing that can cause PDB/PQR files to be mis-read when they contain residues with numbers in their names (Thanks to Robert Konecny and Joanna Trylska)
+* Fixed bug when writing out number/charge density: unrealistic densities reported inside iVdW surface.
+* Fixed bug in VMD read_dx utility
+* Invalid map IDs now result in an error message instead of a core dump (thanks to Marco Berrera)
+* Modified mechanism for cubic-spline output, fixing a bug associated with zero-radius atoms
+* Fixed omission of srfm in sections of documentation (thanks to Sameer Varma)
+* Made autoconf/automake configure setup more robust on Solaris 8 platforms (thanks to Ben Carrington)
+   
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Changes that affect developers
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+* New docuemtnation setup
+* New tools/ directory structure
+* Changed Vgreen interface and improved efficiency
+* Changed Vopot interface to support multiple grids
+* Added several norm and seminorm functions to Vgrid class
+* Altered --with-blas syntax in configure scripts and removed --disable-blas
+* Documented high-level frontend routines
+* Cool new class and header-file dependency graphs courtesy of Doxygen and Graphviz
+* Added substantial mypde.c-based functionality to Vfetk
+* Moved chgm from PBEparm to MGparm
+* Minor changes to Vfetk: removed genIcos and added genCube
+* FEM solution of RPBE working again (see test/reg-fem) and is probably more up-to-date than test/fem
+* Updated API documentation
+* Changed many NOsh, FEMparm, MGparm variables to enums
+* Changes to Valist and Vatom classes
+* Fixed minor bugs in documentation formatting
+* Made Vopot more robust
+* Created Vparam class for parameter file parsing
+* Added vparam* parameter database flat files to tools/conversion/param
+
+---------------------
+APBS 0.2.6 (Jan 2003)
+---------------------
+
+* Changed license to GPL
+* Made a few routines compliant with ANSI X3.159-1989 by removing snprintf (compliant with ISO/IEC 9899:1999).  This is basically for the sake of OSF support.
+
+---------------------
+APBS 0.2.5 (Nov 2002)
+---------------------
+
+* Improved consistency between energies evaluated with "chgm 0" and "chgm 1"
+* Made charge-field energy evaluation consistent for user-supplied charge maps
+* Added new psize.py script courtesy of Todd Dolinsky.
+* Updated list of APBS-related tools in User Guide.
+* Added RPM capabilities courtesy of Steve Bond.
+* Removed annoying excess verbosity from Vgrid.
+* Updated Blue Horizon compilation instructions (thanks to Robert Konecny and Giri Chukkapalli)
+* Updated autoconf/automake/libtool setup and added --disable-tools option
+
+---------------------
+APBS 0.2.4 (Oct 2002)
+---------------------
+
+* Fixed bug which set one of the  z-boundaries to zero for "bcfl 1".  This can perturb results for systems where the grid boundaries are particularly close to the biomolecule.  While this is an embarassing bug, most systems using settings suggested by the psize script appear largely unaffected (see examples/README.html).  Thanks to Michael Grabe for finding this bug (Michael, you can stop finding bugs now...)
+* Updated VMD scripts to agree with the current OpenDX output format
+* A COMMENT:  As far as I can tell, the current version of OpenDX-formatted output (same as version 0.2.3) is fully compliant with the OpenDX standards (see, for example,  http://opendx.npaci.edu/docs/html/pages/usrgu065.htm#HDRXMPLES).   However, I realize this is different than the format for previous versions and would encourage all users to update their APBS-based applications to accomodate these changes.  The best solution would be for all downstream applications to use the APBS Vgrid class (see http://agave.wustl.edu/apbs/doc/api/html/group__Vgrid.html) to manipulate the data since this class should remain internally consistent between releases.  Finally, I would love to have some OpenDX guru who uses APBS to contact me so I can solidfy the data ouput format of APBS.  I'm about ready to permanently switch to another format if I can't reach a consensus with OpenDX...
+
+---------------------
+APBS 0.2.3 (Oct 2002)
+---------------------
+
+* Fixed bugs in salt-dependent Helmholtz/nonlinear term of PBE affecting both LPBE and NPBE calculations.  While this bug fix only changes most energies by < 2 kJ/mol, it is recommended that all users upgrade.  Many thanks to Michael Grabe for finding and carefully documenting this bug!
+* A parameter (chgm) has been added which controls the charge discretization method used.  Therefore, this version contains substantial changes in both the API and input file syntax.  Specifically:
+    
+    * PBEparm has two new members (chgm, setchgm)
+    * Vpmg_fillco requires another argument
+    * Vpmg\_*Force functions require additional arguments
+    * Input files must now contain the keyword "chgm #" where # is an integer
+    * Please see the documentation for more information.
+    
+* Fixed problems with "slicing" off chunks of the mesh during I/O of focused calculations
+* Updated authors list
+* New CHARMM parameters -- Robert Konecny
+* Created enumerations for common surface and charge discretization methods
+* Added Vmgrid class to support easy manipulation of nested grid data
+* Added more verbosity to error with NPBE forces
+* Added working Python wrappers -- Todd Dolinksy
+* Modified VMD scripts read_dx and loadstuff.vmd
+
+---------------------
+APBS 0.2.2 (Aug 2002)
+---------------------
+
+* There were several other changes along the way... I lost track.
+* Changed coordinate indexing in some energy calculations
+* Updated documentation to reflect recent changes on Blue Horizon
+* Improved speed of problem setup BUT NOW RESTRICT use of input coefficient maps (see documentation)
+* Updated documentation, placing particular emphasis on use of Intel compilers and vendor BLAS on Intel Linux systems
+* Fixed bug for nonpolar force evaluation in Vpmg_dbnpForce
+* Removed MG test scripts; use :file:`bin/*.c` for templates/testing
+* Made main driver code completely memory-leak free (i.e., if you wanted to wrap it and call it repeatedly -- Thanks to Robert Konecny)
+* Fixed main driver code for compatibility with SGI compilers (Thanks to Fabrice Leclerc)
+* Made focused evaluation of forces more sensible.
+* Added 'print force' statement
+* Fixed bug in OpenDX input/output (OpenDX documentation is lousy!)
+
+---------------------
+APBS 0.2.1 (Apr 2002)
+---------------------
+
+This version requires the latest version of MALOC to work properly!
+
+* Syntax changes
+    
+    * The writepot and writeacc keywords have been generalized and new I/O features have been added.  The syntax is now:
+        
+        * write pot dx potential
+        * write smol dx surface
+        * etc.  Please see the User's Manual for more information
+        
+    * The read keywords has been generalized and new I/O features have been added which support the use of pre-calculated coefficient grids, etc.  The correct syntax for reading in a molecule is now "read mol pqr mol.pqr end"; please see the User's Manual for more information.
+    * The "mg" keyword is no longer supported; all input files should use "mg-manual" or one of the other alternatives instead.
+    
+* A change in the behavior of the "calcenergy" keyword; passing an argument of 2 to this keyword now prints out per-atom energies in addition to the energy component information
+* A new option has been added to tools/manip/acc to give per-atom solvent-accessible surface area contributions
+* A new option has been added to tools/manip/coulomb to give per-atom electrostatic energies
+* Added tools/mesh/dxmath for performing arithmetic on grid-based data (i.e., adding potential results from two calculations, etc.)
+* Added tools/mesh/uhbd_asc2bin for converting UHBD-format grid files from ASCII to binary (contributed by Dave Sept)
+* Improvement of VMD visualization scripts (contributed by Dave Sept)
+* The API has changed significantly; please see the Programmer's Manual.
+* Working (but still experimental) Python wrappers for major APBS functions.
+* More flexible installation capabilities (pointed out by Steve Bond)
+* Added ability to use vendor-supplied BLAS
+* Brought up-to-date with new MALOC
+
+---------------------
+APBS 0.2.0 (Mar 2002)
+---------------------
+
+This version is a public (beta) release candidate and includes:
+
+* Slight modification of the user and programmer's guides
+* Scripts for visualization of potential results in VMD (Contributed by Dave Sept)
+* Corrections to some of the example input files
+* A few additional API features
+
+This release requires a new version of MALOC. 
+
+---------------------
+APBS 0.1.8 (Jan 2002)
+---------------------
+
+This version is a public (beta) release candidate and includes the following bug-fixes:
+
+* Added warning to parallel focusing 
+* Added several test cases and validated the current version of the code for all but one (see examples/README.html)
+* Fixed atom partitioning bug and external energy evaluation during focusing
+* Added new program for converting OpenDX format files to MOLMOL (by Jung-Hsin Lin)
+
+You should definitely upgrade, the previous versions may produce unreliable results.
+
+---------------------
+APBS 0.1.7 (Dec 2001)
+---------------------
+
+This version is a public (beta) release candidate and includes the following bug-fixes:
+
+* Fixed I/O for potential in UHBD format (thanks, Richard!)
+* Re-arranged garbage collection routines in driver code
+* Improved FORTRAN/C interfaces
+* Re-configured autoconf/libtool setup for more accurate library version number reporting
+
+---------------------
+APBS 0.1.6 (Nov 2001)
+---------------------
+
+This version is a public (beta) release candidate and includes the following bug-fixes and features:
+
+* Fixed printf formatting in UHBD potential output
+* Added input file support for parallel focusing
+* Fixed small bug in parsing writeacc syntax (thanks, Dave)
+* Added output file support for parallel focusing
+* Changed some documentation
+
+You need to download a new version of MALOC for this release.   
+
+---------------------
+APBS 0.1.5 (Oct 2001)
+---------------------
+
+This version features minor bug fixes and several new features:
+
+* Fixed shift in center of geometry for OpenDX I/O
+* Made energy evaluation more robust when using NPBE
+* Rearrangments of files and modified compilation behavior
+* Input file support for ion species of varying valency and concentration
+* Input file support incorrect nlev/dime combinations; APBS now finds acceptable settings near to the user's requested values
+* "Automatic focusing".  Users now simply specify the physical parameters (temperature, dielectric, etc.), the coarse and fine grid lengths and centers, and APBS calculates the rest
+
+---------------------
+APBS 0.1.4 (Sep 2001)
+---------------------
+
+This version features major bug fixes introduced in the 0.1.3 release:
+
+* Chain ID support has been **removed** from the PDB/PQR parser (if anyone has a nice, flexible PDB parser they'd like to contribute to the code, I'd appreciate it)
+* Configure script has been made compatible with OSF
+* Bug fix in disabling FEtk-specific header files
+
+---------------------
+APBS 0.1.3 (Sep 2001)
+---------------------
+
+This version features a few improvements in scripts, PDB parsing flexibility, and portability, including:
+
+* Dave Sept upgraded the psize and shift scripts to allow more flexibility in PDB formats.
+* Chain ID support has been added to the PDB/PQR parser
+* Removed -g from compiler flags during linking of C and FORTAN under OSF (thanks to Dagmar Floeck and Julie Mitchell for help debugging this problem)
+
+---------------------
+APBS 0.1.2 (Sep 2001)
+---------------------
+
+This version is mainly designed to increase portability by switching to libtool for library creation and linking.
+Of course, it also contains a few bug fixes.
+Highlights include:
+
+* Changes to the User Manual
+* Addition of a Programmer's Manual
+* Various FEtk-related things (no particular impact to the user)
+* Improvements to the test systems
+* Change in the format for printing energies
+* Change in directory structure
+* Fixed centering bug in main driver (only impacted I/o)
+* Fixed error message bug in VPMG class
+* Fixed grid length bug (popped up during sanity checks) in VPMG class
+* Switched to libtool for linking
+* Note that Compaq Tru64 Alpha users may still experience problems while compiling due to some strangess with linking C and FORTRAN objects.
+
+---------------------
+APBS 0.1.1 (Aug 2001)
+---------------------
+
+I am slightly less pleased to announce the first bug-fix for APBS, version 0.1.1.
+This fixes compilation problems that popped up for several folks,
+including:
+
+* Syntax errors with non-GNU compilers
+* Errors in the installation instructions
+* Installation of binary in machine-specific directory
+
+---------------------
+APBS 0.1.0 (Aug 2001)
+---------------------
+
+I am pleased to announce the availability of a pre-beta version of the Adaptive Poisson-Boltzmann Solver (APBS) code to selected research groups.
+APBS is new software designed to solve the Poisson-Boltzmann equation for very large biomolecular systems.
+For more information, please visit the APBS web site at http://mccammon.ucsd.edu/apbs.
+
+This release is designed to allow interested users to get familiar with the code. 
+It is not currently fully functional; it only provides for the sequential multigrid (Cartesian mesh) solution of the linearized and nonlinear Poisson-Boltzmann equation.
+User-friendly parallel support will be incorporated into the next release.
+Other limitations that may impact its immediate usefulness are:
+
+* No finite element support.  This is awaiting the public release of the Holst group's FEtk library.
+* Somewhat inefficient coefficient evaluation (i.e., problem setup).  This should be fixed in the next release or two.
+
+Rather than serving as a production code, this release represents a request for help in breaking the software and finding its deficiencies
+before a public beta.
+
+If you are interested in testing this early release, please go to http://wasabi.ucsd.edu/~nbaker/apbs/download/.
+Since this is not a public release of APBS, you will need to enter the user-name "apbs-beta" and the password "q94p$fa!" for access to this site.
+Once there, please follow the instructions to download and install APBS.
+
+If you are not interested in trying out this early release, but would like to stay informed about subsequent versions of APBS, please consider subscribing to the APBS announcements mailing list by sending the message "subscribe apbs-announce" to majordomo@mccammon.ucsd.edu.
+
+Thank you for your time and interest in the APBS software.
+
diff --new-file -ru apbs-3.0.0/docs/supporting.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/supporting.rst
--- apbs-3.0.0/docs/supporting.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/supporting.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,37 @@
+===============
+Supporting APBS
+===============
+
+--------------------------
+Please register as a user!
+--------------------------
+
+Please help ensure continued support for APBS-PDB2PQR by `registering your use of our software <http://eepurl.com/by4eQr>`_.
+
+-------------------
+Citing our software
+-------------------
+
+If you use APBS in your research, please cite one or more of the following papers:
+
+* Jurrus E, Engel D, Star K, Monson K, Brandi J, Felberg LE, Brookes DH, Wilson L, Chen J, Liles K, Chun M, Li P, Gohara DW, Dolinsky T, Konecny R, Koes DR, Nielsen JE, Head-Gordon T, Geng W, Krasny R, Wei G-W, Holst MJ, McCammon JA, Baker NA. Improvements to the APBS biomolecular solvation software suite. Protein Sci, 27 (1), 112-128, 2018. https://doi.org/10.1002/pro.3280
+* R. Bank and M. Holst, A New Paradigm for Parallel Adaptive Meshing Algorithms. SIAM Review 45, 291-323, 2003. http://epubs.siam.org/doi/abs/10.1137/S003614450342061
+* Baker NA, Sept D, Joseph S, Holst MJ, McCammon JA. Electrostatics of nanosystems: application to microtubules and the ribosome. Proc. Natl. Acad. Sci. USA 98, 10037-10041 2001. http://www.pnas.org/content/98/18/10037
+* M. Holst, Adaptive numerical treatment of elliptic systems on manifolds. Advances in Computational Mathematics 15, 139-191, 2001 http://dx.doi.org/10.1023/A:1014246117321
+* M. Holst and F. Saied, Numerical solution of the nonlinear Poisson-Boltzmann equation: Developing more robust and efficient methods. J. Comput. Chem. 16, 337-364, 1995.
+* M. Holst and F. Saied, Multigrid solution of the Poisson-Boltzmann equation. J. Comput. Chem. 14, 105-113, 1993.
+
+------------------------
+Supporting organizations
+------------------------
+
+The PDB2PQR authors would like to give special thanks to the supporting organizations behind the APBS and PDB2PQR software:
+
+`National Institutes of Health <http://www.nih.gov>`_
+  Primary source of funding for APBS via grant GM069702
+`National Biomedical Computation Resource <http://nbcr.ucsd.edu/>`_
+  Deployment and computational resources support from 2002 to 2020
+`National Partnership for Advanced Computational Infrastructure <http://www.hipersoft.rice.edu/npaci/>`_
+  Funding and computational resources
+`Washington University in St. Louis <http://biochem.wustl.edu>`_
+  Start-up funding
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/examples/binding-energies.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/binding-energies.rst
--- apbs-3.0.0/docs/using/examples/binding-energies.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/binding-energies.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,73 @@
+================
+Binding energies
+================
+
+In general, implicit solvent models are used to calculation the contribution of solvation to binding free energies.
+Additional binding free energy contributions (molecular mechanics energies, entropic changes, etc.) must be calculated separately and are not discussed in this tutorial.
+
+-----------------
+Free energy cycle
+-----------------
+
+Our framework for calculating solvation contributions to binding free energies is shown in the figure below:
+
+.. image:: /media/apbs_bind_eng.png
+
+This binding free energy cycle illustrates binding in terms of transfer free energies from a homogeneous dielectric environment (where interactions are described by Coulomb's law) to an inhomogeneous dielectric environment with differing internal (green) and external (cyan) dielectric constants.
+The binding (dissociation) free energy is depicted in Step 3.
+The binding free energy is given by
+
+.. math::
+
+   \Delta_b G = -\Delta_3 G =\Delta_4 G-\Delta_1 G-\Delta_2 G.
+
+The following sections provide more detail on calculating individual terms of this equation.
+
+---------------------------
+Binding energy calculations
+---------------------------
+
+The most general method for calculating binding free energies divides the binding process up into solvation :math:`\Delta\Delta_s G` and Coulombic :math:`\Delta\Delta_c G` components:
+
+.. math::
+
+   \Delta\Delta_b G = \Delta\Delta_s G + \Delta\Delta_c G.
+
+As mentioned above, this framework neglects the numerous other mechanical and entropic components actually involved in the binding process.
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Solvation contribution to binding
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+If we're just interested in calculating the solvation contributions to binding (steps 4 and 2 in the binding free energy cycle), then we simply need to follow the instructions from the :doc:`solvation-energies` section for the complex and isolated components.
+The solvation energy contribution to the binding is then given by
+
+.. math::
+
+   \Delta\Delta_s G = \Delta_4 G - \Delta_2 G = \Delta_s G_{cmpx} - \Delta_s G_{mol1} - \Delta_s G_{mol2}
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Coulombic contribution to binding
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+To complete the binding free energy cycle, we need to add intermolecular Coulombic contributions to the solvation energy change upon binding to get the total electrostatic/solvent contribution to the binding free energy.
+In particular, we're interested in the change in Coulombic electrostatic energy upon binding, as given by
+
+.. math::
+
+   \Delta\Delta_c G = -\Delta_1 G =  \Delta_c G_{cmpx} - \Delta_c G_{mol1} - \Delta_c G_{mol2}
+
+Each of the  quantities in this equation is the sum of pairwise Coulombic interactions between all atoms in the molecule (or complex) for a particular uniform dielectric.
+In order to combine these Coulombic binding energies with the solvation energies described above, we need to make sure consistent dielectric constants are used.
+In particular, Coulombic interactions should be calculated using the same uniform dielectric constant as the reference state of the solvation energy above.
+For example, if solvation energies are calculated for transferring a protein from a homogeneous medium with uniform dielectric of  to an inhomogeneous medium with internal dielectric :math:`\epsilon_u` and external dielectric :math:`\epsilon_v`, then Coulombic energies should be calculated using a dielectric of :math:`\epsilon_u`.
+The APBS accessory program :file:`tools/manip/coulomb` was created to help with the calculation of these analytic individual per-molecule Coulombic energies.
+Given a PQR file as input, the :file:`tools/manip/coulomb` program calculates Coulombic energies for a vacuum dielectric (e.g., a uniform dielectric of 1).
+If the reference dielectric is :math:`\epsilon_u`, then all energies returned by :file:`tools/manip/coulomb` need to be divided by :math:`\epsilon_u`.
+
+
+^^^^^^^^^^^^^^
+Other examples
+^^^^^^^^^^^^^^
+
+Several binding energy examples are distributed in the :file:`examples` directory with APBS.
diff --new-file -ru apbs-3.0.0/docs/using/examples/salt-linkage.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/salt-linkage.rst
--- apbs-3.0.0/docs/using/examples/salt-linkage.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/salt-linkage.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,197 @@
+=====================================
+Protein-RNA binding linked equilibria
+=====================================
+
+Before reading this example, please review :ref:`errors` for relevant caveats.
+
+------------
+Introduction
+------------
+
+This example is taken from `a paper by García-García and Draper <http://dx.doi.org/10.1016/S0022-2836\(03\)00615-6>`_.
+Special thanks to `David Draper <http://pmcb.jhu.edu/inactive%20pages/draper-profile.html>`_ who provided the PDB files.
+This example explores the electrostatic contributions to the binding interaction between a 22-residue α-helical peptide of protein λ with the "box B" RNA hairpin structure.
+In particular, this example uses nonlinear Poisson-Boltzmann equation calculations to look at the non-specific screening effects of monovalent salt on the peptide-RNA complex.
+García-García and Draper isolated the contribution of KCl concentration to the binding of the folded peptide with the folded RNA hairpin and determined a fairly linear relationship between the binding free energy :math:`\Delta_{b} G` and the logarithm of the KCl concentration which yields 
+
+.. math::
+
+   \frac{\partial\Delta_{b}G}{\partial\log_{10}[{\rm KCl}]} = {6.0 \pm 0.2 ~ } {\rm kcal/mol}
+
+This slope can be used to determine the number  of KCl ions linked to the binding equilibrium through the expression
+
+.. math::
+
+   n = -\frac{\partial \Delta_b G}{{RT} \partial \log_{10}[{\rm KCl}]} = {-4.52 \pm 0.08~ } {\rm kcal/mol}
+
+where :math:`RT` is the thermal energy, to determine :math:`n = -4.4 \pm 0.2` for the RNA-peptide binding equilibrium.
+:math:`RT` is equal to :math:`kT * N_a` where :math:`kT` is the product of the Boltzmann constant :math:`k` (equal to the gas constant :math:`R/N_a`), and the temperature :math:`T` (at STP it is 298.15 K) and :math:`N_a` is Avogadro's constant.
+Thus :math:`RT` is equal to
+
+.. math::
+   
+   R ~ ({\mathrm{Joules}}/{\mathrm{Kelvin}}) * T~({\mathrm {Kelvin}}) * N_a~({\mathrm {mols}}) * {1~\mathrm{kJ}}/{1000~\mathrm J}
+
+which roughly equals
+
+.. math::
+
+   (1.38 \times 10^{-23}) \times (6.022 \times 10^{23}) \times (298.15)/(1000)
+
+which is approximately 2.479 kJ/mol or 0.593 kcal/mol.
+
+García-García and Draper used nonlinear Poisson-Boltzmann equation calculations to estimate the electrostatic contributions to the binding free energy as a function of the monovalent salt concentration.
+As :ref:`discussed elsewhere <errors>`, the Poisson-Boltzmann equation is only able to describe non-specific interactions of ions with solutes, including the effects of ion size and charge but otherwise ignoring the important differences between ionic species.
+Interestingly (and perhaps surprisingly), they find excellent agreement between the experimental binding energy dependence on KCl and their Poisson-Boltzmann calculations with equivalent concentrations of monovalent ions.
+This agreement strongly suggests that the binding of RNA and the peptide is primarily determined by electrostatic interactions.
+It also suggests that the primary interaction of the KCl with this system is through non-specific screening interactions.
+The García-García and Draper nonlinear Poisson-Boltzmann equation calculations gave:
+
+.. math::
+
+   \frac{\partial\Delta_{b}G}{\partial\log_{10}[{\rm KCl}]} = {5.9 \pm 0.2 ~ } {\rm kcal/mol}
+ 
+and :math:`n = -4.3 \pm 0.2` for KCl linkage to the RNA-peptide binding equilibrium.
+
+-------------------
+APBS implementation
+-------------------
+
+This example follows the calculations from their paper.
+
+The PQR files are included in the :file:`examples/protein-rna/` directory of the apbs-pdb2pqr repository.
+This directory also includes a :file:`template.txt` file that serves as a template for the APBS input files with ``IONSTR`` as a placeholder for the ionic strength.
+This file is also shown here:
+
+.. code-block:: bash
+
+   read  
+     mol pqr model_outNB.pqr
+     mol pqr model_outNpep.pqr
+     mol pqr model_outBoxB19.pqr
+   end
+   elec name complex
+     mg-auto
+     dime 65 97 129
+     cglen 45.3322 54.9498 82.2633
+     fglen 45.3322 52.3234 68.3902
+     cgcent mol 1
+     fgcent mol 1
+     mol 1
+     npbe
+     bcfl sdh
+     pdie 4.0
+     ion charge 1 conc IONSTR radius 2.0
+     ion charge -1 conc IONSTR radius 2.0
+     sdie 80.0
+     srfm mol
+     chgm spl2
+     sdens 10.00
+     srad 1.40
+     swin 0.30
+     temp 298.15
+     calcenergy total
+     calcforce no
+     write qdens dx qdens-complex-IONSTR
+     write ndens dx ndens-complex-IONSTR
+   end
+   elec name peptide
+     mg-auto
+     dime 65 97 129
+     cglen 45.3322 54.9498 82.2633
+     fglen 45.3322 52.3234 68.3902
+     cgcent mol 1
+     fgcent mol 1
+     mol 2
+     npbe
+     bcfl sdh
+     pdie 4.0
+     sdie 80.0 
+     ion charge 1 conc IONSTR radius 2.0 
+     ion charge -1 conc IONSTR radius 2.0 
+     srfm mol 
+     chgm spl2 
+     sdens 10.00 
+     srad 1.40 
+     swin 0.30 
+     temp 298.15 
+     calcenergy total 
+     calcforce no 
+     write qdens dx qdens-peptide-IONSTR 
+     write ndens dx ndens-peptide-IONSTR 
+   end 
+   elec name rna 
+     mg-auto 
+     dime 65 97 129 
+     cglen 45.3322 54.9498 82.2633 
+     fglen 45.3322 52.3234 68.3902 
+     cgcent mol 1 
+     fgcent mol 1 
+     mol 3 
+     npbe 
+     bcfl sdh 
+     pdie 4.0 
+     sdie 80.0 
+     ion charge 1 conc IONSTR radius 2.0 
+     ion charge -1 conc IONSTR radius 2.0 
+     srfm mol 
+     chgm spl2 
+     sdens 10.00 
+     srad 1.40 
+     swin 0.30 
+     temp 298.15 
+     calcenergy total 
+     calcforce no 
+     write qdens dx qdens-rna-IONSTR 
+     write ndens dx ndens-rna-IONSTR 
+   end
+   print elecEnergy complex - peptide - rna end 
+   quit
+
+As used in the template file, the READ command, our calculation will have three parts:  
+
+* Calculation of the total electrostatic energy (including self-interaction energies) of the peptide-RNA complex. This calculation is named complex in the input file.  
+* Calculation of the total electrostatic energy (including self-interaction energies) of the peptide. This calculation is named peptide in the input file.  
+* Calculation of the total electrostatic energy (including self-interaction energies) of the RNA. This calculation is named rna in the input file.  
+
+The calculations themselves will not be overly demanding, since we will use relatively coarse grids.
+This grid coarseness has a significant impact on the absolute electrostatic binding energy we obtain from this particular calculation: the calculated energy isn't converged with respect to grid spacing.
+However, the overall slope of binding energy with respect to monovalent ion concentration is rather insensitive with respect to the grid spacing, allowing us to save computational time and effort during the calculations.
+The calculation will conclude with a :doc:`/using/input/print` command which will combine the total energies from the three parts to obtain our approximate absolute electrostatic binding energy for the complex at 0.225 M monovalent salt concentration.
+It is very important to note that this absolute energy no meaning in isolation for several reasons:  
+
+* It is not converged with respect to grid spacing  
+* It does not contain other very important non-electrostatic aspects of the binding energy which are important for the measured affinity  
+
+``IONSTR`` is a placeholder that represents the ion concentration for the APBS calculation.
+
+You will also have to create a :file:`dxmath.txt` file which contains the following.
+
+.. code-block:: bash
+
+   qdens-complex-IONSTR.dx
+   qdens-pep-IONSTR.dx -
+   qdens-rna-IONSTR.dx -
+   qdens-diff-IONSTR.dx = 
+
+:ref:`dxmath` will subtract the dx maps of the individual peptide and RNA from the overall structure (and prints to the :file:`qdens-diff-IONSTR.dx` file.
+
+----------------------
+Automation with Python
+----------------------
+
+We have provided Python scripts :file:`apbs_{win, unix}_dx.py` that run the necessary APBS calculations and analyze the results.
+When you run these programs, you need to be in the same directory as ``template.txt`` and ``dxmath.txt``.
+This script will create all the input files for the tests as well as run apbs and dxmath on your :file:`template.txt` and :file:`dxmath.txt` files.
+Most of the syntax fills in the ion concentrations in the template file, and the call commands actually run the calculations on each input.
+
+-------------
+Visualization
+-------------
+
+The :file:`qdens-diff-0.225.dx` file produced by the script can be viewed in PyMOL or another visualization program to give something similar to the following imaged which show the difference in charge density before and after binding.
+
+.. image:: /media/rna-qdens-pymol.jpg
+
+.. image:: /media/rna-qdens-vmd.jpg
+
diff --new-file -ru apbs-3.0.0/docs/using/examples/solvation-energies.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/solvation-energies.rst
--- apbs-3.0.0/docs/using/examples/solvation-energies.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/solvation-energies.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,174 @@
+==================
+Solvation energies
+==================
+
+Solvation energies are usually decomposed into a free energy cycle as shown in the free energy cycle below.
+Note that such solvation energies often performed on fixed conformations; as such, they are more correctly called "potentials of mean force".
+More details on using APBS for the polar and nonpolar portions of such a cycle are given in the following sections.
+
+.. figure:: /media/apbs_sol_eng.png
+
+Our model solvation free energy cycle illustrating several steps:
+
+1. The solvation energy to be calculated.
+2. Charging of the solute in solution (e.g., inhomogeneous dielectric, ions present).
+3. Introduction of attractive solute-solvent dispersive interaction interactions (e.g., an integral of Weeks-Chandler-Andersen interactions over the solvent-accessible volume).
+4. Introduction of repulsive solute-solvent interaction (e.g., cavity formation).
+5. Basically a null step although it could be used to offset unwanted energies added in Steps 3 and 4 above.
+6. Charging of the solute in a vacuum or homogeneous dielectric environment in the absence of mobile ions.
+
+---------------
+Polar solvation
+---------------
+
+The full free energy cycle is usually decomposed into polar and nonpolar parts.
+The polar portion is usually represented by the charging energies in Steps 2 and 6:
+
+.. math::
+
+   \Delta_p G = \Delta_2 G - \Delta_6 G 
+
+Energies returned from APBS electrostatics calculations are charging free energies.
+Therefore, to calculate the polar contribution to the solvation free energy, we simply need to setup two calculations corresponding to Steps 2 and 6 in the free energy cycle.
+Note that the electrostatic charging free energies returned by APBS include self-interaction terms.
+These are the energies of a charge distribution interacting with itself.
+Such self-interaction energies are typically very large and extremely sensitive to the problem discretization (grid spacing, location, etc.).
+Therefore, it is very important that the two calculations in Steps 2 and 6 are performed with identical grid spacings, lengths, and centers, in order to ensure appropriate matching (or "cancellation") of self-energy terms.
+
+^^^^^^^^
+Born ion
+^^^^^^^^
+
+One of the canonical examples for polar solvation is the Born ion: a nonpolarizable sphere with a single charge at its center surrounded by an aqueous medium.
+Consider the transfer of a non-polarizable ion between two dielectrics.
+In the initial state, the dielectric coefficient inside and outside the ion is :math:`\epsilon\_{\mathrm {in}}`, and in the final state, the dielectric coefficient inside the ion is :math:`\epsilon\_{\mathrm {in}}` and the dielectric coefficient outside the ion is :math:`\epsilon\_{\mathrm {in}}`.
+In the absence of external ions, the polar solvation energy of this transfer for this system is given by:
+
+.. math::
+   
+   \Delta\_p G\_{\mathrm{Born}}= \frac{q^2}{8\pi\epsilon\_0 a}\left (\frac{1}{\epsilon\_{\mathrm {out}}}-\frac{1}{\epsilon\_{\mathrm {in}}}\right)
+
+where q is the ion charge, a is the ion radius, and the two ε variables denote the two dielectric coefficients.
+This model assumes zero ionic strength.
+
+Note that, in the case of transferring an ion from vacuum, where :math:`\epsilon\_{\mathrm {in}} = 1`, the expression becomes
+
+.. math::
+
+   \Delta\_p G\_{\mathrm{Born}}= \frac{q^2}{8\pi\epsilon\_0 a}\left (\frac{1}{\epsilon\_{\mathrm {out}}}-1\right)
+
+We can setup a PQR file for the Born ion for use with APBS with the contents:
+
+.. code-block:: bash
+
+   REMARK  This is an ion with a 3 A radius and a +1 e charge
+   ATOM      1   I  ION     1 0.000   0.000   0.000  1.00 3.00
+
+We're interested in performing two APBS calculations for the charging free energies in homogeneous and heterogeneous dielectric coefficients.
+We'll assume the internal dielectric coefficient is 1 (e.g., a vacuum) and the external dielectric coefficient is 78.54 (e.g., water).
+For these settings, the polar Born ion solvation energy expression has the form
+
+.. math::
+
+   \Delta_p G_{\mathrm{Born}} = -691.85 \biggl( \frac{z^2}{R} \biggr) \mathrm {kJ \, A/mol}
+
+where z is the ion charge in electrons and R is the ion size in Å.
+
+This solvation energy calculation can be setup in APBS with the following input file:
+
+.. code-block:: bash
+
+   # READ IN MOLECULES
+   read
+     mol pqr born.pqr
+   end
+   elec name solv # Electrostatics calculation on the solvated state
+     mg-manual # Specify the mode for APBS to run
+     dime 97 97 97 # The grid dimensions
+     nlev 4 # Multigrid level parameter
+     grid 0.33 0.33 0.33 # Grid spacing
+     gcent mol 1 # Center the grid on molecule 1
+     mol 1 # Perform the calculation on molecule 1
+     lpbe # Solve the linearized Poisson-Boltzmann equation
+     bcfl mdh # Use all multipole moments when calculating the potential
+     pdie 1.0 # Solute dielectric
+     sdie 78.54 # Solvent dielectric
+     chgm spl2 # Spline-based discretization of the delta functions
+     srfm mol # Molecular surface definition
+     srad 1.4 # Solvent probe radius (for molecular surface)
+     swin 0.3 # Solvent surface spline window (not used here)
+     sdens 10.0 # Sphere density for accessibility object
+     temp 298.15 # Temperature
+     calcenergy total # Calculate energies
+     calcforce no # Do not calculate forces
+   end
+   elec name ref # Calculate potential for reference (vacuum) state
+     mg-manual
+     dime 97 97 97
+     nlev 4
+     grid 0.33 0.33 0.33
+     gcent mol 1
+     mol 1
+     lpbe
+     bcfl mdh
+     pdie 1.0
+     sdie 1.0
+     chgm spl2
+     srfm mol
+     srad 1.4
+     swin 0.3
+     sdens 10.0
+     temp 298.15
+     calcenergy total
+     calcforce no
+   end
+   # Calculate solvation energy
+   print energy solv - ref end
+   quit
+
+Running this example with a recent version of APBS should give an answer of -229.59 kJ/mol which is in good agreement with the -230.62 kJ/mol predicted by the analytic formula above.
+
+.. note::
+
+   The Born example above can be easily generalized to other polar solvation energy calculations.
+   For example, ions could be added to the solv ELEC, dielectric constants could be modified, surface definitions could be changed (in both ELEC sections!), or more complicated molecules could be examined.
+   Many of the examples included with APBS also demonstrate solvation energy calculations.
+
+.. note::
+
+   As molecules get larger, it is important to examine the sensitivity of the calculated polar solvation energies with respect to grid spacings and dimensions.
+
+----------------
+Apolar solvation
+----------------
+
+Referring back to the solvation free energy cycle, the nonpolar solvation free energy is usually represented by the energy changes in Steps 3 through 5:
+
+.. math::
+
+   \Delta_n G = (\Delta_3 G - \Delta_5 G) + \Delta_4 G
+
+
+where Step 4 represents the energy of creating a cavity in solution and Steps 3-5 is the energy associated with dispersive interactions between the solute and solvent.
+There are many possible choices for modeling this nonpolar solvation process.
+APBS implements a relatively general model described by `Wagoner and Baker (2006) <http://www.pnas.org/content/103/22/8331>`_ and references therein.
+The implementation and invocation of this model is described in more in the :ref:`apolar` documentation.
+Our basic model for the cavity creation term (Step 4) is motivated by scaled particle theory and has the form
+
+.. math::
+
+   \Delta_4 G = pV + \gamma A
+
+where :math:`p` is the solvent pressure (:ref:`press` keyword), :math:`V` is the solute volume, :math:`\gamma` is the solvent surface tension (:ref:`gamma` keyword), and :math:`A` is the solute surface area.
+
+Our basic model for the dispersion terms (Steps 3 and 5) follow a Weeks-Chandler-Anderson framework as proposed by `Levy et al (2002) <http://onlinelibrary.wiley.com/doi/10.1002/jcc.10045/abstract>`_:
+
+.. math::
+
+   \Delta_3 G - \Delta_5 G = \overset{-} \rho \int_\omega u^{(att)}(y)\theta(y)dy
+
+where :math:`\overline{\rho}` is the bulk solvent density (:ref:`bconc` keyword), :math:`\Omega` is the problem domain, :math:`u^{\mathrm{(att)}}(y)` is the attractive dispersion interaction between the solute and the solvent at point y with dispersive Lennard-Jones parameters specified in APBS parameter files, and :math:`\theta(y)` describes the solvent accessibility of point y.
+
+The ability to independently adjust :ref:`press`, :ref:`gamma`, and :ref:`bconc` means that the general nonpolar solvation model presented above can be easily adapted to other popular nonpolar solvation models.
+For example, setting :ref:`press` and :ref:`bconc` to zero yields a typical solvent-accessible surface area model.
+
diff --new-file -ru apbs-3.0.0/docs/using/examples/visualization-pymol.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/visualization-pymol.rst
--- apbs-3.0.0/docs/using/examples/visualization-pymol.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/visualization-pymol.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,71 @@
+========================
+VIsualization with PyMOL
+========================
+
+The `PyMOL <http://www.pymol.org/>`_ molecular graphics software package can both run APBS and visualize resulting electrostatic potentials. 
+Below are instructions for performing a basic demonstration of how to go from a PDB entry to a plot of structure and potential in PyMOL using APBS.
+
+------------------------
+Run the APBS calculation
+------------------------
+
+* Load your PQR file you created into PyMOL (:guilabel:`File → Open...`) and choose your favorite graphical representation of the molecular structure.
+
+* Go to :guilabel:`Plugin → APBS Tools...` to open the APBS calculation plugin.
+
+* Under the :guilabel:`Main` tab of the PyMOL APBS Tools window, select :guilabel:`Use another PQR` and either browse to (via the :guilabel:`Choose Externally Generated PQR` button) or input the path to your PQR file. This step is necessary to ensure you use the radii and charges assigned by PDB2PQR.
+
+* Under the :guilabel:`APBS Location` tab of the PyMOL APBS Tools window, either browse to (via the APBS binary location: button) or input the path to your local APBS binary. It is not necessary to provide a path to the APBS :file:`psize.py` binary for most biomolecules.
+
+* Under the :guilabel:`Temporary File Locations` tab of the PyMOL APBS Tools window, customize the locations of the various temporary files created during the run. This can be useful if you want to save the generated files for later use.
+
+* Under the :guilabel:`Configuration` tab of the PyMOL APBS Tools window, press :guilabel:`Set grid` to set the grid spacings. The default values are usually sufficient for all but the most highly charged biomolecules.
+
+* Under the :guilabel:`Configuration` tab of the PyMOL APBS Tools window, customize the remaining parameters; the defaults are usually OK.
+
+  .. note::
+
+     0.150 M concentrations for the +1 and −1 ion species are often useful to ensure that electrostatic properties are not overly exaggerated.
+
+* Under the :guilabel:`Configuration` tab of the PyMOL APBS Tools window, press the Run :guilabel:`APBS button` to start the APBS calculation. Depending on the speed of your computer, this could take a few minutes. The :guilabel:`Run APBS` button will become unselected when the calculation is finished.
+
+---------------------
+Visualize the results
+---------------------
+
+Before proceeding, you must load the electrostatic potential data into PyMOL. Under the :guilabel:`Visualization` tab of the PyMOL APBS Tools window, press the :guilabel:`Update` button.
+
+^^^^^^^^^^^^^^^^^^^^^^^^^
+Electrostatic isocontours
+^^^^^^^^^^^^^^^^^^^^^^^^^
+
+PyMOL makes this step very easy: adjust the positive and negative "Contour" fields to the desired values (usually ±1, ±5, or ±10 kT/e)
+and press the :guilabel:`Positive Isosurface`, :guilabel:`Negative Isosurface`, and :guilabel:`Show buttons`.
+
+At this point, you probably have a figure that looks something like the image below.
+
+.. figure:: /media/fas2-iso-pymol.png
+
+   ±1 kT/e electrostatic potential isocontours of FAS2 in PyMOL
+
+If the colors are not as you expect, you can change the colors of the objects iso_neg and iso_pos in the main menu.
+By convention (for electrostatics in chemistry), red is negative (think oxygen atoms in carboxyl groups) and blue positive (think nitrogen atoms in amines).
+
+^^^^^^^^^^^^^^^^^^
+Surface potentials
+^^^^^^^^^^^^^^^^^^
+
+If you haven't already, hide the isocontours by pressing the :guilabel:`Positive Isosurface`, :guilabel:`Negative Isosurface`, and :guilabel:`Hide` buttons.
+The surface potential is also straightforward to visualize.
+Set the "Low" and "High"values to the desired values (usually ±1, ±5, or ±10 kT/e) at which the surface colors are clamped at red (-) or blue (+).
+Check the "Solvent accessible surface" and "Color by potential on sol. acc. surf." buttons to plot the potential on the solvent-accessible (probe-inflated or Lee-Richards) surface.
+Press the :guilabel:`Molecular Surface` :guilabel:`Show` button to load the surface potential.
+
+.. figure:: /media/fas2-surf-pymol.png
+
+   ±5 kT/e electrostatic potential of FAS2 in PyMOL plotted on the solvent-accessible surface.
+
+The solvent-accessible surface tends to reveal more global features of the surface potential.
+Tighter surfaces (e.g., van der Waals and molecular or Connolly surfaces) provide more information about the shape of the biomolecule but otherwise tend to simply map atomic surface charges onto the biomolecular surface.
+PyMOL can simultaneously provide geometric information (from the molecular surface) and useful electrostatic potential information (from the solvent-accessible surface).
+To visualize the molecule in this way, simply uncheck the "Solvent accessible surface"box and check the "Color by potential on sol. acc. surf." box on the :guilabel:`Visualization` tab.
diff --new-file -ru apbs-3.0.0/docs/using/examples/visualization-unitymol.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/visualization-unitymol.rst
--- apbs-3.0.0/docs/using/examples/visualization-unitymol.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/examples/visualization-unitymol.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,90 @@
+=============================
+Virtual reality with UnityMol
+=============================
+
+Molecular visualization software packages provide the ability for users to explore the 3D representations molecular structures and properties.
+Typical user interaction is limited to panning, zooming, and rotating the molecule using a mouse and keyboard while viewing on a standard computing monitor.
+These techniques support a pseudo 3-dimensional view of a molecule to understand its structure but lack the true depth perception people are used to with stereoscopic vision in the real world.
+
+New advancements in virtual reality (VR) technologies has resulted in lower costs and systems that are easier to use to many consumers.
+Compared to past VR hardware, these new systems have several key advancements including lower latency, higher frame rates, and improved resolution.
+Additionally, these systems are equipped with better optics and motion tracking and a more robust software ecosystem.
+
+We are extending the visualization capabilities for APBS through the incorporation of a VR device with molecular rendering software.
+We are currently experimenting with the HTC Vive, which allows a person to walk around a 15' by 15' physical space while wearing a head mounted display.
+Precise head movements are matched in virtual reality with no noticeable latency.
+Additionally, the HTC Vive controllers are motion tracked with millimeter precision and provide a valuable method for interacting with virtual objects.
+We have enabled VR using the HTC Vive in the `UnityMol molecular visualization software <http://www.baaden.ibpc.fr/umol/>`_ (created by Baaden, et al.) and incorporated electrostatic surface data (see figure below and a `YouTube video <https://www.youtube.com/watch?v=Xxb3W8jnnp8&t=21s>`_).
+New viewing capabilities now include walking around, grabbing (using the motion controllers), and scaling (gestures) of molecules.
+We are actively working with Dr. Baaden and his group to determine the best use of interaction techniques for users to interact with molecular models through his software.
+
+.. figure:: /media/1fas_VR.png
+
+   View of UnityMol form the monitor as it is being used in VR with controllers.
+
+For future work, we would like to further extend UnityMol in the HTC Vive to include natural user interactions for viewing multiple molecules, vary the electrostatic results from APBS, and change molecular attributes.
+We envision this tool will also enable virtual collaboration for participant in different locations.
+Each participant will be able to view, gesture and interact with the same data in the same VR space.
+Finally, we would like to explore the use of VR for research related to docking of different molecules.
+
+--------------------
+Getting the software
+--------------------
+
+#. Download :file:`UnityMol-APBS-PS.zip` from `SourceForge <https://sourceforge.net/projects/unitymol-apbs/>`_.
+#. Unzip :file:`UnityMol-APBS-PS.zip`; the resulting folder contains :file:`UnityMol-APBS.zip` and :file:`APBS-PDB2PQR.zip`.
+#. :file:`Unzip UnityMol-APBS.zip`; the resulting folder contains :program:`UnityMol.exe`.
+#. Optionally unzip :file:`APBS-PDB2PQR.zip` into :file:`C:\` to generate three directories :file:`apbs` (containing :program:`apbs` executable), :file:`pdb2pqr` (containing :program:`pdb2pqr` executable), and :file:`OutputFiles`. Alternatively, these executables can be downloaded and installed separately.
+
+------------------
+Using the software
+------------------
+
+Launch UnityMol.exe :program:`UnityMol.exe` to start the VR visualization.
+The user interface is illustrated below.
+
+.. figure:: /media/UI.png
+
+   UnityMol-APBS user interface for PDB2PQR and APBS.
+   (A) The main UnityMolAPBS menu; orange box highlights the two buttons used to open the APBS and PDB2PQR tools.
+   (B) The main menu for interactions with APBS and PDB2PQR.
+   Blue boxes show the buttons to launch PDB2PQR and APBS executables, green boxes show the location of the options used for producing the image in below, and the purple boxes highlight the two input fields required to use custom force fields and custom residue names.
+
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+Acetylcholinesterase example
+^^^^^^^^^^^^^^^^^^^^^^^^^^^^
+
+The example illustrates the VR vizualization of the electrostatic surface potentials and electrostatic field lines of *Torpedo californica* acetylcholinesterase (AChE).
+
+#. Download :file:`5ei5.pdb` from https://www.rcsb.org/structure/5EI5
+#. Open UnityMol-APBS (VR or desktop)
+#. Load :file:`5ei5.pdb` file
+#. Open the :guilabel:`PDB2PQR panel`
+#. Choose :guilabel:`options` (examples below) or run the default (default force field is AMBER)
+
+   * :guilabel:`apbs-input` generates input file necessary for APBS
+   * :guilabel:`drop-water` removes explicit water molecules from structure
+   * :guilabel:`summary` writes atom names and sequence to a new file
+   * :guilabel:`salt` writes salt bridge donor and acceptor atoms to a new file
+   * :guilabel:`hbond` writes hydrogen bonding donors and acceptors to a new file. The resulting :file:`.hbond` and :file:`.salt` files can be loaded as a new selection in UnityMol-APBS
+
+#. Select :guilabel:`all(5EI5)` and run PDB2PQR
+#. :file:`5ei5X.pqr` is written to a file and is immediately loaded for the user.
+#. Select :file:`all(5EI5)` and run APBS
+#. :file:`5ei5X.dx` is created and loaded into the selection :guilabel:`all(5EI5X)` automatically
+#. Select the :guilabel:`+` button on the :guilabel:`all(5EI5X)` selection tab, then select :guilabel:`surface`
+#. Select :guilabel:`color by charge`
+#. Select the :guilabel:`+` button on the :guilabel:`all(5EI5X)` selection tab, then select :guilabel:`field lines`
+
+As a result of these steps, you should see a figure similar to the following.
+
+.. figure:: /media/AChE.png
+
+   Electrostatic surface potential and field lines of Torpedo californica AChE (PDB ID 5EI5) with bound alkylene-linked bis-tacrine.
+   (A) Electrostatic field lines and protein secondary structure shown with alpha helices (yellow), beta sheets (blue), and random coils (white).
+   Residues Tyr70, Trp84, Trp279, and Phe330 are shown interacting with alkylene-linked bis-tacrine via hydrogen bonding and π-π stacking interactions.
+   The red oval highlights the potential gradient.
+   (B) AChE surface model with field lines and mapped electrostatic surface potentials shown with neutral, negative, and positive charges in white, red, and blue, respectively.
+   Field lines are calculated from a gradient (value of 0.2) and depicted with the starting points in red and the ending points in blue.
+   The orientation is the same in Figures A and B, where the alkylene-linked bis-tacrine can be seen occupying the catalytic gorge.
+   The white circle highlights the potential gradient exiting the catalytic gorge.
diff --new-file -ru apbs-3.0.0/docs/using/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/index.rst
--- apbs-3.0.0/docs/using/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,162 @@
+==========
+Using APBS
+==========
+
+.. _PDB ID: https://www.rcsb.org/pages/help/advancedsearch/pdbIDs
+
+.. note::
+
+   *Before you begin!* PDB2PQR funding is dependent on your help for continued development and support. Please `register <http://eepurl.com/by4eQr>`_ before using the software so we can accurately report the number of users to our funding agencies.
+
+APBS is often used together with the `PDB2PQR software <https://github.com/Electrostatics/pdb2pqr>`_; e.g., ,in the following type of workflow
+
+#. Start with a `PDB ID`_ or locally generated PDB file (see :doc:`/formats/pdb`).
+#. Assign titration states and parameters with :program:`pdb2pqr` to convert the protein and ligands to PQR format (see :doc:`/formats/pqr`).
+#. Perform electrostatics calculations with :program:`apbs` (can be done from within the `PDB2PQR web server <web-server>`_).
+#. Visualize results from within PDB2PQR web server or with :ref:`other-software`.
+
+--------------
+Web server use
+--------------
+
+Most users will use PDB2PQR through `the web server <http://server.poissonboltzmann.org/>`_ (after `registering <http://eepurl.com/by4eQr>`_, of course).
+However, it is also possible to install local versions of PDB2PQR and run these through the command line.
+
+----------------
+Command line use
+----------------
+
+.. code-block:: bash
+
+   apbs [options] input-file
+
+where the list of ``[options]`` can be obtained by running APBS with the ``--help`` option.
+The input file format is described below.
+
+-----------------
+Input file syntax
+-----------------
+
+APBS input files are loosely-formatted files which contain information about the input, parameters, and output for each calculation.
+
+These files are whitespace- or linefeed-delimited.
+Comments can be added to the input files via the ``#`` character; all text between the ``#`` and the end of the line is not parsed by APBS.
+If pathnames used in the input file contain spaces, then the entire pathname must be enclosed in quotes.
+For example, if you wanted to refer to the file :file:`foo` which resides in a directory with spaces in its name, then you should refer to :file:`foo` as :file:`"/path with spaces/foo"`.
+Specific examples of APBS input are provided in :ref:`examples`.
+
+APBS input files contain three basic sections which can be repeated any number of times:
+
+:ref:`read`
+  section for specifying input
+:ref:`elec`
+  section for specifying polar solvation (electrostatics) calculation parameters
+:ref:`apolar`
+  section for specifying apolar solvation calculation parameters
+:ref:`print`
+  section for specifying summary output
+
+The APBS input file is constructed from these sections in the following format:
+
+.. code-block:: bash
+   
+   READ
+   ...
+   END
+   
+   ELEC
+   ...
+   END
+   
+   APOLAR
+   ...
+   END
+   
+   PRINT
+   ...
+   END
+   
+   QUIT
+
+These sections can occur in any order and can be repeated any number of times.
+However, the sections are inter-dependent.
+For example, PRINT requires ELEC and/or APOLAR while ELEC requires one or more READ sections.
+Sections can also be repeated; several READ statements may be used to load molecules and multiple ELEC or APOLAR sections would specify various electrostatics calculations on one or more molecules.
+
+Each section has the following syntax:
+
+.. code-block:: bash
+   
+   SECTION [name <id>]
+
+where the optional ``name`` argument allows the user to include a string to identify the section.
+In the absence of this argument, sections are assigned numerical IDs.
+
+.. toctree::
+   :maxdepth: 1
+   :caption: Input file sections
+
+   input/read
+   input/elec/index
+   input/apolar/index
+   input/print
+
+.. _examples:
+
+--------
+Examples
+--------
+
+.. _PDB2PQR:  https://github.com/Electrostatics/pdb2pqr
+.. _APBS-PDB2PQR web interface:  http://server.poissonboltzmann.org/
+
+APBS examples start with a PQR file (e.g., generated by PDB2PQR_).
+Some of these examples can be performed through the `APBS-PDB2PQR web interface`_ but most require a command-line APBS program.
+
+.. toctree::
+   :maxdepth: 2
+
+   examples/solvation-energies
+   examples/binding-energies
+   examples/salt-linkage
+   examples/visualization-pymol
+   examples/visualization-unitymol
+
+-------------------
+Tools and utilities
+-------------------
+
+APBS is distributed with utilities designed to simplify typical tasks associated with electrostatics calculations.
+
+.. toctree::
+   :maxdepth: 1
+
+   tools
+
+.. _other-software:
+
+--------------
+Other software
+--------------
+
+A variety of other software can be used to visualize and process the results of PDB2PQR and APBS calculations.
+
+^^^^^^^^^^^^^^^^^^^^^^
+Visualization software
+^^^^^^^^^^^^^^^^^^^^^^
+
+Examples of visualization software that work with output from PDB2PQR and APBS:
+
+* `PyMOL <https://pymol.org/>`_
+* `VMD <https://www.ks.uiuc.edu/Research/vmd/>`_
+* `Chimera <https://www.cgl.ucsf.edu/chimera/>`_
+* `PMV <http://mgltools.scripps.edu/packages/pmv>`_
+
+^^^^^^^^^^^^^^^^^^^^
+Dynamics simulations
+^^^^^^^^^^^^^^^^^^^^
+
+As an example of PDB2PQR and APBS integration with molecular mechanics sofware, the `iAPBS <https://mccammon.ucsd.edu/iapbs/>`_ library was developed to facilitate the integration of APBS with other molecular simulation packages.
+This library has enabled the integration of APBS with several molecular dynamics packages, including `NAMD <http://www.ks.uiuc.edu/Research/namd/>`_, `AMBER <http://ambermd.org/>`_, and `CHARMM <https://www.charmm.org/charmm/>`_.
+
+APBS is also used directly by Brownian dynamics software such as `SDA <https://mcm.h-its.org/sda/>`_ and `BrownDye <http://browndye.ucsd.edu/>`_.
diff --new-file -ru apbs-3.0.0/docs/using/input/apolar/dpos.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/dpos.rst
--- apbs-3.0.0/docs/using/input/apolar/dpos.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/dpos.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+.. _dpos:
+
+dpos
+====
+
+This is the displacement used for finite-difference-based calculations of surface area derivatives.
+I know, this is a terrible way to calculate surface area derivatives -- we're working on replacing it with an analytic version.
+In the meantime, please use this parameter with caution.
+If anyone has code for a better method, please share!
+
+The syntax is:
+
+.. code-block:: bash
+
+   dpos {displacement}
+
+where ``displacement`` is a floating point number indicating the finite difference displacement for force (surface area derivative) calculations in units of Å.
+
+.. warning::
+   This parameter is very dependent on ``sdens`` (see :doc:`../generic/sdens`); e.g., smaller values of ``dpos`` require larger values of ``sdens``.
diff --new-file -ru apbs-3.0.0/docs/using/input/apolar/gamma.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/gamma.rst
--- apbs-3.0.0/docs/using/input/apolar/gamma.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/gamma.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _gamma:
+
+gamma
+=====
+
+This keyword specifies the surface tension coefficient for apolar solvation models.
+
+.. code-block:: bash
+
+   gamma { value }
+
+where ``value`` is a floating point number designating the surface tension in units of kJ mol\ :superscript:`-1` Å\ :superscript:`-2`.
+This term can be set to zero to eliminate the :abbr:`SASA (solvent-accessible surface area)` contributions to the apolar solvation calculations.
+
+.. todo::
+
+   Resolve unit confusion with geometric flow :ref:`gamma` keyword.
+   https://github.com/Electrostatics/apbs-pdb2pqr/issues/490
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/apolar/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/index.rst
--- apbs-3.0.0/docs/using/input/apolar/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,69 @@
+.. _apolar:
+
+APOLAR input file section
+=========================
+
+This section is the main component for apolar solvation calculations in APBS runs.
+There may be several APOLAR sections, operating on different molecules or using different parameters for multiple runs on the same molecule.
+The syntax of this section is:
+
+.. code-block:: bash
+
+   APOLAR [name id]
+     <keywords...>
+   END
+
+The first (optional) argument is:
+
+.. code-block:: bash
+
+   name <id>
+
+where ``id`` is a unique string which can be assigned to the calculation to facilitate later operations (particularly in the :doc:`../print` statements).
+The ``keywords...`` describing the parameters of the apolar calculation are discussed in more detail below:
+
+.. toctree::
+   :maxdepth: 2
+   :caption: APOLAR keywords:
+
+   ../generic/bconc
+   ../generic/calcenergy
+   ../generic/calcforce
+   dpos
+   gamma
+   ../generic/grid
+   ../generic/mol
+   press
+   ../generic/sdens
+   ../generic/srad
+   srfm
+   ../generic/swin
+   ../generic/temp
+
+APBS apolar calculations follow the very generic framework described in  Wagoner JA, Baker NA. Assessing implicit models for nonpolar mean solvation forces: the importance of dispersion and volume terms. Proc Natl Acad Sci USA, 103, 8331-8336, 2006. doi:`10.1073/pnas.0600118103 <http://dx.doi.org/10.1073/pnas.0600118103>`_.
+`
+Nonpolar solvation potentials of mean force (energies) are calculated according to:
+
+.. math::
+
+   {W}^{(\mathrm{np})}(x) = \gamma A(x) + pV(x) + \bar \rho \sum^N_{i=1} \int _{\Omega} u_i^{(\mathrm{att})} (x_i, y) \theta (x,y) \, \mathrm{d}y 
+
+and mean nonpolar solvation forces are calculated according to:
+
+.. math::
+
+   \mathbf{F}_i^{(\mathrm{np})}(x) = -\gamma \frac{\partial A (x)}{\partial x_i} - p \int _{\Gamma _i (x)} \frac{y-x_i}{\lVert y - x_i \rVert} \, \mathrm{d}y - \bar \rho \sum _{i=1}^N \int _{\Omega} \frac{\partial u_i^{(\mathrm{att})}(x_i,y)}{\partial x_i} \theta (x,y) \, \mathrm{d}y 
+
+In these equations, :math:`\gamma` is the repulsive (hard sphere) solvent surface tension (see :ref:`gamma`), *A* is the conformation-dependent solute surface area (see :ref:`srad` and :ref:`apolarsrfm` keywords), *p* is the repulsive (hard sphere) solvent pressure (see :ref:`press` keyword), *V* is the conformation-dependent solute volume (see :ref:`srad` and :ref:`apolarsrfm` keywords), :math:`\rho` (see :ref:`bconc` keywords) is the bulk solvent density, and the integral involves the attractive portion (defined in a Weeks-Chandler-Andersen sense) of the Lennard-Jones interactions between the solute and the solvent integrated over the region of the problem domain outside the solute volume *V*.
+Lennard-Jones parameters are taken from APBS parameter files as read in through an APBS input file READ statement (see :ref:`read`).
+
+.. note::
+
+   The above expressions can easily be reduced to simpler apolar solvation formalisms by setting one or more of the coefficients to zero through the keywords.
+
+.. warning::
+
+   All APOLAR calculations require a parameter file which contains Lennard-Jones radius and well-depth parameters for all the atoms in the solute PDB.
+   This parameter file must also contain radius and well-depth parameters for water (specifically: residue "WAT" and atom "OW").
+   Complete parameter files for protein and nucleic acid parameters are not currently available; we prefer geometric flow calculations (coupled polar and apolar components) rather than this model.
+   
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/apolar/press.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/press.rst
--- apbs-3.0.0/docs/using/input/apolar/press.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/press.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,19 @@
+.. _press:
+
+press
+=====
+
+This term specifies the solvent pressure in kJ mol\ :superscript:`-1` Å\ :superscript:`-3`.
+This coefficient multiplies the volume term of the apolar model and can be set to zero to eliminate volume contributions to the apolar solvation calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   press {value}
+
+where ``value`` is the floating point value of the pressure coefficient in kJ mol\ :superscript:`-1` Å\ :superscript:`-3`.
+
+.. todo::
+
+   Resolve unit confusion with geometric flow ``press`` keyword and the apolar :ref:`press` keyword.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/499
diff --new-file -ru apbs-3.0.0/docs/using/input/apolar/srfm.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/srfm.rst
--- apbs-3.0.0/docs/using/input/apolar/srfm.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/apolar/srfm.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,19 @@
+.. _apolarsrfm:
+
+srfm (apolar)
+=============
+
+This keyword specifies the model used to construct the solvent-related surface and volume.
+The syntax is:
+
+.. code-block:: bash
+
+   srfm {flag}
+
+where ``flag`` is a string that specifies the model used for surface and volume.
+Acceptable values of flag include:
+
+``sacc``
+  Solvent-accessible (also called "probe-inflated") surface and volume.
+
+  
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/3dmap.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/3dmap.rst
--- apbs-3.0.0/docs/using/input/elec/3dmap.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/3dmap.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+.. _3dmap:
+
+3dmap
+=====
+
+Specify the name of the file into which the potential surface on the coarse-grain molecule surface will be printed.
+
+.. code-block:: bash
+   
+   3dmap {filename}
+
+where ``filename`` is a string for the name of the file where a 3D grid will be printed out.
+
+.. todo::
+   
+   The PB-(S)AM ``3dmap`` keyword should not exist; please replace it ASAP with the :ref:`write` command.
+   Documented this todo as https://github.com/Electrostatics/apbs-pdb2pqr/issues/482
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/akeyPRE.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/akeyPRE.rst
--- apbs-3.0.0/docs/using/input/elec/akeyPRE.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/akeyPRE.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,19 @@
+.. _akeyPRE:
+
+akeyPRE
+=======
+
+Specifies how the initial finite element mesh should be constructed (from refinement of a very coarse 8-tetrahedron mesh prior to the solve-estimate-refine iteration in :ref:`femanual` finite element calculations.
+The syntax is:
+
+.. code-block:: bash
+
+   akeyPRE {key}
+
+where ``key`` is a text string that specifies the method used to guide initial refinement and takes one of the values:
+
+``unif``
+  Uniform refinement
+``geom``
+  Geometry-based refinement at molecular surfaces and charges
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/akeySOLVE.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/akeySOLVE.rst
--- apbs-3.0.0/docs/using/input/elec/akeySOLVE.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/akeySOLVE.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+.. _akeySOLVE:
+
+akeySOLVE
+=========
+
+Specifies how the the finite element mesh should be adaptively subdivided during the solve-estimate-refine iterations of a :ref:`femanual` finite element calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   akeySOLVE {key}
+
+where ``key`` is a text string that specifies the method used to guide adaptive refinement:
+
+``resi``
+  Residual-based a *posteriori* refinement.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/async.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/async.rst
--- apbs-3.0.0/docs/using/input/elec/async.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/async.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+.. _async:
+
+async
+=====
+
+An optional keyword to perform an asynchronous parallel focusing Poisson-Boltzmann equation.
+The syntax is
+
+.. code-block:: bash
+
+   async {rank}
+
+where ``rank`` is the integer ID of the particular processor to masquerade as.
+Processor IDs range from *0* to *N-1*, where *N* is the total number of processors in the run (see :ref:`pdime`).
+Processor IDs are related to their position in the overall grid by :math:`p = nx ny k + nx j + i`  where :math:`nx` is the number of processors in the x-direction, :math:`ny` is the number of processors in the y-direction, :math:`nz` is the number of processors in the z-direction, :math:`i` is the index of the processor in the x-direction, :math:`j` is the index of the processor in the y-direction, :math:`k` is the index of the processor in the z-direction, and :math:`p` is the overall rank of the processor.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/bcfl.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/bcfl.rst
--- apbs-3.0.0/docs/using/input/elec/bcfl.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/bcfl.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,39 @@
+.. _bcfl:
+
+bcfl
+====
+
+Specifies the type of boundary conditions used to solve the Poisson-Boltzmann equation.
+The syntax is:
+
+.. code-block:: bash
+   
+   bcfl {flag}
+
+where ``flag`` is a text string that identifies the type of conditions to be used.
+
+``zero``
+  "Zero" boundary condition. Dirichlet conditions where the potential at the boundary is set to zero.
+  This condition is not commonly used and can result in large errors if used inappropriately.
+``sdh``
+  "Single Debye-Hückel" boundary condition.
+  Dirichlet condition where the potential at the boundary is set to the values prescribed by a Debye-Hückel model for a single sphere with a point charge, dipole, and quadrupole.
+  The sphere radius in this model is set to the radius of the biomolecule and the sphere charge, dipole, and quadrupole are set to the total moments of the protein.
+  This condition works best when the boundary is sufficiently far from the biomolecule.
+``mdh``
+  "Multiple Debye-Hückel" boundary condition.
+  Dirichlet condition where the potential at the boundary is set to the values prescribed by a Debye-Hückel model for a multiple, non-interacting spheres with a point charges.
+  The radii of the non-interacting spheres are set to the atomic radii of and the sphere charges are set to the atomic charges.
+  This condition works better than sdh for closer boundaries but can be very slow for large biomolecules.<br />
+``focus``
+  "Focusing" boundary condition.
+  Dirichlet condition where the potential at the boundary is set to the values computed by the previous (usually lower-resolution) PB calculation.
+  This is **only** used in sequential focusing performed manually in :ref:`mgmanual` calculations.
+  All of the boundary points should lie within the domain of the previous calculation for best accuracy; if any boundary points lie outside, their values are computed using single Debye-Hückel boundary conditions (see above).
+``map``
+  Specifying map allows a previously calculated potential map to be used in a new focusing calculation.
+  A typical scenario is using the same coarse grid for multiple focusing calculations.
+  A potential map can be written once from a coarse grid calculation, then used in subsequent runs to bypass the need to recalculate the coarse grid.
+  See the READ keyword pot (see :ref:`read`) and the attached example files for its use.
+
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/cgcent.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/cgcent.rst
--- apbs-3.0.0/docs/using/input/elec/cgcent.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/cgcent.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,23 @@
+.. _cgcent:
+
+cgcent
+======
+
+This keyword controls electrostatic energy output from a Poisson-Boltzmann calculation
+The syntax is:
+
+.. code-block:: bash
+
+   cgcent { mol id | xcent ycent zcent }
+
+The arguments for this keyword are **either**
+
+``mol id``
+  Center the grid on molecule with integer ID ``id``; as assigned in the ``READ`` section with a ``READ mol`` command (see :ref:`read`)
+
+**or**
+
+``xcent ycent zcent``
+  Center the grid on the (floating point) coordinates (in Å) at which the grid is centered.
+  Based on the PDB coordinate frame.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/cglen.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/cglen.rst
--- apbs-3.0.0/docs/using/input/elec/cglen.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/cglen.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+.. _cglen:
+
+cglen
+=====
+
+Specify the length of the coarse grid (in a focusing calculation) for an automatic multigrid (:ref:`mgauto`, :ref:`mgpara`) Poisson-Boltzmann calculation.
+This may be different in each direction.
+
+.. code-block:: bash
+
+   cglen {xlen ylen zlen}
+
+This is the starting mesh, so it should be large enough to complete enclose the biomolecule and ensure that the chosen boundary condition (see :ref:`bcfl`) is appropriate.
+
+``xlen ylen zlen``
+  Grid lengths (floating point numbers) in the x-, y-, and z-directions in Å.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/chgm.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/chgm.rst
--- apbs-3.0.0/docs/using/input/elec/chgm.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/chgm.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,27 @@
+.. _chgm:
+
+chgm
+====
+
+Specify the method by which the biomolecular point charges (i.e., Dirac delta functions) by which charges are mapped to the grid for a multigrid (:ref:`mgmanual`, :ref:`mgauto`, :ref:`mgpara`) Poisson-Boltzmann calculation.
+As we are attempting to model delta functions, the support (domain) of these discretized charge distributions is always strongly dependent on the grid spacing.
+The syntax is:
+
+.. code-block:: bash
+
+   chgm {flag}
+
+``flag`` is a text string that specifies the type of discretization:
+
+``spl0``
+  Traditional trilinear interpolation (linear splines).
+  The charge is mapped onto the nearest-neighbor grid points.
+  Resulting potentials are very sensitive to grid spacing, length, and position.
+``spl2``
+  Cubic B-spline discretization.
+  The charge is mapped onto the nearest- and next-nearest-neighbor grid points.
+  Resulting potentials are somewhat less sensitive (than ``spl0``) to grid spacing, length, and position.
+``spl4``
+  Quintic B-spline discretization.
+  Similar to ``spl2``, except the charge/multipole is additionally mapped to include next-next-nearest neighbors (125 grid points receive charge density).
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/diff.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/diff.rst
--- apbs-3.0.0/docs/using/input/elec/diff.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/diff.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+.. _diff:
+
+diff
+====
+
+Specify the diffusion coefficients for each molecule in the system for a PB-(S)AM Brownian dynamics calculation.
+
+.. code-block:: bash
+
+   diff {type} {dTrans} {dRot}
+
+``type``
+  a string indicating the molecule dynamics type
+  
+  ``stat``
+    Stationary.
+
+  ``rot``
+    Object is fixed but rotates
+
+  ``move``
+    Object moves and rotates.
+
+``dTrans``
+  Translational diffusion coefficient in units of Å\ :sup:`2` ps\ :sup:`-1`.
+  Used only with the ``move`` keyword.
+
+``dRot``
+  Rotational diffusion coefficient.
+  Used with the ``move`` and ``rot`` keywords.
+
+.. todo::
+   
+   What are the units for ``dRot``?
+   Documented as https://github.com/Electrostatics/apbs-pdb2pqr/issues/486
+
+.. note::
+
+   The order of these keywords is expected to be identical to the order of the molecules in the READ section.
+
+.. todo::
+   
+   Add a ``mol id`` flag rather than have an implicit ordering of the ``diff`` keywords.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/487
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/dime.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/dime.rst
--- apbs-3.0.0/docs/using/input/elec/dime.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/dime.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,25 @@
+.. _dime:
+
+dime
+====
+
+Specifies the number of grid points per processor for grid-based discretization.
+The syntax is:
+
+.. code-block:: bash
+   
+   dime {nx ny nz}
+
+For :ref:`mgmanual` calculations, the arguments are dependent on the choice of :ref:`nlev` by the formula: :math:`n = c 2^{l + 1} + 1` where *n* is the dime argument, *c* is a non-zero integer, *l* is the :ref:`nlev` value.
+The most common values for grid dimensions are 65, 97, 129, and 161 (they can be different in each direction); these are all compatible with a :ref:`nlev` value of 4.
+If you happen to pick a "bad" value for the dimensions (i.e., mismatch with :ref:`nlev`), the APBS code will adjust the specified :ref:`dime` downwards to more appropriate values.
+This means that "bad" values will typically result in lower resolution/accuracy calculations!
+The arguments for this keyword are:
+
+``nx ny nz``
+  The (integer) number of grid points in the x-, y-, and z-directions, respectively.
+
+.. note::
+   dime should be interpreted as the number of grid points per processor for all calculations, including :ref:`mgpara`.
+   This interpretation helps manage the amount of memory per-processor - generally the limiting resource for most calculations.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/domainLength.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/domainLength.rst
--- apbs-3.0.0/docs/using/input/elec/domainLength.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/domainLength.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+.. _domainLength:
+
+domainLength
+============
+
+Specify the rectangular finite element mesh domain lengths for :ref:`femanual` finite element calculations.
+This length may be different in each direction.
+If the :ref:`usemesh` keyword is included, then this command is ignored.
+The syntax is:
+
+.. code-block:: bash
+
+   domainLength {xlen ylen zlen}
+
+where the parameters ``xlen ylen zlen`` are floating point numbers that specify the mesh lengths in the x-, y-, and z-directions (respectively) in units of Å.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/dx.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/dx.rst
--- apbs-3.0.0/docs/using/input/elec/dx.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/dx.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+.. _dx:
+
+dx
+==
+
+Specify the name of the file into which the potential will be printed.
+
+.. code-block:: bash
+   
+   dx {filename}
+
+where ``filename`` is a string for the name of the file where an OpenDX file will be printed out.
+
+.. todo::
+   
+   The PB-(S)AM ``dx`` keyword should not exist; please replace it ASAP with the :doc:`write` command.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/488
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/ekey.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ekey.rst
--- apbs-3.0.0/docs/using/input/elec/ekey.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ekey.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+.. _ekey:
+
+ekey
+====
+
+Specify the method used to determine the error tolerance in the solve-estimate-refine iterations of the finite element solver (:ref:`femanual`).
+The syntax is:
+
+.. code-block:: bash
+
+   ekey { flag }
+
+where ``flag`` is a text string that determines the method for error calculation.
+
+``simp``
+  Per-simplex error limit
+``global``
+  Global (whole domain) error limit
+``frac``
+  Fraction of simplices you'd like to see refined at each iteration
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/etol.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/etol.rst
--- apbs-3.0.0/docs/using/input/elec/etol.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/etol.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+.. _etol:
+
+etol
+====
+
+Specifies the tolerance for iterations of the partial differntial equation solvers:
+The syntax is:
+
+.. code-block:: bash
+   
+   etol { tol }
+
+where ``tol`` is the (floating point) numerical value for the error tolerance.
+
+For finite difference solvers, this keyword is optional and is intended for :ref:`mgmanual`, :ref:`mgauto`, and :ref:`mgpara` calculation types.
+
+For finite element solvers, this keyword specifies the tolerance for error-based adaptive refinement during the solve-estimate-refine iterations of the finite element solver (:ref:`femanual`), where ``tol`` is the (floating point) numerical value for the error tolerance.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/exp.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/exp.rst
--- apbs-3.0.0/docs/using/input/elec/exp.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/exp.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,21 @@
+.. _exp:
+
+exp
+===
+
+This keyword can be used to load in the expansion matrices from files.
+They will have been previously generated, and will be named :file:`mol{m}.{H, F}.[s].exp` (see :ref:`pbamauto` for more information).
+The syntax is:
+
+.. code-block:: bash
+   
+   exp {prefix}
+
+where ``prefix`` is the filename prefix :file:`mol{m}sph`.
+The *H* or *F* and :file:`{s}.bin` will be appended during the program run.
+
+.. todo::
+
+   It would be better to generalize the :ref:`read` section of the input file rather than use the ``exp`` command.
+   This command also needs to be cleaned up -- it's too fragile.
+   Documented at https://github.com/Electrostatics/apbs-pdb2pqr/issues/489
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/fe-manual.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fe-manual.rst
--- apbs-3.0.0/docs/using/input/elec/fe-manual.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fe-manual.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,59 @@
+.. _femanual:
+
+fe-manual
+=========
+
+Manually-configured adaptive finite element Poisson-Boltzmann calculations.
+
+This is a single-point PBE calculation performed by our adaptive finite element PBE solver.
+It requires that APBS be linked to the Michael Holst group `FEtk finite element library <http://www.fetk.org>`_ during compilation.
+The finite element solver uses a "solve-estimate-refine" cycle.
+Specifically, starting from an initial mesh, it performs the following iteration:
+
+#. solve the problem with the current mesh
+#. estimate the error in the solution
+#. adaptively refine the mesh to reduce the error
+
+This iteration is repeated until a global error tolerance is reached.
+
+Keywords for this calculation type include:
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC fe-manual keywords:
+
+   akeyPRE
+   akeySOLVE
+   bcfl
+   ../generic/calcenergy
+   ../generic/calcforce
+   chgm
+   domainLength
+   ekey
+   etol
+   ion
+   lpbe
+   lrpbe
+   maxsolve
+   maxvert
+   ../generic/mol
+   npbe
+   nrpbe
+   pdie
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   srfm
+   ../generic/swin
+   targetNum
+   targetRes
+   ../generic/temp
+   usemesh
+   write
+
+
+.. note::
+
+   The finite element methods are currently most useful for a select set of problems which can benefit from adaptive refinement of the solution.
+   Furthermore, this implementation is experimental.
+   In general, the sequential and parallel focusing multigrid methods offer the most efficient solution of the PBE for most systems.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/fgcent.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fgcent.rst
--- apbs-3.0.0/docs/using/input/elec/fgcent.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fgcent.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,24 @@
+.. _fgcent:
+
+fgcent
+======
+
+Specify the center of the fine grid (in a focusing calculation) based on a molecule's center or absolute coordinates for :ref:`mgpara` and :ref:`mgauto` multigrid calculations.
+The syntax is:
+
+.. code-block
+   
+   fgcent { mol id | xcent ycent zcent }
+
+where a user can specify **either**
+
+``mol {id}``
+  Center the grid on molecule with integer ID id; as assigned in the READ section (see :ref:`read`) of the input file.
+  Molecule IDs are assigned in the order they are read, starting at 1.
+
+**or** the user can specify
+
+``xcent ycent zcent``
+  Center the grids on the coordinates (floating point numbers in Å) at which the grid is centered.
+  Based on the input molecule PDB coordinate frame.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/fglen.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fglen.rst
--- apbs-3.0.0/docs/using/input/elec/fglen.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/fglen.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _fglen:
+
+fglen
+=====
+
+Specifies the fine mesh domain lengths in a multigrid focusing calculation (:ref:`mgpara` or :ref:`mgauto`); this may be different in each direction.
+The syntax is:
+
+.. code-block:: bash
+
+   fglen {xlen ylen zlen}
+
+This should enclose the region of interest in the molecule.
+The arguments to this command are:
+
+``xlen ylen zlen``
+  Grid lengths (floating point numbers) in the x-, y-, and z-directions in Å.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/gamma-geoflow.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gamma-geoflow.rst
--- apbs-3.0.0/docs/using/input/elec/gamma-geoflow.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gamma-geoflow.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+gamma
+=====
+
+This keyword specifies the surface tension coefficient for apolar solvation models.
+
+.. code-block:: bash
+
+   gamma { value }
+
+where ``value`` is a floating point number designating the surface tension in units of kcal mol\ :superscript:`-1` Å\ :superscript:`-2`.
+This term can be set to zero to eliminate the :abbr:`SASA (solvent-accessible surface area)` contributions to the apolar solvation calculations.
+
+.. warning::
+
+   *Either* this documentation is incorrect *or* the implementation needs to be changed to use kJ mol\ :superscript:`-1` Å\ :superscript:`-2` instead of kcal.
+
+.. todo::
+
+   Resolve unit confusion with geometric flow :ref:`gamma` keyword.
+   https://github.com/Electrostatics/apbs-pdb2pqr/issues/490
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/gcent.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gcent.rst
--- apbs-3.0.0/docs/using/input/elec/gcent.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gcent.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,24 @@
+.. _gcent:
+
+gcent
+======
+
+Specify the center of the grid based on a molecule's center or absolute coordinates :ref:`mgmanual` multigrid calculations.
+The syntax is:
+
+.. code-block:: bash
+   
+   fgcent { mol id | xcent ycent zcent }
+
+where a user can specify **either**
+
+``mol {id}``
+  Center the grid on molecule with integer ID id; as assigned in the READ section (see :ref:`read`) of the input file.
+  Molecule IDs are assigned in the order they are read, starting at 1.
+
+**or** the user can specify
+
+``xcent ycent zcent``
+  Center the grids on the coordinates (floating point numbers in Å) at which the grid is centered.
+  Based on the input molecule PDB coordinate frame.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/geoflow-auto.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/geoflow-auto.rst
--- apbs-3.0.0/docs/using/input/elec/geoflow-auto.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/geoflow-auto.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,52 @@
+.. _geoflowauto:
+
+geoflow-auto
+============
+
+To increase the accuracy of our implicit solvent modeling, we have implemented a differential geometry based geometric flow
+solvation model `(Thomas, 2013) <https://www.ncbi.nlm.nih.gov/pubmed/23212974>`_.
+In this model, polar and nonpolar solvation free energies are coupled and the solvent-solute boundary is determined in a self-consistent manner.
+Relevant references are provided in :doc:`Recommended reading </reading>`.
+This section provides a brief overview of the method.
+
+The solutions for the electrostatic potential :math:`\phi` and the characteristic function :math:`S` (related to the solvent density) are obtained by minimizing a free energy functional that includes both polar and nonpolar solvation energy terms.
+Minimization of the functional with respect to :math:`\phi` gives the Poisson-Boltzmann equation with a dielectric coefficient :math:`\epsilon` has the solute value :math:`\epsilon_m` where :math:`S = 1` and the solvent value :math:`\epsilon_s` where :math:`S = 0`.
+Minimization of the free energy functional with respect to :math:`S` gives
+
+.. math::
+
+   -\nabla\cdot\left(\gamma\frac{\nabla S}{\parallel\nabla S\parallel}\right)+p-\rho_0U^{att}+\rho_m\phi - \frac{1}{2}\epsilon_m\mid\nabla\phi\mid^2+\frac{1}{2}\epsilon_s\mid\nabla\phi\mid^2=0 
+
+where :math:`\gamma` is the microscopic surface tension, :math:`p` is the hydrostatic pressure, and :math:`U^{att}` is the attractive portion of the van der Waals dispersion interaction between the solute and the solvent.
+
+Keywords for this calculation type include:
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC geoflow-auto keywords:
+
+   bcfl
+   ../generic/bconc
+   etol
+   gamma-geoflow
+   lpbe
+   ../generic/mol
+   pdie
+   press-geoflow
+   sdie
+   vdwdisp
+
+.. warning::
+
+   Although the ``ion`` and ``lpbe`` keywords will be accepted in the geoflow-auto calculation, the treatment of salt is not currently implemented in APBS geometric flow.
+
+.. todo::
+   
+   Add LPBE/NPBE support to geometric flow or remove the ``ion`` and ``lpbe`` keywords.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/491
+
+.. todo::
+   
+   If there's only one mode, then we can change the keyword from ``geoflow-auto`` to just ``geoflow``.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/492
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/glen.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/glen.rst
--- apbs-3.0.0/docs/using/input/elec/glen.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/glen.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _glen:
+
+glen
+====
+
+Specify the mesh domain lengths for multigrid :ref:`mgmanual` calculations.
+These lengths may be different in each direction.
+The syntax is:
+
+.. code-block:: bash
+   
+   glen {xlen ylen zlen}
+
+where ```xlen ylen zlen`` are the (floating point) grid lengths in the x-, y-, and z-directions (respectively) in Å.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/grid2d.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/grid2d.rst
--- apbs-3.0.0/docs/using/input/elec/grid2d.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/grid2d.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,29 @@
+.. _grid2d:
+
+grid2d
+======
+
+Specify the filename and location of a 2D cross sectional potential to be written to.
+
+.. code-block:: bash
+
+   grid2d {filename} {axis} {axis_value}
+
+``filename``
+  String for the name of the 2D grid to be printed out
+
+``axis``
+  String of either x, y, or z, for which cartesian axis the grid will be computed along
+
+``axis_value``
+  A floating point number of the position along <code>axis</code> that will be used.
+
+.. note::
+
+   Multiple 2D files can be printed out with 1 PB-AM run. Just specify them with more grid2d flags.
+
+.. todo::
+   
+   The PB-(S)AM ``grid2d`` keyword should not exist; please replace it ASAP with the :ref:`write` command.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/493
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/gridpts.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gridpts.rst
--- apbs-3.0.0/docs/using/input/elec/gridpts.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/gridpts.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _gridpts:
+
+gridpts
+=======
+
+Specify the number of gridpoints in each cartesian dimension.
+
+.. code-block:: bash
+   
+   gridpts {pts}
+
+where ``pts`` is a integer number indicating the number of grid points.
+
+.. todo::
+   
+   The PB-(S)AM ``gridpts`` keyword should not exist; it's duplicative of the existing :ref:`dime` keyword!
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/494
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/imat.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/imat.rst
--- apbs-3.0.0/docs/using/input/elec/imat.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/imat.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+.. _imat:
+
+imat
+====
+
+This keyword can be used to load in the surface integral matrices previously generated by PB-SAM named as :file:`mol{m}sph{s}.bin` for molecule ID *s* and coarse-grained sphere *s* (see :ref:`pbamauto` for more information).
+The syntax is:
+
+.. code-block:: bash
+   
+   imat {prefix}
+
+where ``prefix`` is the filename prefix :file:`mol{m}sph`.
+The :file:`{s}.bin` will be appended during the program run.
+
+.. todo::
+
+   It would be better to generalize the :ref:`read` section of the input file rather than use the ``imat`` command.
+   This command also needs to be cleaned up -- it's too fragile.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/495
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/index.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/index.rst
--- apbs-3.0.0/docs/using/input/elec/index.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/index.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,66 @@
+.. _elec:
+
+ELEC input file section
+=======================
+
+The ELEC block of an APBS input file is used for polar solvation (electrostatics) calculations and has the following syntax:
+
+.. code-block:: bash
+   
+   ELEC [ name {id} ]
+        {type}
+        {keywords...}
+   END
+
+The optional ``id`` variable is a simple string that allows ELEC statements to be named.
+Since numerous ELEC blocks may appear in an APBS input file, it can be difficult to keep track of them all.
+It is possible to assign an optional name (string) to each ELEC block to simplify the organizational process.
+
+The ``type`` command defines the types of ELEC calculation to be performed and includes:
+
+* Finite difference multigrid calculations with `PMG <http://www.fetk.org>`_.
+
+  * :ref:`mgauto`
+  * :ref:`mgpara`
+  * :ref:`mgmanual`
+
+* `Geometric flow solvation <https://www.ncbi.nlm.nih.gov/pubmed/23212974>`_ finite difference calculations
+
+  * :ref:`geoflowauto`
+
+* Boundary element method calculations with `TABI-PB <https://doi.org/10.1016/j.jcp.2013.03.056>`_.
+
+  * :ref:`tabi`
+
+* Analytic and semi-analytic Poisson-Boltzmann approximations
+
+  * :ref:`pbamauto`
+  * :ref:`pbsamauto`
+
+* Finite element calculations with `FEtk <http://www.fetk.org>`_.
+
+  * :ref:`femanual`
+
+* No-op modes for generating coefficient maps
+
+  * :ref:`mgdummy`
+
+Finally, the ``keywords`` are calculation-specific commands that customize the particular type of calculation.
+This section is the main component for polar solvation calculations in APBS runs.
+There may be several ELEC sections, operating on different molecules or using different parameters for multiple runs on the same molecule.
+The order of the ELEC statement can matter since certain types of boundary conditions (:ref:`bcfl`) can require information about previous calculations.
+
+
+.. toctree::
+   :maxdepth: 1
+   :caption: Calculation type keywords
+
+   tabi
+   fe-manual
+   geoflow-auto
+   mg-auto
+   mg-manual
+   mg-para
+   mg-dummy
+   pbam-auto
+   pbsam-auto
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/ion.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ion.rst
--- apbs-3.0.0/docs/using/input/elec/ion.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ion.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,23 @@
+.. _ion:
+
+ion
+===
+
+Specify the bulk concentrations of mobile ion species present in the system.
+This command can be repeated as necessary to specify multiple types of ions; however, only the largest ionic radius is used to determine the ion-accessibility function.
+The total bulk system of ions must be electroneutral which means the charge densities/concentrations of positive and negative ions must be equal.
+The syntax is:
+
+.. code-block:: bash
+
+   ion charge {charge} conc {conc} radius {radius}
+
+where
+
+``charge``
+  Mobile ion species charge (floating point number in ec)
+``conc``
+  Mobile ion species concentration (floating point number in M)
+``radius``
+  Mobile ion species radius (floating point number in Å)
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/lpbe.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/lpbe.rst
--- apbs-3.0.0/docs/using/input/elec/lpbe.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/lpbe.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,10 @@
+.. _lpbe:
+
+lpbe
+====
+
+Specifies that the linearized Poisson-Boltzmann equation should be solved.
+
+.. note::
+
+   The options :ref:`lpbe`, :ref:`npbe`, :ref:`lrpbe`, :ref:`nrpbe` are mutually exclusive.
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/lrpbe.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/lrpbe.rst
--- apbs-3.0.0/docs/using/input/elec/lrpbe.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/lrpbe.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,13 @@
+.. _lrpbe:
+
+lrpbe
+=====
+
+Specifies that the linear form of the regularized Poisson-Boltzmann equation (RPBE) should be solved.
+The regularized PBE equation replaces the point charge distribution with the corresponding Green's function.
+As a result of this replacement, the solution corresponds to the reaction field instead of the total potential; the total potential can be recovered by adding the appropriate Coulombic terms to the solution.
+Likewise, this equation immediately yields the solvation energy without the need for reference calculations.
+
+.. note::
+
+   The options :ref:`lpbe`, :ref:`npbe`, :ref:`lrpbe`, :ref:`nrpbe` are mutually exclusive.
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mac.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mac.rst
--- apbs-3.0.0/docs/using/input/elec/mac.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mac.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+.. _mac:
+
+mac
+===
+
+TABI-PB parameter, multipole acceptance criterion (MAC), that controls distance ratio at which the method uses direct summation or Taylor approximation (a particle-cluster interaction) to calculate the integral kernels.
+The syntax is:
+
+.. code-block:: bash
+
+   mac {theta}
+
+where ``theta`` is a floating-point number from 0 to 1 controlling the distance ratio.
+This multipole acceptance criterion (MAC) is :math:`\frac{r_c}{R}\leqslant \theta`, where :math:`r_c` is the cluster radius, and :math:`R` is the distance of the particle to the cluster center.
+If the above relationship is satisfied, the Taylor approximation will be used instead of direct summation.
+A typical value for this parameter is 0.8.
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/maxsolve.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/maxsolve.rst
--- apbs-3.0.0/docs/using/input/elec/maxsolve.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/maxsolve.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,13 @@
+.. _maxsolve:
+
+maxsolve
+========
+
+Specify the number of times to perform the solve-estimate-refine iteration of the finite element solver (:ref:`femanual`).
+The syntax is:
+
+.. code-block:: bash
+   
+   maxsolve { num }
+
+where `num` is an integer indicating the desired maximum number of iterations.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/maxvert.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/maxvert.rst
--- apbs-3.0.0/docs/using/input/elec/maxvert.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/maxvert.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _maxvert:
+
+maxvert
+=======
+
+Specify the maximum number of vertices to allow during solve-estimate-refine cycle of finite element solver (:ref:`femanual`).
+This places a limit on the memory that can be used by the solver.
+The syntax is:
+
+.. code-block:: bash
+   
+   maxvert { num }
+
+where ``num`` is an integer indicating the maximum number of vertices.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mesh.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mesh.rst
--- apbs-3.0.0/docs/using/input/elec/mesh.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mesh.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,30 @@
+.. _mesh:
+
+mesh
+====
+
+TABI-PB parameter that spceifies the meshing software used to generate surface mesh.
+The syntax is:
+
+.. code-block:: bash
+
+   mesh {flag}
+
+where ``flag`` is an integer indicating the meshing software to be used:
+
+.. _NanoShaper: https://www.electrostaticszone.eu/downloads
+
+0
+  Formerly used for msms, no longer supported.
+1
+  SES implementation in NanoShaper_
+2
+  Skin surface implementation in NanoShaper_
+
+Note that the executable NanoShaper_ must be included in your path to use them.
+
+.. todo::
+
+   The integer flag values for ``mesh`` should be replaced by human-readable strings.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/496
+   
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mg-auto.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-auto.rst
--- apbs-3.0.0/docs/using/input/elec/mg-auto.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-auto.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,59 @@
+.. _mgauto:
+
+mg-auto
+=======
+
+Automatically configured finite difference Poisson-Boltzmann calculations.
+
+This multigrid calculation automatically sets up and performs a string of single-point PBE calculations to "focus" on a region of interest (binding site, etc.) in a system.
+It is basically an automated version of :ref:`mgmanual` designed for easier use.
+Most users should use this version of ELEC.
+
+Focusing is a method for solving the Poisson-Boltzmann equation in a finite difference setting.
+Some of the earliest references to this method are from Gilson and Honig [#Gilson]_.
+The method starts by solving the equation on a coarse grid (i.e., few grid points) with large dimensions (i.e., grid lengths).
+The solution on this coarse grid is then used to set the Dirichlet boundary condition values for a smaller problem domain -- and therefore a finer grid -- surrounding the region of interest.
+The finer grid spacing in the smaller problem domain often provides greater accuracy in the solution.
+
+The following keywords are present in mg-auto ELEC blocks; all keywords are required unless otherwise noted.
+
+.. note::
+
+   During focusing calculations, you may encounter the message "WARNING! Unusually large potential values detected on the focusing boundary!" for some highly charged systems based on location of the focusing boundary.
+   First, you should determine if you received any other warning or error messages as part of this calculation, particularly those referring to exceeded number of iterations or error tolerance (:ref:`etol`). 
+   Next, you should check if the calculation converged to a reasonable answer.
+   In particular, you should check sensitivity to the grid spacing by making small changes to the grid lengths (via the :ref:`fglen` parameter) and see if the changes in energies are correspondingly small.
+   If so, then this warning can be safely ignored.
+
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC mg-auto keywords:
+
+   bcfl
+   ../generic/calcenergy
+   ../generic/calcforce
+   cgcent
+   cglen
+   chgm
+   dime
+   etol
+   fgcent
+   fglen
+   ion
+   lpbe
+   lrpbe
+   ../generic/mol
+   npbe
+   pdie
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   srfm
+   ../generic/swin
+   ../generic/temp
+   usemap
+   write
+   writemat
+
+.. [#Gilson] Gilson MK and Honig BH, Calculation of electrostatic potentials in an enzyme active site. Nature, 1987. 330(6143): p. 84-6. DOI:`10.1038/330084a0 <http://dx.doi.org/10.1038/330084a0>`_
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mg-dummy.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-dummy.rst
--- apbs-3.0.0/docs/using/input/elec/mg-dummy.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-dummy.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,34 @@
+.. _mgdummy:
+
+mg-dummy
+========
+
+Not a Poisson-Boltzmann calculation.
+Many calculations of surface and charge distribution properties which do not require solution of the PBE.
+
+This type of calculation allows users to write out dielectric, ion-accessibility, and charge distribution, and other types of maps that depend solely on biomolecular geometry.
+Since these maps depend only on geometry, they can be written out without actually solving the PB equation. 
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC mg-auto keywords:
+
+   bcfl
+   chgm
+   dime
+   gcent
+   glen
+   ../generic/grid
+   ion
+   lpbe
+   lrpbe
+   ../generic/mol
+   npbe
+   pdie
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   srfm
+   ../generic/swin
+   ../generic/temp
+   write
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mg-manual.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-manual.rst
--- apbs-3.0.0/docs/using/input/elec/mg-manual.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-manual.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,41 @@
+.. _mgmanual:
+
+mg-manual
+=========
+
+
+Manually-configured finite differnece multigrid Poisson-Boltzmann calculations.
+
+This is a standard single-point multigrid PBE calculation without focusing or additional refinement.
+The ``mg-manual`` calculation offers the most control of parameters to the user.
+Several of these calculations can be strung together to perform focusing calculations by judicious choice of the :ref:`bcfl` flag; however, the setup of the focusing is not automated as it is in :ref:`mgauto` and :ref:`mgpara` calculations and therefore this command should primarily be used by more experienced users.
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC mg-manual keywords:
+
+   bcfl
+   ../generic/calcenergy
+   ../generic/calcforce
+   chgm
+   dime
+   etol
+   gcent
+   glen
+   ../generic/grid
+   ion
+   lpbe
+   lrpbe
+   ../generic/mol
+   nlev
+   npbe
+   pdie
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   srfm
+   ../generic/swin
+   ../generic/temp
+   usemap
+   write
+   writemat
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/mg-para.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-para.rst
--- apbs-3.0.0/docs/using/input/elec/mg-para.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/mg-para.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,42 @@
+.. _mgpara:
+
+mg-para
+=======
+
+Automatically-configured parallel focusing multigrid Poisson-Boltzmann calculations.
+
+This calculation closely resembles :ref:`mgauto` in syntax.
+However, it is designed to perform electrostatics calculations on systems in a parallel focusing fashion.
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC mg-para keywords:
+
+   async
+   bcfl
+   ../generic/calcenergy
+   ../generic/calcforce
+   cgcent
+   cglen
+   chgm
+   dime
+   etol
+   fgcent
+   fglen
+   ion
+   lpbe
+   lrpbe
+   ../generic/mol
+   npbe
+   ofrac
+   pdie
+   pdime
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   srfm
+   ../generic/swin
+   ../generic/temp
+   usemap
+   write
+   writemat
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/msms.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/msms.rst
--- apbs-3.0.0/docs/using/input/elec/msms.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/msms.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _msms:
+
+msms
+====
+
+Use this flag to call the `MSMS program <http://mgltools.scripps.edu/packages/MSMS>`_ from APBS.
+MSMS must be installed.
+Its output, a .vert file is necessary for the coarse-graining process.
+
+
+.. todo::
+   
+   The ``msms`` keyword should be removed and replaced with a more general alternative: either the :ref:`mesh` surface option in :ref:`tabi` or the existing APBS :ref:`elecsrfm`.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/497
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/nlev.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/nlev.rst
--- apbs-3.0.0/docs/using/input/elec/nlev.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/nlev.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _nlev:
+
+nlev
+====
+
+Specify the depth of the multilevel hierarchy used in the :ref:`mgmanual` multigrid solver.
+See :ref:`dime` for a discussion of how nlev relates to grid dimensions.
+The syntax is:
+
+.. code-block:: bash
+   
+   nlev {lev}
+
+where ``lev`` is an integer indicating the desired depth of the multigrid hierarchy.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/npbe.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/npbe.rst
--- apbs-3.0.0/docs/using/input/elec/npbe.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/npbe.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,10 @@
+.. _npbe:
+
+npbe
+====
+
+Specifies that the nonlinear (full) Poisson-Boltzmann equation should be solved.
+
+.. note::
+
+   The options :ref:`lpbe`, :ref:`npbe`, :ref:`lrpbe`, :ref:`nrpbe` are mutually exclusive.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/nrpbe.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/nrpbe.rst
--- apbs-3.0.0/docs/using/input/elec/nrpbe.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/nrpbe.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+.. _nrpbe:
+
+nrpbe
+=====
+
+Specifies that the nonlinear form of the regularized Poisson-Boltzmann equation (RPBE) should be solved.
+The regularized PBE equation replaces the point charge distribution with the corresponding Green's function.
+As a result of this replacement, the solution corresponds to the reaction field instead of the total potential; the total potential can be recovered by adding the appropriate Coulombic terms to the solution.
+Likewise, this equation immediately yields the solvation energy without the need for reference calculations.
+
+.. note::
+
+   The options :ref:`lpbe`, :ref:`npbe`, :ref:`lrpbe`, :ref:`nrpbe` are mutually exclusive.
+   
+.. note::
+
+   This functionality is only available with FEM-based solvers.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/ntraj.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ntraj.rst
--- apbs-3.0.0/docs/using/input/elec/ntraj.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ntraj.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,12 @@
+.. _ntraj:
+
+ntraj
+=====
+
+Specify the number of Brownian Dynamic trajectories desired for the PB-(S)AM run.
+
+.. code-block:: bash
+   
+   ntraj {traj}
+
+where ``traj`` is an integer of the number of desired trajectories.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/ofrac.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ofrac.rst
--- apbs-3.0.0/docs/using/input/elec/ofrac.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/ofrac.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,62 @@
+.. _ofrac:
+
+ofrac
+=====
+
+Specify the amount of overlap to include between the individual processors meshes in a parallel focusing calculation (:ref:`mgpara`).
+The syntax is:
+
+.. code-block:: bash
+
+   ofrac {frac}
+
+where ``frac`` is a floating point value between 0.0 and 1.0 denoting the amount of overlap between processors.
+Empirical evidence suggests that an value of 0.1 is sufficient to generate stable energies.
+However, this value may not be sufficient to generate stable forces and/or good quality isocontours.
+For example, the following table illustrates the change in energies and visual artifacts in isocontours as a function of ofrac values for a small peptide (2PHK:B).
+
+.. list-table:: Sensitivity of 2PHK:B solvation energy calculations to ofrac values.
+   :widths: auto
+   :header-rows: 1
+
+   * - ``ofrac`` value
+     - Energy (kJ/mol)
+     - Visual artifact in isocontour?
+   * - 0.05
+     - 342.79
+     - No
+   * - 0.06
+     - 342.00
+     - No
+   * - 0.07
+     - 341.12
+     - Yes
+   * - 0.08
+     - 341.14
+     - Yes
+   * - 0.09
+     - 342.02
+     - Yes
+   * - 0.10
+     - 340.84
+     - Yes
+   * - 0.11
+     - 339.67
+     - No
+   * - 0.12
+     - 341.10
+     - No
+   * - 0.13
+     - 341.10
+     - No
+   * - 0.14
+     - 341.32
+     - No
+   * - 0.15
+     - 341.54
+     - No
+
+In general, larger <code>ofrac</code> values will reduce the parallel efficiency but will improve the accuracy.
+
+For broad spatial support of the splines, every charge included in partition needs to be at least 1 grid space (:ref:`chgm` ``spl0``), 2 grid spaces (:ref:`chgm` ``spl2``), or 3 grid spaces (:ref:`chgm` ``spl4``) away from the partition boundary.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/outdata.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/outdata.rst
--- apbs-3.0.0/docs/using/input/elec/outdata.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/outdata.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,24 @@
+.. _outdata:
+
+outdata
+=======
+
+TABI-PB parameter that specifies the file type for printing the output data.
+The syntax is:
+
+.. code-block:: bash
+   
+   outdata {flag}
+
+where ``flag`` is an integer indicating the output file types:
+
+0
+  .dat format
+1
+  Both the .dat format and a VTK polygonal data file that can be visualized in the ParaView software.
+  The VTK file contains color mappable potentials and normal derivatives of potentials on the faces and vertices of the mesh.
+
+
+.. todo::
+
+   The integer flag values for ``mesh`` should really be replaced by human-readable strings.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/pbam-auto.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbam-auto.rst
--- apbs-3.0.0/docs/using/input/elec/pbam-auto.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbam-auto.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,77 @@
+.. _pbamauto:
+
+pbam-auto
+=========
+
+PB-AM is an analytical solution to the linearized Poisson-Boltzmann equation for multiple spherical objects of arbitrary charge distribution in an ionic solution.
+More details on the method are available in `Lotan, Head-Gordon (2006) <http://pubs.acs.org/doi/full/10.1021/ct050263p>`_.
+The physical calculations are uses to perform various actions on a system of molecules such as calculation of energies, forces, torques, electrostatic potentials, and Brownian dynamics schemes.
+This fast method coarse-grains all molecules of the system into single spheres large enough to contain all molecule atoms.
+
+.. todo::
+
+   If there's only one mode to PBAM, let's call it ``pbam`` instead of ``pbam-auto``.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/498
+
+The current implementation of PB-AM in APBS includes:
+
+* Calculation of energies, forces and torques
+* Calculation of electrostatic potentials
+* Brownian dynamics simulations
+
+Keywords for this calculation type include:
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC pbam-auto keywords:
+
+   3dmap
+   diff
+   dx
+   grid2d
+   gridpts
+   ../generic/mol
+   ntraj
+   pbc
+   pdie
+   randorient
+   runname
+   runtype
+   salt
+   sdie
+   ../generic/temp
+   term
+   termcombine
+   units
+   xyz
+
+======================
+Background information
+======================
+
+PB-AM is an analytical solution to the linearized Poisson-Boltzmann equation for multiple spherical objects of arbitrary charge distribution in an ionic solution.
+The solution can be reduced to a simple system of equations as follows:
+
+.. math::
+
+   A = \Gamma \cdot (\Delta \cdot T \cdot A + E) 
+
+Where :math:`A^{(i)}` represents the effective multipole expansion of the charge distributions of molecule :math:`i`.
+:math:`E^{(i)}` is the free charge distribution of molecule :math:`i`.
+:math:`\Gamma` is a dielectric boundary-crossing operator, :math:`\Delta` is a cavity polarization operator, :math:`T` an operator that transforms the multipole expansion to a local coordinate frame.
+:math:`A^{(i)}` is solved for through an iterative SCF method.
+
+
+From the above formulation, computation of the interaction energy :math:`\Omega^{(i)}` for molecule :math:`i`, is given as follows:
+
+.. math::
+
+   \Omega^{(i)}=\frac{1}{\epsilon_s} \left \langle \sum_{j \ne i}^N  T \cdot A^{(j)} ,  A^{(i)} \right \rangle
+
+where :math:`\langle M, N \rangle` denotes the inner product.
+Forces can be obtained from
+
+.. math::
+
+   \textbf{F}^{(i)} = \nabla_i \Omega^{(i)}=\frac{1}{\epsilon_s} \left[ \langle \nabla_i \,T \cdot A^{(i)} ,  A^{(i)} \rangle +  \langle T \cdot A^{(i)} ,   \nabla_i \, A^{(i)} \rangle \right]
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/pbc.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbc.rst
--- apbs-3.0.0/docs/using/input/elec/pbc.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbc.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+.. _pbc:
+
+pbc
+===
+
+This keyword is used to indicate if 3D periodic boundary conditions (PBCs) will be used in a PB-(S)AM calculation.
+If used, a box length must also be specified, in Ångstroms.
+
+.. code-block:: bash
+   
+   pbc {boxlength}
+
+where ``boxlength`` is the floating point value of the box length in Ångstroms.
+
+.. note::
+
+   The box is centered at the origin (0, 0, 0).
+   The code assumes a minimum image convention, so it only includes the closest image of the neighboring molecules.
+   For this convention to always be preserved, the periodic box is assumed to be large enough such that the electrostatic forces are sufficiently attenuated beyond one boxlength.
+   Generally, the program assumes a mutual polarization cutoff of 100 Å for the mutual polarization, so if the boxlength is shorter, the cutoff will be reduced to boxlength/2.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/pbsam-auto.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbsam-auto.rst
--- apbs-3.0.0/docs/using/input/elec/pbsam-auto.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pbsam-auto.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,118 @@
+.. _pbsamauto:
+
+pbsam-auto
+==========
+
+PB-SAM is a semi-analytical solution to the linearized Poisson-Boltzmann equation for multiple molecules of arbitrary charge distribution in an ionic solution.
+The solution is an extension of the :ref:`analytical method <pbamauto>`, leveraging fast-multipole methods as well as boundary elements.
+Each molecule is coarse-grained as a system of overlapping spheres, whose surface charges are represented by multipole expansions.
+For details on the method, please see `Yap, Head-Gordon (2010) <http://pubs.acs.org/doi/abs/10.1021/ct100145f>`_ and `Yap, Head-Gordon (2013) <http://pubs.acs.org/doi/abs/10.1021/ct400048q>`_.
+
+.. todo::
+
+   If there's only one mode to PBAM, let's call it ``pbsam`` instead of ``pbsam-auto``.
+
+The current implementation of PB-SAM in APBS includes:
+
+* Calculation of energies, forces and torques
+* Calculation of electrostatic potentials
+* Brownian dynamics simulations
+
+Keywords for this calculation type include:
+
+.. toctree::
+   :maxdepth: 2
+   :caption: ELEC pbsam-auto keywords:
+
+   3dmap
+   diff
+   dx
+   exp
+   grid2d
+   imat
+   ntraj
+   pbc
+   pdie
+   randorient
+   runname
+   runtype
+   salt
+   sdie
+   surf
+   ../generic/temp
+   term
+   termcombine
+   tolsp
+   units
+   xyz
+
+======================
+Background information
+======================
+
+PB-SAM is a semi-analytical solution to the linearized Poisson-Boltzmann equation for multiple molecules of arbitrary charge distribution in an ionic solution.
+The solution is an extension of the analytical method, leveraging Fast-Multipole methods as well as boundary elements.
+Each molecule is coarse-grained as a system of overlapping spheres, whose surface charges are represented by the multipole expansions :math:`H^{(i)}` and :math:`F^{(i)}`.
+To solve for the potential, the following interactions are considered:
+
+* Intra-molecular interactions between overlapping spheres are treated numerically
+* Intra-molecular interactions between non-overlapping spheres are treated analytically
+* Inter-molecular interactions between spheres on different molecules
+
+With these interactions, the multipole expansions are solved with an iterative SCF method, briefly given as
+
+.. math::
+
+   H^{(i,k)} &= I_{E}^{(i,k)} \cdot \left ( H^{(i,k)} + F^{(i,k)} + T \cdot H^{(j,l)} \right ) \\
+   F^{(i,k)} &= I_{E}^{(i,k)} \cdot \left ( H^{(i,k)} + F^{(i,k)} + T \cdot F^{(j,l)} \right )
+
+Where :math:`H^{(i)}` and :math`F^{(i)}` are multipole expansions, :math:`I_{E}^{(i,k)}` is the exposed surface integral matrix for sphere :math:`k` of molecule :math:`i`, and :math:`T` is an operator that transforms the multipole expansion to a local coordinate frame.
+
+From the above formulation, computation of the interaction energy :math:`\Omega^{(i)}` for molecule :math:`i`, is given as a sum of all the interactions of spheres :math:`k` within it with all external spheres (in a simplified form) as follows:
+
+.. math::
+
+   \Omega^{(i)} = \frac{1}{\epsilon_s} \left \langle \sum_{k \, in\, i} \sum_{j \ne i}^N \sum_{l\, in \, j}  T \cdot H^{(j,l)} ,  H^{(i,k)} \right \rangle
+
+where :math:`\langle  M, N \rangle` denotes the inner product.
+
+When energy is computed, forces follow as:
+
+.. math::
+
+   \textbf{F}^{(i)} = \nabla_i \Omega^{(i)}=\frac{1}{\epsilon_s} [ \langle \nabla_i \,T \cdot H^{(j,l)} ,  H^{(i,k)} \rangle +  \langle T \cdot H^{(j,l)},   \nabla_i \, H^{(i,k)} \rangle
+
+The method to calculate the torque is discussed in `Yap, Head-Gordon (2013) <http://pubs.acs.org/doi/abs/10.1021/ct400048q>`_.
+
+============
+PB-SAM files
+============
+
+-------------------
+Vertex/surface file
+-------------------
+
+As part of the coarse-graining process a definition of the molecular surface is necessary.
+
+-----------------------
+Coarse-grained PQR file
+-----------------------
+
+The coarse-graining process will produce a new PQR file :file:`mol{#}_cg.pqr` that contains the original PQR concatenated with coarse-graining spherical centers.
+The number `#` refers to the order the file was read during the :doc:`../read` statements.
+
+---------------------------
+IMAT: surface integral file
+---------------------------
+
+The surface integrals are computed for the boundary element part of PB-SAM.
+Their calculation can be quite time-consuming, so the first time they are computed for a system, they are saved to the working directory with the name :file:`mol{m}sph{s}.bin``.
+The *m* in :file:`mol{m}sph{s}.bin`` is the ordered ID of the molecule from the PQR section.
+The *s* in :file:`mol{m}sph{s}.bin`` refers to coarse-grained sphere *s* of the molecule.
+
+-------------------------
+Multipole expansion files
+-------------------------
+
+Much like the IMAT files, the expansion files are files generated from self-polarization that are useful and time-saving methods for running a system of full-mutual polarziation on many molecules.
+If no expansion path is provided, the program will calculate self-polarization for each type of molecule in the system and save files of the form :file:`mol{m}{H,F}.{s}.exp`, where *m* is the molecule ID, *H* and *F* refer to the respective expansion (see above), and *s* is the coarse-grained sphere number.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/pdie.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pdie.rst
--- apbs-3.0.0/docs/using/input/elec/pdie.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pdie.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _pdie:
+
+pdie
+====
+
+Specify the dielectric constant of the solute molecule.
+The syntax is:
+
+.. code-block:: bash
+
+   pdie {diel}
+
+where ``diel`` is the floating point value of the unitless biomolecular dielectric constant.
+This is usually a value between 2 to 20, where lower values consider only electronic polarization and higher values consider additional polarization due to intramolecular motion.
+The dielectric value must be :math:`\ge 1`.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/pdime.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pdime.rst
--- apbs-3.0.0/docs/using/input/elec/pdime.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/pdime.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _pdime:
+
+pdime
+=====
+
+Specify the processor array to be used in a parallel focusing (:ref:`mgpara`) calculation.
+The syntax is:
+
+.. code-block:: bash
+   
+   pdime {npx npy npz}
+
+where ``npx npy npz`` are the integer number of processors to be used in the x-, y- and z-directions of the system.
+The product ``npx × npy × npz`` should be less than or equal to the total number of processors with which APBS was invoked (usually via mpirun).
+If more processors are provided at invocation than actually used during the run, the extra processors are not used in the calculation.
+The processors are tiled across the domain in a Cartesian fashion with a specified amount of overlap (see :ref:`ofrac`) between each processor to ensure continuity of the solution.
+Each processor's subdomain will contain the number of grid points specified by the dime keyword.
+For broad spatial support of the splines, every charge included in partition needs to be at least 1 grid space (:ref:`chgm` ``spl0``), 2 grid spaces (:ref:`chgm` ``spl2``), or 3 grid spaces (:ref:`chgm` ``spl4``) away from the partition boundary.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/press-geoflow.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/press-geoflow.rst
--- apbs-3.0.0/docs/using/input/elec/press-geoflow.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/press-geoflow.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,21 @@
+press
+=====
+
+This term specifies the solvent pressure in kJ mol\ :superscript:`-1` Å\ :superscript:`-3`.
+This coefficient multiplies the volume term of the apolar model and can be set to zero to eliminate volume contributions to the apolar solvation calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   press {value}
+
+where ``value`` is the floating point value of the pressure coefficient in kJ mol\ :superscript:`-1` Å\ :superscript:`-3`.
+
+.. warning::
+
+   *Either* this documentation is incorrect *or* the implementation needs to be changed to use kJ mol\ :superscript:`-1` Å\ :superscript:`-3` instead of kcal.
+
+.. todo::
+
+   Resolve unit confusion with geometric flow ``press`` keyword and the apolar :ref:`press` keyword.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/499
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/randorient.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/randorient.rst
--- apbs-3.0.0/docs/using/input/elec/randorient.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/randorient.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,6 @@
+.. _randorient:
+
+randorient
+==========
+
+Flag to indicate that the molecules should have a random orientation in subsequent PB-(S)AM calculations.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/runname.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/runname.rst
--- apbs-3.0.0/docs/using/input/elec/runname.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/runname.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,12 @@
+.. _runname:
+
+runname
+=======
+
+Specify the output name for the PB-(S)AM calculation.
+
+..code-block:: bash
+
+   runname {name}
+
+where ``name`` is a string indicating the prefix for all PB-(S)AM output files.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/runtype.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/runtype.rst
--- apbs-3.0.0/docs/using/input/elec/runtype.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/runtype.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,40 @@
+.. _runtype:
+
+runtype
+=======
+
+Indicate what type of calculation you would like to run with the PB-(S)AM model.
+
+.. code-block:: bash
+   
+   runtype {type}
+
+where ``type`` is the type of calculation to be perfomed:
+
+``energyforce``
+  Compute and print out the interaction energies, forces and torques on each molecule. 
+
+``electrostatics``
+  Print the electrostatic potential of points in the system.
+
+``dynamics``
+  Perform a Brownian Dynamics simulation, using forces and torques generated from the PB-(S)AM model.
+  The calculation of force and torque has been integrated into a Brownian dynamics scheme that is detailed in `Yap EH, Head-Gordon TL (2013) <http://pubs.acs.org/doi/abs/10.1021/ct400048q>`_
+  This option will generate a series of files of the form
+
+  :file:`dyn_{toy}.pqr`
+    The starting configuration of the system for the first trajectory
+
+  :file:`dyn_{toy}.stat`
+    A file that prints how each trajectory was terminated and the time that this occurred at.
+
+  :file:`dyn_{toy}_traj.xyz`
+    A VMD-readable xyz file for the trajectory of ``traj``.
+
+  :file:`dyn_toy_traj.dat`
+    A file with positions, forces and torques for the system.
+
+  .. todo::
+
+     The dynamics part of the PB-(S)AM code should be moved out of the ``ELEC`` section.
+     Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/500
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/salt.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/salt.rst
--- apbs-3.0.0/docs/using/input/elec/salt.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/salt.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _salt:
+
+salt
+====
+
+Specify the monovalent salt concentration of the system, in molar. This is usually a value between 0.00 to 0.15.
+
+.. code-block:: bash
+   
+   salt {saltConc}
+
+where ``saltConc`` is the floating point value of the monovalent salt concentration in molar.
+
+.. todo::
+
+   The PB-(S)AM ``salt`` keyword should be eradicated and replaced with the :ref:`ion` keyword.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/501
+   
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/sdie.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/sdie.rst
--- apbs-3.0.0/docs/using/input/elec/sdie.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/sdie.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _sdie:
+
+sdie
+====
+
+Specify the dielectric constant of the solvent.
+The syntax is:
+
+.. code-block:: bash
+   
+   sdie {diel}
+
+where ``diel`` is a floating point number representing the solvent dielectric constant (unitless).
+This number must be :math:`\ge 1`.
+Bulk water at biologically-relevant temperatures is usually modeled with a dielectric constant of 78-80.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/srfm.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/srfm.rst
--- apbs-3.0.0/docs/using/input/elec/srfm.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/srfm.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,41 @@
+.. _elecsrfm:
+
+srfm (elec)
+===========
+
+Specify the model used to construct the dielectric and ion-accessibility coefficients.
+The syntax for this command is:
+
+.. code-block:: bash
+
+   srfm {flag}
+
+where ``flag`` is a string describing the coefficient model:
+
+``mol``
+  The dielectric coefficient is defined based on a molecular surface definition.
+  The problem domain is divided into two spaces.
+  The "free volume" space is defined by the union of solvent-sized spheres (see :ref:`srad`) which do not overlap with biomolecular atoms.
+  This free volume is assigned bulk solvent dielectric values.
+  The complement of this space is assigned biomolecular dielectric values.
+  With a non-zero solvent radius (srad), this choice of coefficient corresponds to the traditional definition used for PB calculations.
+  When the solvent radius is set to zero, this corresponds to a van der Waals surface definition.
+  The ion-accessibility coefficient is defined by an "inflated" van der Waals model.
+  Specifically, the radius of each biomolecular atom is increased by the radius of the ion species (as specified with the :ref:`ion` keyword).
+  The problem domain is then divided into two spaces.
+  The space inside the union of these inflated atomic spheres is assigned an ion-accessibility value of 0; the complement space is assigned bulk ion accessibility values.
+
+``smol``
+  The dielectric and ion-accessibility coefficients are defined as for mol (see above).
+  However, they are then "smoothed" by a 9-point harmonic averaging to somewhat reduce sensitivity to the grid setup as described by Bruccoleri et al. J Comput Chem 18 268-276, 1997 (`10.1007/s00214-007-0397-0 <http://dx.doi.org/10.1007/s00214-007-0397-0>`_).
+
+``spl2``
+  The dielectric and ion-accessibility coefficients are defined by a cubic-spline surface as described by Im et al, Comp Phys Commun 111 (1-3) 59-75, 1998 (`10.1016/S0010-4655(98)00016-2 <https://doi.org/10.1016/S0010-4655(98)00016-2>`_).
+  The width of the dielectric interface is controlled by the :ref:`swin` parameter.
+  These spline-based surface definitions are very stable with respect to grid parameters and therefore ideal for calculating forces.
+  However, they require substantial reparameterization of the force field; interested users should consult Nina et al, Biophys Chem 78 (1-2) 89-96, 1999 (`10.1016/S0301-4622(98)00236-1 <http://dx.doi.org/10.1016/S0301-4622(98)00236-1>`_).
+  Additionally, these surfaces can generate unphysical results with non-zero ionic strengths; this is an on-going area of development.
+
+``spl4``
+  The dielectric and ion-accessibility coefficients are defined by a 7th order polynomial.
+  This surface definition has characteristics similar to spl2, but provides higher order continuity necessary for stable force calculations with atomic multipole force fields (up to quadrupole).
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/surf.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/surf.rst
--- apbs-3.0.0/docs/using/input/elec/surf.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/surf.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _surf:
+
+surf
+====
+
+This keyword can be used to load in the MSMS vertex file for coarse-graining (see :ref:`pbsamauto`)
+The syntax is:
+
+.. code-block:: bash
+
+   surf {prefix}
+
+where ``prefix`` refers to the filename :file:{prefix}.vert`.
+
+.. todo::
+   
+   The PB-SAM ``surf`` command is redundant with and should be replaced by the existing :ref:`usemesh` command.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/502
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/tabi.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tabi.rst
--- apbs-3.0.0/docs/using/input/elec/tabi.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tabi.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,94 @@
+.. _tabi:
+
+tabi
+==========
+
+This mode uses the TABI-PB integral equation software from Geng and Krasny to solve the linearized Poisson-Boltmzann equation. 
+Boundary element methods offer the ability to focus numerical effort on a much smaller region of the problem domain:  the interface between the molecule and the solvent.
+In this method, two coupled integral equations defined on the solute-solvent boundary define a mathematical relationship between the electrostatic surface potential and its normal derivative with a set of integral kernels consisting of Coulomb and screened Coulomb potentials with their normal derivatives.
+The boundary element method requires a surface triangulation, generated by a program such as `NanoShaper <https://www.electrostaticszone.eu/downloads>`_, on which to discretize the integral equations.
+
+For more information, see the Geng & Krasny `2013 J Comput Phys paper <https://doi.org/10.1016/j.jcp.2013.03.056>`_.
+
+.. toctree::
+   :maxdepth: 1
+   :caption: ELEC tabi keywords
+
+   ion
+   mac
+   mesh
+   ../generic/mol
+   outdata
+   pdie
+   ../generic/sdens
+   sdie
+   ../generic/srad
+   ../generic/temp
+   tree_n0
+   tree_order
+
+
+======================
+Background information
+======================
+
+The Treecode-Accelerated Boundary Integral Poisson-Boltzmann solver (TABI-PB; `Geng, 2013 <http://www.sciencedirect.com/science/article/pii/S0021999113002404>`_ calculates electrostatics of solvated biomolecules governed by the linearized Poisson-Boltzmann equation.
+It uses a well-posed boundary integral Poisson-Boltzmann formulation to ensure rapid convergence.
+In addition, a fast treecode algorithm for the screened Coulomb potential `(Li, 2009) <http://www.sciencedirect.com/science/article/pii/S0021999109000916>`_ is applied to speed up the matrix-vector products in each GMRES iteration.
+The molecular surfaces, which divide the entire domain into solute region and solvent region, are generated by `NanoShaper <https://www.electrostaticszone.eu/downloads>`_.
+
+-----------------
+TABI-PB algorithm
+-----------------
+
+The coupled integral equations derived from the linearized Poisson-Boltzmann equation are
+
+.. math::
+   
+   \frac{1}{2}(1+\epsilon)\phi({x})-\int_\Gamma(K_1({x},{y})\frac{\partial{\phi({y})}}{\partial{v}}+K_2({x},{y})\phi({y}))dS_{y} &=S_1({x}) \\
+   \frac{1}{2}(1+\frac{1}{\epsilon})\frac{\partial{\phi({x})}}{\partial{v}}-\int_\Gamma(K_3({x},{y})\frac{\partial{\phi({y})}}{\partial{v}}+K_4({x},{y})\phi({y}))dS_{y} &=S_2({x}), {x}\in\Gamma
+
+for the surface potential :math:`\phi`, and its normal derivative :math:`\frac{\partial\phi}{\partial v}` on the surface :math`\Gamma`.
+The kernels :math:`K_{1,2,3,4}` are linear combinations of the Coulomb and screened Coulomb potentials:
+
+.. math::
+   
+   G_0({x},{y}) &= \frac{1}{4\pi |{x}-{y}|} \\
+   G_{\kappa}({x},{y}) &= \frac{e^{-\kappa|{x}-{y}|}}{4\pi |{x}-{y}|}
+
+and their first and second derivatives.
+
+The sums in the discretized form of the integral equations above have the form of *N*-body interactions,
+
+.. math::
+   
+   V_i = \sum_{j=1,j \neq i}^{N} q_j G({x}_i,{x}_j), i=1,\ldots,N 
+
+where :math:`G` is the screened Coulomb potential kernel, :math:`{x}_i, {x}_j` are the centroids of the triangles, and :math:`q_j` is the charge at :math:`{x}_j`.
+The particles (centroids of the triangles) are divided into a hierarchy of clusters having a tree structure.
+The treecode replaces the :math:`\mathcal{O}(N^2)` particle-particle interactions by :math:`\mathcal{O}(N \log N)` particle-cluster interactions and TABI-PB utilizes this feature efficiently.
+
+======
+Output
+======
+
+The TABI-PB code produces an output file called :file:`surface_potential.dat` containing:
+
+* number of nodes, number of triangles
+* node index, vertices, normal vector, surface potential (kJ mol\ :sup:`-1` e\ :sub:`c`\ :sup:`-1`), surface potential normal derivatives (kJ mol\ :sup:`-1` e\ :sub:`c`\ :sup:`-1` A\ :sup:`-1`)
+* connectivity data for surface triangulation
+
+The format is given below:
+
+.. code-block:: bash
+   
+   num_node num_triangle
+   node_index x y z norm_x norm_y norm_z phi norm_phi
+   (et cetera)
+   node_index1 node_index2 node_index3
+
+The TABI-PB code prints the free energy of solvation and Coulombic free energy in kJ/mol, along with some other information such as CPU time and the GMRES residuals at each step.
+
+Additionally, TABI-PB can optionally output a VTK polygonal data file containing color mappable potentials and normal derivatives of potentials on the faces and vertices of the mesh.
+The VTK file can be visualized using `ParaView <https://www.paraview.org/>`_.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/targetNum.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/targetNum.rst
--- apbs-3.0.0/docs/using/input/elec/targetNum.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/targetNum.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _targetNum:
+
+targetNum
+=========
+
+Specify the target number of vertices in the initial finite element mesh for :ref:`femanual` calculations.
+The syntax is:
+
+.. code-block:: bash
+
+   targetNum { num }
+
+where ``num`` is an integer denoting the target number of vertices in initial mesh.
+Initial refinement will continue until this number is reached or the the longest edge of every simplex is below :ref:`targetRes`.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/targetRes.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/targetRes.rst
--- apbs-3.0.0/docs/using/input/elec/targetRes.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/targetRes.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _targetRes: 
+
+targetRes
+=========
+
+Specify the target resolution of the simplices in a finite element mesh (:ref:`femanual`).
+The syntax is:
+
+.. code-block:: bash
+   
+   targetRes { res }
+
+where ``res`` is a floating point number denoting the target resolution for longest edges of simplices in mesh (in Å).
+Refinement will continue until the longest edge of every simplex is below this value or the number of vertices reaches :ref:`targetNum`.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/termcombine.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/termcombine.rst
--- apbs-3.0.0/docs/using/input/elec/termcombine.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/termcombine.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _termcombine:
+
+termcombine
+===========
+
+Combine multiple PB-(S)AM Brownian dynamics trajectory termination conditions (see :doc:`term`) via logic operators
+
+.. code-block:: bash
+   
+   termcombine {op}
+
+where ``op`` is either the string ``or`` or ``and``.
+If  ``and`` is selected, all listed termination conditions must be fulfilled before the simulation ends.
+If ``or`` is selected, only one needs to be satisfied to complete the simulation.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/term.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/term.rst
--- apbs-3.0.0/docs/using/input/elec/term.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/term.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,39 @@
+.. _term:
+
+term
+====
+
+Specify a termination condition for a PB-(S)AM Brownian dynamics trajectory.
+The syntax is:
+
+.. code-block:: bash
+   
+   term {type} {options}
+
+where the ``options`` are determined by the ``type`` as follows:
+
+``contact {file}``
+  Termination based on molecular contact conditions.
+  ``file`` is a string for the contact file filename.
+  The contact file has a list formatted as follows:  ``moltype1 at1 moltype2 at2 dist`` where ``moltype1``  and ``moltype2``  are indices of the molecular types, ``at1`` is the index of an atom from the first molecular type, ``at2`` is the index of an atom from the second molecular type, and ``dist`` is the maximum distance between the two atoms that defines the contact.
+  ``pad`` is distance criterion that will be checked in the case that the true atom contact distance may not be fulfilled.
+
+  .. note::
+
+     Sometimes these distances cannot be reached due to the assumption in this model that the molecule is spherical.
+     If this is the case, the atom positions are transformed to the molecule surface and surface points are compared to the pad distance.
+
+``{pos} {val} {molecule}``
+  Specify a position termination condition for a given molecule.
+  where ``pos`` is one of the following options: ``x<=, x>=, y<=, y>=, z<=, z>=, r<=, r>=``.
+  ``val`` is the value along the given axis to check against.
+  ``molecule`` is the molecule index (1 based) according to the order of molecules listed in the ``READ`` section that this condition applies to.
+  This command can be understood as:  "Terminate the simulation when molecule ``molecule`` fulfills the condition ``pos`` ``val``".
+
+  .. todo::
+
+     Add a constant keyword (e.g., like ``position``) before the ``{pos}`` argument of ``term``.
+     Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/503
+
+``time {val}``
+  Specify a time termination condition where ``val`` is a floating point number for the trajectory time limit (in picoseconds).
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/tolsp.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tolsp.rst
--- apbs-3.0.0/docs/using/input/elec/tolsp.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tolsp.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,12 @@
+.. _tolsp:
+
+tolsp
+=====
+
+This is an undocumented parameter from the PB-SAM code that does something with the coarseness of the molecule representation.
+The PB-SAM authors recommend a value of 2.5.
+
+.. todo::
+   
+   We need documentation for ``tolsp``.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/504
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/tree_n0.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tree_n0.rst
--- apbs-3.0.0/docs/using/input/elec/tree_n0.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tree_n0.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _tree_n0:
+
+tree_n0
+=======
+
+TABI-PB parameter that specifies the maximum number of particles in a treecode leaf.
+This controls leaf size in the process of building the tree structure.
+The syntax is:
+
+.. code-block:: bash
+   
+   tree_n0 {max_number}
+
+where ``max_number`` is an integer.
+A typical value for this parameter is 500.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/tree_order.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tree_order.rst
--- apbs-3.0.0/docs/using/input/elec/tree_order.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/tree_order.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _tree_order:
+
+tree_order
+==========
+
+TABI-PB parameter that specifies the order of the treecode multipole expansion.
+The syntax is:
+
+.. code-block:: bash
+
+   tree_order {order}
+
+where ``order`` is an integer that indicates the Taylor expansion order.
+Users can adjust the order for different accuracy. 
+A typical choice for this parameter is 3.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/units.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/units.rst
--- apbs-3.0.0/docs/using/input/elec/units.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/units.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,28 @@
+.. _units:
+
+units
+=====
+
+Specify the units for energy/force/potential output in PB-(S)AM calculations:
+
+.. code-block:: bash
+   
+   units {flag}
+
+where ``flag`` specifies the unit system:
+
+``kcalmol``
+  kcal/mol
+
+``jmol``
+  J/mol
+
+``kT``
+  kT
+
+Force units will be energy units/Angstrom and potential units will be energy units/electron.
+
+.. todo::
+
+   It would be great to use the same units everywhere in APBS.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/485
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/usemap.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/usemap.rst
--- apbs-3.0.0/docs/using/input/elec/usemap.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/usemap.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,35 @@
+.. _usemap:
+
+usemap
+======
+
+Specify pre-calculated coefficient maps to be used in the Poisson-Boltzmann calculation.
+These must have been input via an earlier READ statement (see :ref:`read`).
+
+The syntax for this command is:
+
+.. code-block:: bash
+   
+   usemap {type} {id}
+
+where the mandatory keywords are:
+
+``type``
+  A string that specifies the type of pre-calculated map to be read in:
+
+  ``diel``
+    Dielectric function map (as read by :ref:`read` ``diel``); this causes the :ref:`pdie`, :ref:`sdie`, :ref:`srad`, :ref:`swin`, and :ref:`elecsrfm` parameters and the radii of the biomolecular atoms to be ignored when computing dielectric maps for the Poisson-Boltzmann equation.
+    Note that the :ref:`pdie` and :ref:`sdie` values are still used for some boundary condition calculations as specified by :ref:`bcfl`.
+  ``kappa``
+    Mobile ion-accessibility function map (as read by :ref:`read` ``kappa``); this causes the :ref:`swin` and :ref:`elecsrfm` parameters and the radii of the biomolecular atoms to be ignored when computing mobile ion values for the Poisson-Boltzmann equation.
+    The :ref:`ion` parameter is not ignored and will still be used.
+  ``charge``
+    Charge distribution map (as read by :ref:`read` ``charge``); this causes the :ref:`chgm` parameter and the charges of the biomolecular atoms to be ignored when assembling the fixed charge distribution for the Poisson-Boltzmann equation.
+  ``pot``
+    Potential map (as read by :ref:`read` ``pot``); this option requires setting :ref:`bcfl` to ``map``.
+
+``id``
+  As described in the READ command documentation (see :ref:`read`), this integer ID specifies the particular map read in with READ.
+  These IDs are assigned sequentially, starting from 1, and incremented independently for each map type read by APBS.
+  In other words, a calculation that uses two PQR files, one parameter file, three charge maps, and four dielectric maps would have PQR files with IDs 1-2, a parameter file with ID 1, charge maps with IDs 1-3, and dielectric maps with IDs 1-4.
+
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/usemesh.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/usemesh.rst
--- apbs-3.0.0/docs/using/input/elec/usemesh.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/usemesh.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _usemesh:
+
+usemesh
+=======
+
+Specify the external finite element mesh to be used in the finite element Poisson-Boltzmann calculation (:ref:`femanual`).
+These must have been input via an earlier READ mesh statement (see :ref:`read`).
+The syntax is:
+
+.. code-block:: bash
+
+   usemesh {id}
+
+where ``id`` is an integer ID specifying the particular map read in with :ref:`read`.
+These IDs are assigned sequentially, starting from 1, and incremented independently for each mesh read by APBS.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/vdwdisp.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/vdwdisp.rst
--- apbs-3.0.0/docs/using/input/elec/vdwdisp.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/vdwdisp.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,12 @@
+.. _vdwdisp:
+
+vdwdisp
+=======
+
+Specify whether the attractive van der Waals contribution to the geometric flow potential is on or off.
+
+.. code-block:: bash
+
+    vdwdisp { flag }
+
+where ``flag`` is 0 (vdw off) or 1 (vdw on).
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/writemat.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/writemat.rst
--- apbs-3.0.0/docs/using/input/elec/writemat.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/writemat.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,22 @@
+.. _writemat:
+
+writemat
+========
+
+This controls the output of the mathematical operators in the Poisson-Boltzmann equation as matrices in Harwell-Boeing matrix format (multigrid only).
+The syntax is:
+
+.. code-block:: bash
+   
+   writemat {type} {stem}
+
+where
+
+``type``
+  A string that indicates what type of operator to output.
+
+  ``poisson``
+    Write out the Poisson operator :math:`-\nabla \cdot \epsilon \nabla`.
+
+``stem``
+  A string that specifies the path for the output.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/write.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/write.rst
--- apbs-3.0.0/docs/using/input/elec/write.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/write.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,84 @@
+.. _write:
+
+write
+=====
+
+This controls the output of scalar data calculated during the Poisson-Boltzmann run.
+This keyword can be repeated several times to provide various types of data output from APBS.
+The syntax is:
+
+.. code-block:: bash
+
+   write {type} {format} {stem}
+
+``type``
+  A string indicating what type of data to output:</p>
+
+  ``charge``
+    Write out the biomolecular charge distribution in units of e\ :sub:`c` (electron charge) per Å\ :sup:`3` (multigrid only).
+  ``pot``
+    Write out the electrostatic potential over the entire problem domain in units of k\ :sub:`b` T e\ :sub:`c`\ :sup:`-1` (multigrid and finite element), where
+
+    k\ :sub:`b`
+      Boltzmann's constant:  1.3806504 × 10\ :sup:`−23` J K\ :sup:`-1`
+
+    T
+      The temperature of your calculation in K
+
+    e\ :sub:`c`
+      is the charge of an electron:  1.60217646 × 10\ :sup:`-19` C
+
+    As an example, if you ran your calculation at 300 K, then the potential would be written out as multiples of
+    k\ :sub:`b` T e\ :sub:`c`\ :sup:`-1` = (1.3806504 × 10\ :sup:`−23` J K\ :sup:`-1`) × (300 K) × (1.60217646 × 10\ :sup:`-19` C)\ :sup:`-1` = (4.1419512 × 10\ :sup:`-21` J) × (6.241509752 × 10\ :sup:`18` C\ :sup:`-1`) = 25.85202 mV
+
+  ``atompot``
+    Write out the electrostatic potential at each atom location in units of k\ :sub:`b` T e\ :sub:`c`\ :sup:`-1` (multigrid and finite element).
+  ``smol``
+    Write out the solvent accessibility defined by the molecular surface definition (see :ref:`elecsrfm` ``smol``).
+    Values are unitless and range from 0 (inaccessible) to 1 (accessible). (multigrid and finite element).
+  ``sspl``
+    Write out the spline-based solvent accessibility (see :ref:`elecsrfm` ``spl2``).
+    Values are unitless and range from 0 (inaccessible) to 1 (accessible) (multigrid and finite element)
+  ``vdw``
+    Write out the van der Waals-based solvent accessibility (see :ref:`elecsrfm` ``smol`` with :ref:`srad` 0.0).
+    Values are unitless and range from 0 (inaccessible) to 1 (accessible). (multigrid and finite element)
+  ``ivdw``
+    Write out the inflated van der Waals-based ion accessibility (see :ref:`elecsrfm` ``smol``).
+    Values are unitless and range from 0 (inaccessible) to 1 (accessible). (multigrid and finite element)
+  ``lap``
+    Write out the Laplacian of the potential :math:`\nabla^2 \phi` in units of k\ :sub:`B` T e\ :sub:`c`\ :sup:`-1` Å\ :sup:`-2`  (multigrid only).
+  ``edens``
+    Write out the "energy density" :math:`-\nabla \cdot \epsilon \nabla \phi` in units of k\ :sub:`B` T e\ :sub:`c`\ :sup:`-1` Å\ :sup:`-2`  (multigrid only).
+  ``ndens``
+    Write out the total mobile ion number density for all ion species in units of M (multigrid only).
+    The output is calculated according to the formula (for nonlinear PB calculations):  :math:`\rho(x) = \sum_i^N {\bar{\rho}_i e^{-q_i\phi(x) - V_i (x)}}`, where *N* is the number of ion species, :math:`\bar{\rho}_i` is the bulk density of ion species *i*, :math:`q_i` is the charge of ion species *i*, :math:`\phi(x)` is the electrostatic potential, and :math:`V_i` is the solute-ion interaction potential for species *i*.
+  ``qdens``
+    Write out the total mobile ion charge density for all ion species in units of e\ :sub:`c` M (multigrid only).
+    The output is calculated according to the formula (for nonlinear PB calculations):  :math:`\rho(x) = \sum_i^N {\bar{\rho}_i q_i e^{-q_i\phi(x) - V_i (x)}}`, where *N* is the number of ion species, :math:`\bar{\rho}_i` is the bulk density of ion species *i*, :math:`q_i` is the charge of ion species *i*, :math:`\phi(x)` is the electrostatic potential, and :math:`V_i` is the solute-ion interaction potential for species *i*.
+  ``dielx`` or ``diely`` or ``dielz``
+    Write out the dielectric map shifted by 1/2 grid spacing in the {x, y, z}-direction (see :ref:`read` ``diel``).
+    The values are unitless (multigrid only).
+
+``format``
+  A string that specifies the format for writing out the data:
+
+  ``dx``
+    Write out data in :doc:`/formats/opendx`.
+    This is the preferred format for APBS I/O. (multigrid and finite element).
+
+  ``avs``
+    Write out data in AVS UCD format. (finite element only).
+
+  ``uhbd``
+    Write out data in :doc:`/formats/uhbd`. (multigrid only).
+
+  ``gz``
+    Write out :doc:`/formats/opendx` in gzipped (zlib) compatible format.
+    Appends .dx.gz to the filename.
+
+  ``flat``
+    Write out data as a plain text file. (multigrid and finite element).
+
+``stem``
+  A string that specifies the path for the output; files are written to :file:`stem.{XYZ}`, where ``XYZ`` is determined by the file format (and processor rank for parallel calculations).
+  If the pathname contains spaces, then it must be surrounded by double quotes.
diff --new-file -ru apbs-3.0.0/docs/using/input/elec/xyz.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/xyz.rst
--- apbs-3.0.0/docs/using/input/elec/xyz.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/elec/xyz.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,23 @@
+.. _xyz:
+
+xyz
+===
+
+For each molecule in the system and for each trajectory, specify a xyz file for the starting position of that molecule.
+The syntax is:
+
+.. code-block:: bash
+   
+   xyz {molecule_id} {filename}
+
+``molecule_id``
+  An integer (starting at 1) of the molecule index from the READ  section
+
+``filename``
+  The name of the file for the xyz coordinates of the molecule center for a given trajectory.
+  The trajectories for a given molecule should be ordered sequentially in the ELEC section. </p>
+
+.. todo::
+   
+   It would be nice to incorporate the ``xyz`` functionality into the :ref:`read` block.
+   Documented in https://github.com/Electrostatics/apbs-pdb2pqr/issues/505
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/bconc.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/bconc.rst
--- apbs-3.0.0/docs/using/input/generic/bconc.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/bconc.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _bconc:
+
+bconc
+=====
+
+This keyword specifies the bulk solvent density.
+This coefficient multiplies the integral term of the apolar model discussed above and can be set to zero to eliminate integral contributions to the apolar solvation calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   bconc <density>
+
+where ``density`` is a floating point number giving the bulk solvent density in Å\ :superscript:`-3`.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/calcenergy.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/calcenergy.rst
--- apbs-3.0.0/docs/using/input/generic/calcenergy.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/calcenergy.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,23 @@
+.. _calcenergy:
+
+calcenergy
+==========
+
+This optional keyword controls energy output from an apolar solvation calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   calcenergy <flag>
+
+where ``flag`` is a string denoting what type of energy to calculate:
+
+``no``
+  (Deprecated) Don't calculate any energies.
+``total``
+  Calculate and return total apolar energy for the entire molecule.
+``comps``
+  Calculate and return total apolar energy for the entire molecule as well as the energy components for each atom.
+
+.. note::
+   This option must be used consistently (with the same ``flag`` value) for all calculations that will appear in subsequent :ref:`print` statements.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/calcforce.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/calcforce.rst
--- apbs-3.0.0/docs/using/input/generic/calcforce.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/calcforce.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,36 @@
+.. _calcforce:
+
+calcforce
+=========
+
+This optional keyword controls energy output from an apolar solvation calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   calcforce {flag}
+
+where ``flag`` is a text string that specifies the types of force values to be returned:
+
+``no``
+  (Deprecated) don't calculate any forces.
+``total``
+  Calculate and return total electrostatic and apolar forces for the entire molecule.
+``comps``
+  Calculate and return total electrostatic and apolar forces for the entire molecule as well as force components for each atom.<br />
+
+The possible outputs from calcforce are:
+
+``tot {n}``
+  total force for atom *n*
+``qf {n}``
+  fixed charge force for atom *n*
+``db {n}``
+  dielectric boundary force for atom *n*
+``ib {n}``
+  ionic boundary force for atom *n*
+
+The values will be printed in three columns which correspond to the x, y, and z components of the force vector.
+
+.. note::
+   This option must be used consistently (with the same ``flag`` value) for all calculations that will appear in subsequent :ref:`print` statements.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/grid.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/grid.rst
--- apbs-3.0.0/docs/using/input/generic/grid.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/grid.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,14 @@
+.. _grid:
+
+grid
+====
+
+Specify the grid spacings for multigrid and volume integral calculations.
+This value may be different in each direction.
+The syntax is:
+
+.. code-block:: bash
+
+   grid {hx hy hz}
+
+where ``hx hy hz`` are the (floating point) grid spacings in the x-, y-, and z-directions (respectively) in Å.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/mol.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/mol.rst
--- apbs-3.0.0/docs/using/input/generic/mol.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/mol.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _mol:
+
+mol
+===
+
+This term specifies the molecule for which the calculation is to be performed.
+The syntax is:
+
+.. code-block:: bash
+   
+   mol {id}
+   
+
+where ``id`` is the integer ID of the molecule for which the apolar calculation is to be performed.
+The molecule IDs are based on the order in which molecules are read by ``READ mol`` statements (see :ref:`read`), starting from 1.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/sdens.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/sdens.rst
--- apbs-3.0.0/docs/using/input/generic/sdens.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/sdens.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,18 @@
+.. _sdens:
+
+sdens
+=====
+
+This keyword specifies the number of quadrature points per Å\ :superscript:`2` to use in calculation surface terms (e.g., molecular surface, solvent accessible surface).
+This keyword is ignored when :ref:`srad` is 0.0 (e.g., for van der Waals surfaces) or when :ref:`elecsrfm` is ``spl2`` (e.g., for spline surfaces).
+The syntax is:
+
+.. code-block:: bash
+
+   sdens {density}
+
+where ``density`` is a floating point number indicating the number of grid points per Å\ :superscript:`-2`.
+A typical value is 10.0.
+
+.. note::
+   There is a strong correlation between the value used for the sphere density, the accuracy of the results, and the APBS calculation time.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/srad.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/srad.rst
--- apbs-3.0.0/docs/using/input/generic/srad.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/srad.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,16 @@
+.. _srad:
+
+srad
+====
+
+This keyword specifies the radius of the solvent molecules; this parameter is used to define various solvent-related surfaces and volumes (see :ref:`elecsrfm`).
+This value is usually set to 1.4 Å for a water-like molecular surface and set to 0 Å for a van der Waals surface.
+The syntax is:
+
+.. code-block:: bash
+
+   srad {radius}
+
+where ``radius`` is the floating point value of the solvent radius (in Å).
+This keyword is ignored for ``srfm spl2`` (see :ref:`elecsrfm`).
+
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/swin.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/swin.rst
--- apbs-3.0.0/docs/using/input/generic/swin.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/swin.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,15 @@
+.. _swin:
+
+swin
+====
+
+Specify the size of the support (i.e., the rate of change) for spline-based surface definitions (see :ref:`elecsrfm`).
+The syntax is:
+
+.. code-block:: bash
+   
+   swin {win}
+
+where ``win`` is a floating point number for the spline window width (in Å).
+Usually 0.3 Å.</p>
+Note that, per the analysis of Nina, Im, and Roux (`article <http://dx.doi.org/10.1016/S0301-4622(98)00236-1>`_)</a>, the force field parameters (radii) generally need to be adjusted if the spline window is changed.
diff --new-file -ru apbs-3.0.0/docs/using/input/generic/temp.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/temp.rst
--- apbs-3.0.0/docs/using/input/generic/temp.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/generic/temp.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,13 @@
+.. _temp:
+
+temp
+====
+
+This keyword specifies the temperature for the calculation.
+The syntax is:
+
+.. code-block:: bash
+
+   temp {T}
+
+where ``T`` is the floating point value of the temperature for calculation (in K).
diff --new-file -ru apbs-3.0.0/docs/using/input/print.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/print.rst
--- apbs-3.0.0/docs/using/input/print.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/print.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,45 @@
+.. _print:
+
+PRINT input file section
+========================
+
+This is a very simple section that allows linear combinations of calculated properties to be written to standard output.
+The syntax of this section is:
+
+.. code-block:: bash
+
+    PRINT {what} [id op id op...] END
+
+The first mandatory argument is ``what``, the quantity to manipulate or print.
+This variable is a string that can assume the following values:
+
+``elecEnergy``
+  Print electrostatic energies as calculated with an earlier :ref:`elec` :ref:`calcenergy` command.
+``elecForce``
+  Print electrostatic forces as calculated with an earlier :ref:`elec` :ref:`calcforce` command.
+``apolEnergy``
+  Print apolar energies as calculated with an earlier :ref:`apolar` :ref:`calcenergy` command.
+``apolForce``
+  Print electrostatic forces as calculated with an earlier :ref:`apolar` :ref:`calcforce` command.
+
+The next arguments are a series of ``id op id op id op ... id`` commands where every ``id`` is immediately followed by an ``op`` and another ``id``.
+
+``id``
+  This is a variable string or integer denoting the ID of a particular :ref:`elec` or :ref:`apolar` calculations.
+  String values of ``id`` correspond to the optional "names" that can be assigned to :ref:`elec` or :ref:`apolar` calculations.
+  Integer values of id are assumed to corresponding to the sequentially-assigned integer IDs for :ref:`elec` or :ref:`apolar` calculations.
+  These IDs start at 1 and are incremented (independently) for each new :ref:`elec` or :ref:`apolar` calculation.
+``op``
+  Specify the arithmetic operation (``+`` for addition and ``-`` for subtraction) to be performed on the calculated quantities
+
+For example:
+
+.. code-block:: python
+
+   # Energy change due to binding
+   print energy complex - ligand - protein end
+   # Energy change due to solvation
+   print energy solvated - reference end
+   # Solvation energy change due to binding
+   print energy complex_solv - complex_ref - ligand_solv + ligand_ref - protein_solv + protein_ref end
+
diff --new-file -ru apbs-3.0.0/docs/using/input/read.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/read.rst
--- apbs-3.0.0/docs/using/input/read.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/input/read.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,198 @@
+.. _read:
+
+READ input file section
+=======================
+
+The READ block of an APBS input file has the following general format:
+
+.. code-block:: bash
+   
+   READ
+       [ keywords... ]
+   END
+
+where ``keywords`` is or more of the keywords described below (the line breaks and indentation are for clarity; only whitespace is necessary).
+
+.. note::
+   One of these sections must be present for every molecule involved in the APBS calculation.
+   Molecule and "map" IDs are assigned implicitly assigned for each molecule/map read, based on order and starting at 1 and incremented independently for each input type.
+   In other words, each input PQR file is assigned an ID 1, 2, 3, ...; each input dielectric map is assigned an independent ID 1, 2, 3, ...; etc.
+
+------
+charge
+------
+
+This command allows APBS to read the fixed (molecular) charge density function mapped to a mesh.
+The inputs are maps of charge densities; these values have units of e\ :sub:`c` Å\ :sup:`-3`, where e\ :sub:`c` is the electron charge.
+In general, this command will read charge-maps written by :ref:`elec` :ref:`write` commands.
+The syntax of this command is:
+
+.. code-block:: bash
+
+   READ charge {format} {path} END 
+
+``format``
+  Specify the format of the charge map.
+  Acceptable values include:
+
+  ``dx``
+    :ref:`opendx`
+
+  ``gz``
+    gzipped (zlib) compressed :ref:`opendx`.
+    Files can be read directly in compressed form.
+
+``path``
+  The location of the charge map file.
+
+
+----
+diel
+----
+
+This command allows APBS to read the dielectric function mapped to 3 meshes shifted by one-half grid spacing in the x, y, and z directions.
+The inputs are maps of dielectric variables between the solvent and biomolecular dielectric constants; these values are unitless.
+In general, this command will read dielectric maps written by by :ref:`elec` :ref:`write` commands.
+The syntax of this command is:
+
+.. code-block:: bash
+
+   READ diel {format} {path-x} {path-y} {path-z} END
+
+``format``
+  The format of the dielectric map.
+
+  ``dx``
+    :ref:`opendx`
+  
+  ``gz``
+    gzipped (zlib) compressed :ref:`opendx`.
+    Files can be read directly in compressed form.
+
+``path-x``
+  The location of the x-shifted dielectric map file.
+
+``path-y``
+  The location of the y-shifted dielectric map file.
+
+``path-z`` The location of the z-shifted dielectric map file.
+
+.. note::
+
+   If you choose this option and have a non-zero ionic strength, you must also include a READ kappa_ statement.
+
+-----
+kappa
+-----
+
+This command allows APBS to read the ion-accessibility function mapped to a mesh.
+The inputs are maps of ion accessibility values which range between 0 and the build Debye-Hückel screening parameter; these values have units of Å\ :sup:`-2`.
+In general, this command will read kappa-maps written by by :ref:`elec` :ref:`write` commands.
+The syntax of this command is:
+
+.. code-block:: bash
+
+   READ kappa {format} {path} END
+
+``format``
+  Specify the format of the charge map.
+  Acceptable values include:
+
+  ``dx``
+    :ref:`opendx`
+  
+  ``gz``
+    gzipped (zlib) compressed :ref:`opendx`.
+    Files can be read directly in compressed form.
+
+``path``
+  The location of the map file.
+
+
+.. note::
+
+   If you choose this option, you must also include a read diel statement.
+
+---
+mol
+---
+
+This command specifies the molecular data to be read into APBS.
+The syntax is
+
+.. code-block:: bash
+
+   READ mol {format} {path} END
+
+``format``
+  The format of the input data.
+
+  ``pqr``
+    Specify that molecular data is in :ref:`PQR format <pqr>`.
+  
+  ``pdb``
+    Specify that molecular data is in pseudo-PDB format.
+    If this type of structure file is used, then a parameter file must also be specified with a READ parm_ statement to provide charge and radius parameters for the biomolecule's atoms.
+
+``path``
+  The location of the molecular data file.
+
+----
+parm
+----
+
+This command specifies the charge and radius data to be used with pseudo-PDB-format molecule files.
+The syntax is:
+
+.. code-block:: bash
+
+   READ parm {format} {path} END
+
+``format``
+  The format of the parameter file.
+
+  ``flat``
+    Specify that the parameter file is in :ref:`APBS flat-file parameter format <apbsflatparm>`.
+
+  ``xml``
+    Specify that the parameter file is in :ref:`APBS XML parameter format <apbsxmlparm>`
+
+``path``
+  The location of the parameter data file.
+
+.. note::
+   
+   APBS provides a few example files as part of the source code distribution.
+   Currently, example files only contain the polar parameters that can also be assigned more easily through the PDB2PQR software.
+
+---
+pot
+---
+
+This command allows APBS to read the electrostatic potential mapped to a mesh.
+The inputs are maps of the electrostatic potential from a previous calculation.
+In general, this command will read potential-maps written by by :ref:`elec` :ref:`write` commands.
+The syntax of this command is:
+
+.. code-block:: bash
+
+   READ pot {format} {path} END
+
+``format``
+  Specify the format of the charge map.
+  Acceptable values include:
+
+  ``dx``
+    :ref:`opendx`
+
+  ``gz``
+    gzipped (zlib) compressed :ref:`opendx`.
+    Files can be read directly in compressed form.
+
+``path``
+  The location of the map file.
+
+.. note::
+   
+   To use this functionality you must set the :ref:`bcfl` keyword to ``map``.
+   See also: :ref:`usemap`.
diff --new-file -ru apbs-3.0.0/docs/using/tools.rst apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/tools.rst
--- apbs-3.0.0/docs/using/tools.rst	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/docs/using/tools.rst	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,168 @@
+--------------------
+Conversion utilities
+--------------------
+
+^^^^^^^^^^^^^^^
+amber2charmm.sh
+^^^^^^^^^^^^^^^
+
+A bash script for converting AMBER atom names to CHARMM names.
+Found in :file:`tools/conversion`
+
+^^^^^^
+del2dx
+^^^^^^
+
+Converts DelPhi-format map files (electrostatic potential, etc.) to APBS OpenDX format.
+Found in :file:`tools/mesh`
+
+^^^^^^
+dx2mol
+^^^^^^
+
+Converts OpenDX format map files to MolMol format.
+Found in :file:`tools/mesh`
+
+^^^^^^^
+dx2uhbd
+^^^^^^^
+
+Converts OpenDX format map files to UHBD format.
+Found in :file:`tools/mesh`
+
+^^^^^^^^^^^
+qcd2pqr.awk
+^^^^^^^^^^^
+
+An awk script for converting from UHBD QCD format to PQR format.
+
+----------------------
+Benchmarking utilities
+----------------------
+
+^^^^^^^^^
+benchmark
+^^^^^^^^^
+
+Benchmark file I/O for reading/writing scalar data.
+Found in :file:`tools/mesh`
+
+^^^^^^^^^^^^
+uhbd_asc2bin
+^^^^^^^^^^^^
+
+Converts UHBD ASCII-format files to binary format.
+Found in :file:`tools/mesh`
+
+^^^^^^^^^^^^^^^^
+WHATIF2AMBER.sed
+^^^^^^^^^^^^^^^^
+
+A sed script for converting WHATIF atoms names to the AMBER naming scheme.
+Found in :file:`tools/conversion`
+
+----------------------------
+Setup and analysis utilities
+----------------------------
+
+^^^^^^^^
+analysis
+^^^^^^^^
+
+Calculates various metrics from input scalar data.
+Found in :file:`tools/mesh`
+
+^^^^
+born
+^^^^
+
+Calculate generalized Born forces and energies.
+Found in :file:`tools/manip`
+
+^^^^^^^
+coulomb
+^^^^^^^
+
+Calculate Coulomb forces and energies.
+Found in :file:`tools/manip`
+
+.. _dxmath:
+
+^^^^^^
+dxmath
+^^^^^^
+
+Performs simple arithmetic operations with Cartesian grid data.  
+This program takes as input a file with operations specified in a stack-based (RPN) manner.
+For example, a command file which adds grid1 and grid2, multiplies the result by 5.3, adds grid4, subtracts 99.3 from the whole thing, and writes the result on grid5 would have the form:
+
+.. code-block:: mathematica
+   
+   grid1
+   grid2 +
+   5.3 *
+   grid4 +
+   99.3 -
+   grid5 =
+
+The file names, scalar values, and operations must be separated by tabs, line breaks, or white space.
+Comments can be included between the character # and a new line (in the usual shell script fashion).
+Found in :file:`tools/mesh`
+
+^^^^^^^^^^^
+inputgen.py
+^^^^^^^^^^^
+
+Create an APBS input file using :ref:`psize` data.
+Found in :file:`tools/manip`
+
+^^^^^^^^^^^^^^^^^^^^
+mergedx and mergedx2
+^^^^^^^^^^^^^^^^^^^^
+
+Combine multiple OpenDX files into a single resampled file.
+:program:`mergedx2` can perform a number of grid manipulation operations, including:
+
+* Combining multiple OpenDX map files
+* Resampling of one or more OpenDX map files (for example to alter the grid spacing of separate OpenDX files for further manipulation)
+* Extracting a subregion of an existing OpenDX map file.
+
+Found in :file:`tools/mesh`
+
+^^^^^^
+mgmesh
+^^^^^^
+
+Prints out acceptable combinations of :doc:`input/elec/nlev` and :doc:`input/elec/dime` for multigrd calculations.
+Found in :file:`tools/mesh`
+
+^^^^^^^^^^
+multivalue
+^^^^^^^^^^
+
+This program evaluates OpenDX scalar data at a series of user-specified points and returns the value of the data at each point.
+Found in :file:`tools/mesh`
+
+.. _psize:
+
+^^^^^^^^
+psize.py
+^^^^^^^^
+
+Suggest grid sizes and spacings for APBS given an input molecule.
+Found in :file:`tools/manip`
+
+^^^^^^^^^^
+similarity
+^^^^^^^^^^
+
+Computes similarity between two scalar grid datasets.
+Found in :file:`tools/mesh`
+
+^^^^^^
+smooth
+^^^^^^
+
+Convolve grid data with various filters.
+Found in :file:`tools/mesh`
+
diff --new-file -ru apbs-3.0.0/examples/actin-dimer/apbs-mol-auto.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-mol-auto.in
--- apbs-3.0.0/examples/actin-dimer/apbs-mol-auto.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-mol-auto.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ACTIN DIMER BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/actin-dimer/apbs-mol-parallel.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-mol-parallel.in
--- apbs-3.0.0/examples/actin-dimer/apbs-mol-parallel.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-mol-parallel.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #########################################################################/smo
-### ACTIN DIMER BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read
diff --new-file -ru apbs-3.0.0/examples/actin-dimer/apbs-smol-auto.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-smol-auto.in
--- apbs-3.0.0/examples/actin-dimer/apbs-smol-auto.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-smol-auto.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ACTIN DIMER BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/actin-dimer/apbs-smol-parallel.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-smol-parallel.in
--- apbs-3.0.0/examples/actin-dimer/apbs-smol-parallel.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/actin-dimer/apbs-smol-parallel.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ACTIN DIMER BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/bem/1a63_msms.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_msms.in
--- apbs-3.0.0/examples/bem/1a63_msms.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_msms.in	2020-09-29 19:12:06.000000000 +0200
@@ -21,7 +21,7 @@
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 1              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem/1a63_NanoShaper_SES.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_NanoShaper_SES.in
--- apbs-3.0.0/examples/bem/1a63_NanoShaper_SES.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_NanoShaper_SES.in	2020-09-29 19:12:06.000000000 +0200
@@ -21,7 +21,7 @@
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh ses               # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 1              # outdata (0 - dat file, 1 - dat and VTK file)
 end
diff --new-file -ru apbs-3.0.0/examples/bem/1a63_NanoShaper_Skin.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_NanoShaper_Skin.in
--- apbs-3.0.0/examples/bem/1a63_NanoShaper_Skin.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/1a63_NanoShaper_Skin.in	2020-09-29 19:12:06.000000000 +0200
@@ -21,7 +21,7 @@
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh                   # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh skin              # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 1              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem/451c_order1.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/451c_order1.in
--- apbs-3.0.0/examples/bem/451c_order1.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/451c_order1.in	2020-09-29 19:12:06.000000000 +0200
@@ -21,7 +21,7 @@
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh ses               # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 1              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem/451c_order5.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/451c_order5.in
--- apbs-3.0.0/examples/bem/451c_order5.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/451c_order5.in	2020-09-29 19:12:06.000000000 +0200
@@ -21,7 +21,7 @@
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh ses               # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 1              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem/README.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/README.md
--- apbs-3.0.0/examples/bem/README.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem/README.md	2020-09-29 19:12:06.000000000 +0200
@@ -6,12 +6,11 @@
 domain has to be discretized. This is particularly useful for problems in which the data
 of interest is at the boundary of the solution.
 
-This directory contains five example .in files.
+This directory contains four example .in files.
 
-Three examples calculate surface potentials for 1a63 in a 0.15 M salt solution:
-        1. 1a63_msms.in uses MSMS to create a solvent excluded surface (SES) triangulation.
-        2. 1a63_NanoShaper_SES.in uses NanoShaper to create an SES triangulation.
-        3. 1a63_NanoShaper_Skin.in uses NanoShaper to create a Skin surface triangulation.
+Two examples calculate surface potentials for 1a63 in a 0.15 M salt solution:
+        1. 1a63_NanoShaper_SES.in uses NanoShaper to create an SES triangulation.
+        2. 1a63_NanoShaper_Skin.in uses NanoShaper to create a Skin surface triangulation.
 
 Two examples calculate surface potentials for 451c in a 0.15 M salt solution:
         1. 451c_order1.in uses a 1st order Taylor series expansion for the treecode.
@@ -22,7 +21,7 @@
 
 Input File| APBS Version| Result (kJ/mol) | Expected (kJ/mol)
 ---|---|---|---
-[451c_order1.in](451c_order1.in)| **3.0**| **-4907.470**| -4907.443
+[451c_order1.in](451c_order1.in)| **3.0**| **-4907.441**| -4907.443
 | | 1.5| -4907.455|
 [451c_order5.in](451c_order5.in)| **3.0**| **-4920.112**| -4920.133
 | | 1.5| -4920.091|
diff --new-file -ru apbs-3.0.0/examples/bem-binding-energy/1d30.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30.in
--- apbs-3.0.0/examples/bem-binding-energy/1d30.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 1.0               # Solute dielectric
     sdie 80.00             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 5                # NO. of Elements per A^2
+    sdens 1.76             # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-binding-energy/1d30_monomer1.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30_monomer1.in
--- apbs-3.0.0/examples/bem-binding-energy/1d30_monomer1.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30_monomer1.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 1.0               # Solute dielectric
     sdie 80.00             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 5                # NO. of Elements per A^2
+    sdens 1.76             # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-binding-energy/1d30_monomer2.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30_monomer2.in
--- apbs-3.0.0/examples/bem-binding-energy/1d30_monomer2.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/1d30_monomer2.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 1.0               # Solute dielectric
     sdie 80.00             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 5                # NO. of Elements per A^2
+    sdens 1.76             # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-binding-energy/README.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/README.md
--- apbs-3.0.0/examples/bem-binding-energy/README.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-binding-energy/README.md	2020-09-29 19:12:06.000000000 +0200
@@ -16,9 +16,6 @@
 
 Input File| APBS Version| Result (kJ/mol)| Expected (kJ/mol)
 ---|---|---|---
-[1d30.in](1d30.in)| **3.0**| **-21961.965**| **-21961.946**
-| | 1.5| -21961.983|
-[1d30_monomer1.in](1d30_monomer1.in)| **3.0**| **-26075.345**| **-26075.316**
-| | 1.5| -26075.357|
-[1d30_monomer2.in](1d30_monomer2.in)| **3.0**| **-762.105**| **-762.103**
-| | 1.5| -762.103|
+[1d30.in](1d30.in)| **3.0**| **-22113.098**| **-22113.098**
+[1d30_monomer1.in](1d30_monomer1.in)| **3.0**| **-26225.275**| **-26225.275**
+[1d30_monomer2.in](1d30_monomer2.in)| **3.0**| **-779.948**| **-779.948**
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/2LZT-ASH66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-ASH66.in
--- apbs-3.0.0/examples/bem-pKa/2LZT-ASH66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-ASH66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 2.47                # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses              # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/2LZT-ASP66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-ASP66.in
--- apbs-3.0.0/examples/bem-pKa/2LZT-ASP66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-ASP66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 2.47               # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/2LZT-noASH66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-noASH66.in
--- apbs-3.0.0/examples/bem-pKa/2LZT-noASH66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-noASH66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 2.47                # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/2LZT-noASP66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-noASP66.in
--- apbs-3.0.0/examples/bem-pKa/2LZT-noASP66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/2LZT-noASP66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 2.47                # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms              # mesh options: msms, ses, skin. Options ses and skin require nonoshaper.
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/ASH66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/ASH66.in
--- apbs-3.0.0/examples/bem-pKa/ASH66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/ASH66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 10               # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh msms                 # mesh (0 - MSMS, 1 - NanoShaper SES, 2 - NanoShaper Skin)
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file)
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/ASP66.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/ASP66.in
--- apbs-3.0.0/examples/bem-pKa/ASP66.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/ASP66.in	2020-09-29 19:12:06.000000000 +0200
@@ -14,14 +14,14 @@
     pdie 20.0               # Solute dielectric
     sdie 78.54             # Solvent dielectric
     srad 1.4               # Solvent probe radius
-    sdens 10                # NO. of Elements per A^2
+    sdens 10               # NO. of Elements per A^2
     temp 298.00            # Temperature
 
     tree_order 3           # taylor expansion order
     tree_n0 500            # maxium particle per leaf
     mac 0.8                # multipole acceptance criterion
 
-    mesh 0                 # mesh (0 - MSMS, 1 - NanoShaper SES, 2 - NanoShaper Skin)
+    mesh ses               # mesh options: ses, skin. Options ses and skin require nonoshaper.
 
     outdata 0              # outdata (0 - dat file, 1 - dat and VTK file) 
 end
diff --new-file -ru apbs-3.0.0/examples/bem-pKa/README.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/README.md
--- apbs-3.0.0/examples/bem-pKa/README.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/bem-pKa/README.md	2020-09-29 19:12:06.000000000 +0200
@@ -19,9 +19,6 @@
 
 File Input| APBS Version| Result (kJ/mol)| Expected (kJ/mol)
 ---|---|---|---
-[ASH66.in](ASH66.in)| **3.0**| **-4.165**| **-4.165**
-| 1.5| -4.165|
-[2LTZ-ASH66.in](2LTZ-ASH66.in)| **3.0**| **-360.665**| **-360.665**
-| 1.5| -360.665|
-[2LTZ-noASH66.in](2LTZ-noASH66.in)| **3.0**| **-359.870**| **-359.870**
-| 1.5| -359.870|
+[ASH66.in](ASH66.in)| **3.0**| **-4.026**| **-4.026**
+[2LTZ-ASH66.in](2LTZ-ASH66.in)| **3.0**| **-369.020**| **-369.020**
+[2LTZ-noASH66.in](2LTZ-noASH66.in)| **3.0**| **-367.795**| **-367.795**
diff --new-file -ru apbs-3.0.0/examples/born/apbs-apolar.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-apolar.in
--- apbs-3.0.0/examples/born/apbs-apolar.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-apolar.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id: apbs.in 996 2006-11-27 19:21:40Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file syntax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/born/apbs-forces.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-forces.in
--- apbs-3.0.0/examples/born/apbs-forces.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-forces.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id: apbs-mol-auto.in 1119 2007-07-23 13:52:03Z sobolevnrm $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/born/apbs-mol-auto.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-auto.in
--- apbs-3.0.0/examples/born/apbs-mol-auto.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-auto.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/born/apbs-mol-fem-extmesh.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-fem-extmesh.in
--- apbs-3.0.0/examples/born/apbs-mol-fem-extmesh.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-fem-extmesh.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY -- FE method
-### $Id: apbs-mol-fem.in 1026 2006-12-29 16:02:16Z sobolevnrm $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY -- FE method
 #############################################################################
 read 
 	mol pqr ion.pqr
diff --new-file -ru apbs-3.0.0/examples/born/apbs-mol-fem.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-fem.in
--- apbs-3.0.0/examples/born/apbs-mol-fem.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-fem.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY -- FE method
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY -- FE method
 #############################################################################
 read 
     mol pqr ion.pqr
diff --new-file -ru apbs-3.0.0/examples/born/apbs-mol-parallel.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-parallel.in
--- apbs-3.0.0/examples/born/apbs-mol-parallel.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-mol-parallel.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/born/apbs-smol-auto.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-auto.in
--- apbs-3.0.0/examples/born/apbs-smol-auto.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-auto.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/born/apbs-smol-fem.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-fem.in
--- apbs-3.0.0/examples/born/apbs-smol-fem.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-fem.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY -- FE method
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY -- FE method
 #############################################################################
 read 
     mol pqr ion.pqr
diff --new-file -ru apbs-3.0.0/examples/born/apbs-smol-parallel.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-parallel.in
--- apbs-3.0.0/examples/born/apbs-smol-parallel.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/born/apbs-smol-parallel.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id: apbs-smol-parallel.in 1346 2009-02-10 21:11:14Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/examples/FKBP/1d7h-dmso-mol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7h-dmso-mol.in
--- apbs-3.0.0/examples/FKBP/1d7h-dmso-mol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7h-dmso-mol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### 1D7H/DMSO BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# 1D7H/DMSO BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/FKBP/1d7h-dmso-smol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7h-dmso-smol.in
--- apbs-3.0.0/examples/FKBP/1d7h-dmso-smol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7h-dmso-smol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### 1D7H/DMSO BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# 1D7H/DMSO BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/FKBP/1d7i-dss-mol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7i-dss-mol.in
--- apbs-3.0.0/examples/FKBP/1d7i-dss-mol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7i-dss-mol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### 1D7I/DSS BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# 1D7I/DSS BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/FKBP/1d7i-dss-smol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7i-dss-smol.in
--- apbs-3.0.0/examples/FKBP/1d7i-dss-smol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/FKBP/1d7i-dss-smol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### 1D7I/DSS BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# 1D7I/DSS BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/hca-bind/apbs-mol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/hca-bind/apbs-mol.in
--- apbs-3.0.0/examples/hca-bind/apbs-mol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/hca-bind/apbs-mol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### HCA/ACETAZOLAMIDE BINDING
-### $Id$
-###
-###  Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# HCA/ACETAZOLAMIDE BINDING
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/hca-bind/apbs-smol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/hca-bind/apbs-smol.in
--- apbs-3.0.0/examples/hca-bind/apbs-smol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/hca-bind/apbs-smol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### HCA/ACETAZOLAMIDE BINDING
-### $Id$
-###
-###  Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# HCA/ACETAZOLAMIDE BINDING
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/helix/Apbs_dummy.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_dummy.in
--- apbs-3.0.0/examples/helix/Apbs_dummy.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_dummy.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### TM SOLVATION ENERGY
-### : apbs.in 998 2006-11-28 21:24:40Z sobolevnrm $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# TM SOLVATION ENERGY
 #############################################################################
 # READ IN MOLECULES
 read
diff --new-file -ru apbs-3.0.0/examples/helix/Apbs_dummy-TEMPLATE.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_dummy-TEMPLATE.in
--- apbs-3.0.0/examples/helix/Apbs_dummy-TEMPLATE.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_dummy-TEMPLATE.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### TM SOLVATION ENERGY
-### : apbs.in 998 2006-11-28 21:24:40Z sobolevnrm $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# TM SOLVATION ENERGY
 #############################################################################
 # READ IN MOLECULES
 read
diff --new-file -ru apbs-3.0.0/examples/helix/Apbs_solv-TEMPLATE.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_solv-TEMPLATE.in
--- apbs-3.0.0/examples/helix/Apbs_solv-TEMPLATE.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/helix/Apbs_solv-TEMPLATE.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,7 +1,5 @@
 #############################################################################
-### TM SOLVATION ENERGY
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# TM SOLVATION ENERGY
 #############################################################################
 # READ IN MOLECULES
 read
diff --new-file -ru apbs-3.0.0/examples/ion-pmf/complex.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-pmf/complex.in
--- apbs-3.0.0/examples/ion-pmf/complex.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-pmf/complex.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-ION PMF
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-ION PMF
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/ion-pmf/ion-pmf.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-pmf/ion-pmf.in
--- apbs-3.0.0/examples/ion-pmf/ion-pmf.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-pmf/ion-pmf.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-ION PMF
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-ION PMF
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/ion-protein/apbs-mol-pdiel12.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-mol-pdiel12.in
--- apbs-3.0.0/examples/ion-protein/apbs-mol-pdiel12.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-mol-pdiel12.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-PROTEIN BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-PROTEIN BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/ion-protein/apbs-mol-pdiel2.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-mol-pdiel2.in
--- apbs-3.0.0/examples/ion-protein/apbs-mol-pdiel2.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-mol-pdiel2.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-PROTEIN BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-PROTEIN BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/ion-protein/apbs-smol-pdiel12.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-smol-pdiel12.in
--- apbs-3.0.0/examples/ion-protein/apbs-smol-pdiel12.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-smol-pdiel12.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-PROTEIN BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-PROTEIN BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/ion-protein/apbs-smol-pdiel2.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-smol-pdiel2.in
--- apbs-3.0.0/examples/ion-protein/apbs-smol-pdiel2.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/ion-protein/apbs-smol-pdiel2.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ION-PROTEIN BINDING ENERGY
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ION-PROTEIN BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/misc/apbs.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/misc/apbs.in
--- apbs-3.0.0/examples/misc/apbs.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/misc/apbs.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POTENTIAL CALCULATION EXAMPLE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POTENTIAL CALCULATION EXAMPLE
 ##########################################################################
 
 
diff --new-file -ru apbs-3.0.0/examples/misc/apbs-PDB.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/misc/apbs-PDB.in
--- apbs-3.0.0/examples/misc/apbs-PDB.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/misc/apbs-PDB.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POTENTIAL CALCULATION FROM PDB FILE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POTENTIAL CALCULATION FROM PDB FILE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/opal/actin-dimer.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/opal/actin-dimer.in
--- apbs-3.0.0/examples/opal/actin-dimer.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/opal/actin-dimer.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ACTIN DIMER BINDING ENERGY
-### $Id: apbs-mol-auto.in 1258 2008-04-10 17:50:16Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/opal/actin-dimer-para.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/opal/actin-dimer-para.in
--- apbs-3.0.0/examples/opal/actin-dimer-para.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/opal/actin-dimer-para.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #########################################################################
-### ACTIN DIMER BINDING ENERGY
-### $Id: apbs-mol-parallel.in 1258 2008-04-10 17:50:16Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ACTIN DIMER BINDING ENERGY
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/pbsam-barn_bars/barn_bars_electro.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-barn_bars/barn_bars_electro.in
--- apbs-3.0.0/examples/pbsam-barn_bars/barn_bars_electro.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-barn_bars/barn_bars_electro.in	2020-09-29 19:12:06.000000000 +0200
@@ -12,7 +12,7 @@
     units kT
     ## info for molecule
     tolsp 4.5
-    mesh msms  #comment if the system has been coarse-grained
+    mesh skin  #comment if the system has been coarse-grained
 
    #usemesh barstar.vert # uncomment if system needs to be CGed
    #usemesh barnase.vert # uncomment if system needs to be CGed
diff --new-file -ru apbs-3.0.0/examples/pbsam-gly/gly_dynamics.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_dynamics.in
--- apbs-3.0.0/examples/pbsam-gly/gly_dynamics.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_dynamics.in	2020-09-29 19:12:06.000000000 +0200
@@ -12,7 +12,7 @@
 
     units kT
     ## info for molecule
-    #mesh msms
+    #mesh skin
     tolsp 2.5
 
    #imat imat/mol0sph
diff --new-file -ru apbs-3.0.0/examples/pbsam-gly/gly_electrostatic.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_electrostatic.in
--- apbs-3.0.0/examples/pbsam-gly/gly_electrostatic.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_electrostatic.in	2020-09-29 19:12:06.000000000 +0200
@@ -9,7 +9,7 @@
 
     units jmol
     ## info for molecule
-    mesh msms
+    mesh skin
     tolsp 2.5
 
     temp 298.15                                       # System temperature (K)
diff --new-file -ru apbs-3.0.0/examples/pbsam-gly/gly_energyforce.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_energyforce.in
--- apbs-3.0.0/examples/pbsam-gly/gly_energyforce.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/gly_energyforce.in	2020-09-29 19:12:06.000000000 +0200
@@ -12,7 +12,7 @@
 
     units kT
     ## info for molecule
-    #mesh msms
+    #mesh skin
     tolsp 2.5
 
    #imat imat/mol0sph
diff --new-file -ru apbs-3.0.0/examples/pbsam-gly/msms/gly_electrostatic.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/msms/gly_electrostatic.in
--- apbs-3.0.0/examples/pbsam-gly/msms/gly_electrostatic.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pbsam-gly/msms/gly_electrostatic.in	2020-09-29 19:12:06.000000000 +0200
@@ -9,7 +9,7 @@
 
     units jmol
     ## info for molecule
-    mesh msms
+    mesh skin
     tolsp 2.5
 
     temp 298.15                                       # System temperature (K)
diff --new-file -ru apbs-3.0.0/examples/pka-lig/apbs-mol-surf.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-mol-surf.in
--- apbs-3.0.0/examples/pka-lig/apbs-mol-surf.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-mol-surf.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### PROTEIN KINASE INHIBITOR BINDING ENERGY -- MOLECULAR SURFACE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# PROTEIN KINASE INHIBITOR BINDING ENERGY -- MOLECULAR SURFACE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/pka-lig/apbs-mol-vdw.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-mol-vdw.in
--- apbs-3.0.0/examples/pka-lig/apbs-mol-vdw.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-mol-vdw.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/pka-lig/apbs-smol-surf.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-smol-surf.in
--- apbs-3.0.0/examples/pka-lig/apbs-smol-surf.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-smol-surf.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### PROTEIN KINASE INHIBITOR BINDING ENERGY -- MOLECULAR SURFACE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# PROTEIN KINASE INHIBITOR BINDING ENERGY -- MOLECULAR SURFACE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/pka-lig/apbs-smol-vdw.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-smol-vdw.in
--- apbs-3.0.0/examples/pka-lig/apbs-smol-vdw.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/pka-lig/apbs-smol-vdw.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/apbs.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/apbs.in
--- apbs-3.0.0/examples/point-pmf/apbs.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/apbs.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/complex-0_1.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_1.in
--- apbs-3.0.0/examples/point-pmf/complex-0_1.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_1.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/complex-0_2.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_2.in
--- apbs-3.0.0/examples/point-pmf/complex-0_2.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_2.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/complex-0_3.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_3.in
--- apbs-3.0.0/examples/point-pmf/complex-0_3.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_3.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/complex-0_4.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_4.in
--- apbs-3.0.0/examples/point-pmf/complex-0_4.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/complex-0_4.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/point-pmf/point-pmf-0.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/point-pmf-0.in
--- apbs-3.0.0/examples/point-pmf/point-pmf-0.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/point-pmf/point-pmf-0.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### POINT CHARGE POTENTIAL OF MEAN FORCE
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# POINT CHARGE POTENTIAL OF MEAN FORCE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/protein-rna/apbs_dx.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/protein-rna/apbs_dx.py
--- apbs-3.0.0/examples/protein-rna/apbs_dx.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/protein-rna/apbs_dx.py	2020-09-29 19:12:06.000000000 +0200
@@ -5,8 +5,8 @@
 """
 
 MY_LIST = ('0.025', '0.050', '0.075', '0.100', '0.125', '0.150', '0.175',
-           '0.200', '0.225', '0.250', '0.275', '0.300', '0.325', '0.400', '0.500',
-           '0.600', '0.700', '0.800')
+           '0.200', '0.225', '0.250', '0.275', '0.300', '0.325', '0.400',
+           '0.500', '0.600', '0.700', '0.800')
 
 with open("template.txt", "r") as temp:
     TEMPLATE_TEXT = temp.read()
diff --new-file -ru apbs-3.0.0/examples/protein-rna/fit.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/protein-rna/fit.py
--- apbs-3.0.0/examples/protein-rna/fit.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/protein-rna/fit.py	2020-09-29 19:12:06.000000000 +0200
@@ -7,94 +7,95 @@
 import math
 from sys import stdin, stdout, stderr
 
-""" Accepts list of x,y pairs as input.  Returns dictionary of resuls """
-def fit(data):
-	outdict = {}
 
-	# Get means
-	xmean = 0
-	ymean = 0
-	ndata = len(data)
-	for pair in data:
-		x = pair[0]
-		y = pair[1]
-		xmean = xmean + x
-		ymean = ymean + y
-	xmean = xmean/float(ndata)
-	ymean = ymean/float(ndata)
-	outdict["x mean"] = xmean
-	outdict["y mean"] = ymean
-
-	# Get variances
-	sxx = 0
-	syy = 0
-	sxy = 0
-	for pair in data:
-		x = pair[0]
-		y = pair[1]
-		sxx = sxx + (x-xmean)*(x-xmean)
-		syy = syy + (y-ymean)*(y-ymean)
-		sxy = sxy + (x-xmean)*(y-ymean)
-	covxx = sxx/float(ndata)
-	covyy = syy/float(ndata)
-	covxy = sxy/float(ndata)
-	outdict["xx covariance"] = covxx
-	outdict["xy covariance"] = covxy
-	outdict["yy covariance"] = covyy
-
-	# Slope
-	b = sxy/sxx
-	outdict["slope"] = b
-
-	# Intercept
-	a = ymean - b*xmean
-	outdict["intercept"] = a
-
-	# Correlation coefficient
-	r2 = sxy*sxy/sxx/syy
-	outdict["correlation coefficient (r^2)"] = r2
-
-	# Residual variance
-	s2 = (syy - b*sxy)/(float(ndata)-2)
-	s = math.sqrt(s2)
-	outdict["residual variance (s^2)"] = s2
-
-	# Slope error
-	eb = s/math.sqrt(sxx)
-	outdict["slope error"] = eb
-
-	# Intercept error
-	ea = s*math.sqrt((1/float(ndata)) + xmean*xmean/sxx)
-	outdict["intercept error"] = ea
+def fit(data):
+    """ Accepts list of x,y pairs as input.  Returns dictionary of resuls """
+    outdict = {}
 
-	return outdict
+    # Get means
+    xmean = 0
+    ymean = 0
+    ndata = len(data)
+    for pair in data:
+        x = pair[0]
+        y = pair[1]
+        xmean = xmean + x
+        ymean = ymean + y
+    xmean = xmean/float(ndata)
+    ymean = ymean/float(ndata)
+    outdict["x mean"] = xmean
+    outdict["y mean"] = ymean
+
+    # Get variances
+    sxx = 0
+    syy = 0
+    sxy = 0
+    for pair in data:
+        x = pair[0]
+        y = pair[1]
+        sxx = sxx + (x-xmean)*(x-xmean)
+        syy = syy + (y-ymean)*(y-ymean)
+        sxy = sxy + (x-xmean)*(y-ymean)
+    covxx = sxx/float(ndata)
+    covyy = syy/float(ndata)
+    covxy = sxy/float(ndata)
+    outdict["xx covariance"] = covxx
+    outdict["xy covariance"] = covxy
+    outdict["yy covariance"] = covyy
+
+    # Slope
+    b = sxy/sxx
+    outdict["slope"] = b
+
+    # Intercept
+    a = ymean - b*xmean
+    outdict["intercept"] = a
+
+    # Correlation coefficient
+    r2 = sxy*sxy/sxx/syy
+    outdict["correlation coefficient (r^2)"] = r2
+
+    # Residual variance
+    s2 = (syy - b*sxy)/(float(ndata)-2)
+    s = math.sqrt(s2)
+    outdict["residual variance (s^2)"] = s2
+
+    # Slope error
+    eb = s/math.sqrt(sxx)
+    outdict["slope error"] = eb
+
+    # Intercept error
+    ea = s*math.sqrt((1/float(ndata)) + xmean*xmean/sxx)
+    outdict["intercept error"] = ea
 
-"""Main driver; reads from stdin"""
-def main():
-	infile = stdin
-	stdout.write("Reading data from %s...\n" % infile.name)
+    return outdict
 
-	data = []
-	while (1):
-		line = infile.readline()
-		if line == "":
-			break
-		line.strip()
-		words = line.split()
-		try:
-			pair1 = float(words[0])
-			pair2 = float(words[1])
-			data.append((pair1, pair2))
-		except Exception, str:
-			stderr.write("Ignoring unparseable line:  %s\n" % line)
-	stdout.write("Read %d data points.\n" % len(data));
-	fitdict = fit(data);
-	keys = fitdict.keys()
-	keys.sort()
-	stdout.write("\nRESULTS:\n")
-	for key in keys:
-	    stdout.write("%s:  %g\n" % (key, fitdict[key]))
 
+def main():
+    """Main driver; reads from stdin"""
+    infile = stdin
+    stdout.write("Reading data from %s...\n" % infile.name)
+
+    data = []
+    while (1):
+        line = infile.readline()
+        if line == "":
+            break
+        line.strip()
+        words = line.split()
+        try:
+            pair1 = float(words[0])
+            pair2 = float(words[1])
+            data.append((pair1, pair2))
+        except Exception:
+            stderr.write("Ignoring unparseable line:  %s\n" % line)
+    stdout.write("Read %d data points.\n" % len(data))
+    fitdict = fit(data)
+    keys = fitdict.keys()
+    keys.sort()
+    stdout.write("\nRESULTS:\n")
+    for key in keys:
+        stdout.write("%s:  %g\n" % (key, fitdict[key]))
 
 
 if __name__ == "__main__":
diff --new-file -ru apbs-3.0.0/examples/solv/apbs-mol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/solv/apbs-mol.in
--- apbs-3.0.0/examples/solv/apbs-mol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/solv/apbs-mol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/examples/solv/apbs-smol.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/solv/apbs-smol.in
--- apbs-3.0.0/examples/solv/apbs-smol.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/examples/solv/apbs-smol.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
-### $Id$
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/externals/boost/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/externals/boost/CMakeLists.txt
--- apbs-3.0.0/externals/boost/CMakeLists.txt	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/externals/boost/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
@@ -1,27 +0,0 @@
-
-#  From https://www.youtube.com/watch?v=y9kSr5enrSk (41 minutes into)
-
-set(BOOST_VERSION 1.70)
-
-#  NOTE: Should FALSE be changed to an OPTION for BUILD_SHARED_LIBS?
-set(Boost_USE_STATIC_LIBS FALSE)
-set(Boost_USE_MULTITHREADED TRUE)
-set(Boost_USE_STATIC_RUNTIME FALSE)
-set(Boost_COMPILER "-gcc8")
-
-find_package(Boost ${BOOST_VERSION}
-             EXACT
-             CONFIG
-             REQUIRED COMPONENTS headers
-             )
-#                                program_options
-#             )
-
-if(Boost_FOUND)
-    #  NOTE: This sets all the Boost components as globally available
-    #set_target_properties(Boost::headers
-    #                      Boost::program_options
-    set_target_properties(Boost::headers
-                          PROPERTIES IMPORTED_GLOBAL TRUE)
-                         )
-endif()
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/.github/ISSUE_TEMPLATE/bug_report.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/ISSUE_TEMPLATE/bug_report.md
--- apbs-3.0.0/.github/ISSUE_TEMPLATE/bug_report.md	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/ISSUE_TEMPLATE/bug_report.md	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,38 @@
+---
+name: Bug report
+about: Create a report to help us improve
+title: ''
+labels: ''
+assignees: ''
+
+---
+
+**Describe the bug**
+A clear and concise description of what the bug is.
+
+**To Reproduce**
+Steps to reproduce the behavior:
+1. Go to '...'
+2. Click on '....'
+3. Scroll down to '....'
+4. See error
+
+**Expected behavior**
+A clear and concise description of what you expected to happen.
+
+**Screenshots**
+If applicable, add screenshots to help explain your problem.
+
+**Desktop (please complete the following information):**
+ - OS: [e.g. iOS]
+ - Browser [e.g. chrome, safari]
+ - Version [e.g. 22]
+
+**Smartphone (please complete the following information):**
+ - Device: [e.g. iPhone6]
+ - OS: [e.g. iOS8.1]
+ - Browser [e.g. stock browser, safari]
+ - Version [e.g. 22]
+
+**Additional context**
+Add any other context about the problem here.
diff --new-file -ru apbs-3.0.0/.github/ISSUE_TEMPLATE/feature_request.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/ISSUE_TEMPLATE/feature_request.md
--- apbs-3.0.0/.github/ISSUE_TEMPLATE/feature_request.md	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/ISSUE_TEMPLATE/feature_request.md	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,20 @@
+---
+name: Feature request
+about: Suggest an idea for this project
+title: ''
+labels: ''
+assignees: ''
+
+---
+
+**Is your feature request related to a problem? Please describe.**
+A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
+
+**Describe the solution you'd like**
+A clear and concise description of what you want to happen.
+
+**Describe alternatives you've considered**
+A clear and concise description of any alternative solutions or features you've considered.
+
+**Additional context**
+Add any other context or screenshots about the feature request here.
diff --new-file -ru apbs-3.0.0/.github/workflows/build.yml apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/workflows/build.yml
--- apbs-3.0.0/.github/workflows/build.yml	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.github/workflows/build.yml	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,41 @@
+---
+name: Build
+on:
+  pull_request:
+  push:
+    branches: [master]
+jobs:
+  build:
+    name: Compile Code
+    runs-on: ${{ matrix.os }}
+    if: "!contains(github.event.head_commit.message, 'noci')"
+    strategy:
+      fail-fast: false
+      matrix:
+        # os: [ubuntu-latest]
+        # os: [macOS-latest]
+        os: [ubuntu-latest, macOS-latest]
+        # os: [ubuntu-latest, macOS-latest, windows-latest]
+        python-version: [3.8]
+        # cflag-options:
+          # - ' -DENABLE_GEOFLOW=ON  -DENABLE_BEM=ON  -DENABLE_FETK=ON  -DENABLE_PBSAM=ON  -DENABLE_PBAM=ON  -DENABLE_PYTHON=ON  -DBUILD_SHARED_LIBS=ON  -DBUILD_DOC=OFF'
+          # - ' -DENABLE_GEOFLOW=ON  -DENABLE_BEM=ON  -DENABLE_FETK=ON  -DENABLE_PBSAM=ON  -DENABLE_PBAM=ON  -DENABLE_PYTHON=ON  -DBUILD_SHARED_LIBS=OFF -DBUILD_DOC=OFF'
+          # - ' -DENABLE_GEOFLOW=ON  -DENABLE_BEM=ON  -DENABLE_FETK=ON  -DENABLE_PBSAM=OFF -DENABLE_PBAM=OFF -DENABLE_PYTHON=ON  -DBUILD_SHARED_LIBS=ON  -DCMAKE_C_FLAGS="-fPIC" -DBUILD_DOC=OFF'
+          # - ' -DENABLE_GEOFLOW=ON  -DENABLE_BEM=OFF -DENABLE_FETK=ON  -DENABLE_PBSAM=OFF -DENABLE_PBAM=OFF -DENABLE_PYTHON=ON  -DBUILD_SHARED_LIBS=ON  -DCMAKE_C_FLAGS="-fPIC" -DBUILD_DOC=OFF'
+    steps:
+      - uses: actions/checkout@v1
+      - name: Set up Python
+        uses: actions/setup-python@v1
+        with:
+          python-version: ${{ matrix.python-version }}
+      - name: Prereqs
+        uses: mstksg/get-package@v1
+        with:
+          brew: gcc@9 bison flex swig readline
+          apt-get: bison flex swig libreadline-dev
+      - name: Build and Install
+        run: |
+          ./.build.sh
+        env:
+          # https://codecov.io/gh/Electrostatics/apbs
+          CODECOV_TOKEN: "e3a1e24c-5598-4f47-9353-7fa0ac57f98e"
diff --new-file -ru apbs-3.0.0/.gitignore apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.gitignore
--- apbs-3.0.0/.gitignore	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.gitignore	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,157 @@
+# Byte-compiled / optimized / DLL files
+__pycache__/
+*.py[cod]
+*$py.class
+
+# C extensions
+*.so
+
+# Distribution / packaging
+.Python
+build/
+develop-eggs/
+dist/
+downloads/
+eggs/
+.eggs/
+lib/
+lib64/
+parts/
+sdist/
+var/
+wheels/
+share/python-wheels/
+*.egg-info/
+.installed.cfg
+*.egg
+MANIFEST
+
+# PyInstaller
+#  Usually these files are written by a python script from a template
+#  before PyInstaller builds the exe, so as to inject date/other infos into it.
+*.manifest
+*.spec
+
+# Installer logs
+pip-log.txt
+pip-delete-this-directory.txt
+
+# Unit test / coverage reports
+htmlcov/
+.tox/
+.nox/
+.coverage
+.coverage.*
+.cache
+nosetests.xml
+coverage.xml
+*.cover
+*.py,cover
+.hypothesis/
+.pytest_cache/
+cover/
+
+# Translations
+*.mo
+*.pot
+
+# Django stuff:
+*.log
+local_settings.py
+db.sqlite3
+db.sqlite3-journal
+
+# Flask stuff:
+instance/
+.webassets-cache
+
+# Scrapy stuff:
+.scrapy
+
+# Sphinx documentation
+docs/_build/
+
+# PyBuilder
+.pybuilder/
+target/
+
+# Jupyter Notebook
+.ipynb_checkpoints
+
+# IPython
+profile_default/
+ipython_config.py
+
+# pyenv
+#   For a library or package, you might want to ignore these files since the code is
+#   intended to run in multiple environments; otherwise, check them in:
+# .python-version
+
+# pipenv
+#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
+#   However, in case of collaboration, if having platform-specific dependencies or dependencies
+#   having no cross-platform support, pipenv may install dependencies that don't work, or not
+#   install all needed dependencies.
+#Pipfile.lock
+
+# PEP 582; used by e.g. github.com/David-OConnor/pyflow
+__pypackages__/
+
+# Celery stuff
+celerybeat-schedule
+celerybeat.pid
+
+# SageMath parsed files
+*.sage.py
+
+# Environments
+.env
+.venv
+env/
+venv/
+ENV/
+env.bak/
+venv.bak/
+
+# Spyder project settings
+.spyderproject
+.spyproject
+
+# Rope project settings
+.ropeproject
+
+# mkdocs documentation
+/site
+
+# mypy
+.mypy_cache/
+.dmypy.json
+dmypy.json
+
+# Pyre type checker
+.pyre/
+
+# pytype static type analyzer
+.pytype/
+
+# Cython debug symbols
+cython_debug/
+
+# IDE config files
+.vscode
+
+# Vim temp files
+*.swp
+*.swo
+
+# Data files for reference
+examples
+
+# FETK io files
+*.mc
+
+# Output files
+*.out
+
+# Personal notes
+NOTES.txt
diff --new-file -ru apbs-3.0.0/.gitmodules apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.gitmodules
--- apbs-3.0.0/.gitmodules	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/.gitmodules	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,17 @@
+[submodule "externals/geoflow_c"]
+	path = externals/geoflow_c
+	url = https://github.com/Electrostatics/geoflow_c
+[submodule "externals/fetk"]
+	path = externals/fetk
+	url = https://github.com/Electrostatics/FETK.git
+	ignore = untracked
+[submodule "externals/pb_s_am"]
+	path = externals/pb_s_am
+	url = https://github.com/Electrostatics/pb_solvers
+[submodule "externals/bem"]
+	path = externals/bem
+	url = https://github.com/Electrostatics/TABIPB.git
+[submodule "externals/pybind11"]
+	path = externals/pybind11
+	url = https://github.com/pybind/pybind11
+	ignore = all
diff --new-file -ru apbs-3.0.0/README.md apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/README.md
--- apbs-3.0.0/README.md	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/README.md	2020-09-29 19:12:06.000000000 +0200
@@ -1,37 +1,13 @@
-apbs
-============
+APBS - Adaptive Poisson-Boltzmann Solver
+========================================
 
-![Build Status](https://travis-ci.org/Electrostatics/apbs-pdb2pqr.svg?branch=master)
+[![Documentation Status](https://readthedocs.org/projects/apbs/badge/?version=latest)](https://apbs.readthedocs.io/en/latest/?badge=latest)
+[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/github/Electrostatics/apbs?branch=master&svg=true)](https://ci.appveyor.com/project/intendo/apbs)
+[![Github Action Build Status](https://github.com/Electrostatics/apbs/workflows/Build/badge.svg)](https://github.com/Electrostatics/apbs/actions)
 
-To build the latest branch, follow the instructions below...
+This repository contains the APBS software.
 
-# Import submodules:
-We are using Git submodules to manage various pieces of code.  To build the master branch, after cloning it, you will need to do the following from within the root `apbs-pdb2pqr` directory:
- * `git submodule init`
- * `git submodule update`
+For more information about APBS, please see
 
-# Build flags for CMake
-* `cmake <path to apbs directory>`
-
-## Using geometric flow
-If you want to use the geometric flow implementation, when invoking CMake, set ENABLE_GEOFLOW to ON, e.g., `-DENABLE_GEOFLOW=ON`.
-
-## Using PB-AM
-If you want to use the Poisson-Boltzmann Analytical Method developed by the Teresa Head-Gordon lab, when invoking CMake, set ENABLE_PBAM to ON, e.g., `-DENABLE_PBAM=ON`. PB-AM currently runs on OS X or Linux only.
-
-## Using TABI-PB
-If you want to use the Treecode-Accelerated Boundary Integral method (TABI-PB) developed by Robert Krasny and Weihua Geng, when invoking CMake, set ENABLE_BEM to ON, e.g., `-DENABLE_BEM=ON`. TABIPB builds and runs on OS X, Linux, and Windows.
-
-TABI-PB requires the use of a molecular surface mesh generation software to create a surface representation of the molecule. By default, TABI-PB uses MSMS to generate a solvent excluded surface (SES), but it also supports the use of NanoShaper to generate an SES or Skin surface. See TABI-PB documentation for details on choosing NanoShaper. When TABI-PB runs, it will attempt to generate a surface mesh by looking in your path for the mesh generation executable. A user can obtain the appropriate executable using the steps described below. The user then must place these executables in their path.
-
-## Getting MSMS and NanoShaper executables
-MSMS, developed by Michel Sanner, and NanoShaper, developed by W. Rocchia and S. Decherchi, are molecular surface mesh generation software. If you want an executable of MSMS or NanoShaper already built for your system, when invoking CMake, set GET_MSMS to ON, e.g., `-DGET_MSMS=ON`, or GET_NanoShaper to ON, e.g., `-DGET_NanoShaper=ON`, respectively. The executables will be placed in the bin of your build. Executables are current pre-built for OS X, Linux, and Windows.
-
-## Adding finite element support (fe-manual)
-If you would like to use the FEM, you will need to be on OS X or Linux.  To enable, when invoking CMake, set ENABLE_FETK to ON, e.g., `-DENABLE_FETK=ON`.
-On Linux the FETK shared libraries need to be locatable by the shared library loader.  One way to do this is to update LD_LIBRARY_PATH to point at `<build-dir>/fetk/lib`, e.g., `export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:<build-dir>/fetk/lib`.
-
-## Building the APBS python libraries (needed for pdb2pqr)
-* Install [swig](http://www.swig.org/)
-* Build APBS with the following flag: `-DENABLE_PYTHON=ON`.  If you are on Linux you also need `-DBUILD_SHARED_LIBS=OFF`
-* Add these libraries to your library path so pdb2pqr can find them.
+* Home page:  http://www.poissonboltzmann.org/
+* Documentation: http://apbs.readthedocs.io
diff --new-file -ru apbs-3.0.0/requirements.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/requirements.txt
--- apbs-3.0.0/requirements.txt	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/requirements.txt	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,5 @@
+python-dev-tools>=2020.9.4
+pybind11>=2.5
+sphinx>=3.1
+sphinx_rtd_theme
+sphinx_sitemap
\ No newline at end of file
diff --new-file -ru apbs-3.0.0/src/generic/bemparm.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/bemparm.c
--- apbs-3.0.0/src/generic/bemparm.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/bemparm.c	2020-09-29 19:12:06.000000000 +0200
@@ -158,8 +158,8 @@
         rc = VRC_FAILURE;
     }
 
-    if (thee->mesh > 2 || thee->mesh < 0) {
-        Vnm_print(2, "BEMparm_check: mesh must be 0 (msms) or 1 and 2 (NanoShaper)");
+    if (thee->mesh > 2 || thee->mesh < 1) {
+        Vnm_print(2, "BEMparm_check: mesh must be 1 or 2 (NanoShaper)");
         rc = VRC_FAILURE;
     }
 
@@ -281,19 +281,19 @@
     char tok[VMAX_BUFSIZE];
 
     VJMPERR1(Vio_scanf(sock, "%s", tok) == 1);
-    if(strcmp(tok, "msms") == 0){
-      thee->mesh = 0;
-    }
-    else if(strcmp(tok, "ses") == 0){
+    thee->mesh = 0;
+    if(strcmp(tok, "ses") == 0){
       thee->mesh = 1;
     }
     else if(strcmp(tok, "skin") == 0){
       thee->mesh = 2;
     }
     else{
-      Vnm_print(2, "parseBEM: mesh option %s is not recognized! It must be one of msms, \
-                    ses, or skin.\n", tok);
-      return VRC_WARNING;
+      if (thee->mesh > 2 || thee->mesh < 1) {
+        Vnm_print(2, "parseBEM: mesh option %s is not recognized! It must be one of \
+                      ses or skin.\n", tok);
+        return VRC_WARNING;
+      }
     }
 
     thee->setmesh = 1;
diff --new-file -ru apbs-3.0.0/src/generic/bemparm.h apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/bemparm.h
--- apbs-3.0.0/src/generic/bemparm.h	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/bemparm.h	2020-09-29 19:12:06.000000000 +0200
@@ -110,7 +110,7 @@
     int nonlintype; /**< Linearity Type Method to be used */
     int setnonlintype; /**< Flag, @see nonlintype */
 
-    int mesh; /**< 0 for msms, 1 for NanoShaper SES, 2 for NanoShaper Skin */
+    int mesh; /**< 0 for 1 for NanoShaper SES, 2 for NanoShaper Skin */
     int setmesh; /**< Flag, @see mesh */
 
     int outdata; /**< 0 does not output vtk, 1 outputs vtk */
diff --new-file -ru apbs-3.0.0/src/generic/pbsamparm.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/pbsamparm.c
--- apbs-3.0.0/src/generic/pbsamparm.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/pbsamparm.c	2020-09-29 19:12:06.000000000 +0200
@@ -81,7 +81,6 @@
     if (thee == VNULL) return VRC_FAILURE;
 
     thee->tolsp = 2.5;
-    thee->setmsms = 0;
     thee->probe_radius = 1.5;
     thee->density = 3.0;
 
@@ -141,7 +140,6 @@
     thee->settolsp = parm->settolsp;
     thee->tolsp = parm->tolsp;
 
-    thee->setmsms = parm->setmsms;
     thee->probe_radius = parm->probe_radius;
     thee->density = parm->density;
     thee->setsurf = parm->setsurf;
@@ -179,27 +177,6 @@
 
 
 //Parsing imat prefix file
-VPRIVATE Vrc_Codes PBSAMparm_parseMSMS(PBSAMparm *thee, Vio *sock){
-	int td;
-	char tok[VMAX_BUFSIZE];
-	const char *name = "mesh";
-
-	if(Vio_scanf(sock, "%s", tok) == 0){
-		Vnm_print(2, "parsePBSAM:  ran out of tokens on %s!\n", name);
-		return VRC_WARNING;
-	}
-
-	if(strcmp(tok, "msms") == 0){
-	  thee->setmsms = 1;
-	}
-	else{
-	  Vnm_print(2, "parsePBSAM: %s is not currently supported in PBSAM! Change to msms\n", tok);
-	  return VRC_WARNING;
-	}
-
-    return VRC_SUCCESS;
-}
-//Parsing imat prefix file
 VPRIVATE Vrc_Codes PBSAMparm_parseImat(PBSAMparm *thee, Vio *sock){
     const char* name = "imat";
     char tok[VMAX_BUFSIZE];
@@ -266,8 +243,10 @@
     // Molecule terms
     if (Vstring_strcasecmp(tok, "usemesh") == 0) {
         return PBSAMparm_parseSurf(thee, sock);
+/* Removing MSMS parsing
     }else if (Vstring_strcasecmp(tok, "mesh") == 0) {
         return PBSAMparm_parseMSMS(thee, sock);
+ */
     }else if (Vstring_strcasecmp(tok, "imat") == 0) {
         return PBSAMparm_parseImat(thee, sock);
     }else if (Vstring_strcasecmp(tok, "exp") == 0) {
diff --new-file -ru apbs-3.0.0/src/generic/pbsamparm.h apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/pbsamparm.h
--- apbs-3.0.0/src/generic/pbsamparm.h	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/generic/pbsamparm.h	2020-09-29 19:12:06.000000000 +0200
@@ -107,12 +107,11 @@
     PBSAMparm_CalcType type;  /**< What type of PBSAM calculation? */
     int parsed;  /**< Has this structure been filled? (0 = no, 1 = yes) */
 
-    /* The only parms in addition to PBAM would be MSMS
+    /* The only parms in addition to PBAM would be
        IMAT and Selfpol */
     int settolsp;
     double tolsp;
 
-    int setmsms;
     double probe_radius;
     double density;
 
@@ -225,14 +224,5 @@
  */
 VPRIVATE Vrc_Codes PBSAMparm_parseExp(PBSAMparm *thee, Vio *sock);
 
-/**
- * @brief Find msms flag for if MSMS is to be run
- * @ingroup PBSAMparm
- * @author
- * @param thee PBSAMparm object to be copied into
- * @param sock The stream from which parameter is taken
- */
-VPRIVATE Vrc_Codes PBSAMparm_parseMSMS(PBSAMparm *thee, Vio *sock);
-
 #endif
 
diff --new-file -ru apbs-3.0.0/src/main.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/main.c
--- apbs-3.0.0/src/main.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/main.c	2020-09-29 19:12:06.000000000 +0200
@@ -279,7 +279,7 @@
     Vnm_tprint( 1, "%s", header);
 
 #ifdef APBS_FAST
-    Vnm_tprint(, 2"WARNING: APBS was compiled with the --enable-fast option.\n"
+    Vnm_tprint(2, "WARNING: APBS was compiled with the --enable-fast option.\n"
            "WARNING: This mode is experimental and subject to change in future releases.\n"
            "WARNING: The fast mode enables: Gauess-Seidel Smoothing and \n"
            "WARNING:   Conjugate Gradient Multigrid methods.\n\n");
diff --new-file -ru apbs-3.0.0/src/mg/vgrid.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/mg/vgrid.c
--- apbs-3.0.0/src/mg/vgrid.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/mg/vgrid.c	2020-09-29 19:12:06.000000000 +0200
@@ -228,57 +228,57 @@
     /* See if we're on the mesh */
     /*the condions starting with ilo>=0 seem unnecessary since they are of type size_t*/
     if ((ihi<nx) && (jhi<ny) && (khi<nz) /*&&
-        (ilo>=0) && (jlo>=0) && (klo>=0)*/) {
+                                           (ilo>=0) && (jlo>=0) && (klo>=0)*/) {
 
-        dx = ifloat - (double)(ilo);
-        dy = jfloat - (double)(jlo);
-        dz = kfloat - (double)(klo);
-        u = dx      *dy      *dz      *(thee->data[IJK(ihi,jhi,khi)])
-          + dx      *(1.0-dy)*dz      *(thee->data[IJK(ihi,jlo,khi)])
-          + dx      *dy      *(1.0-dz)*(thee->data[IJK(ihi,jhi,klo)])
-          + dx      *(1.0-dy)*(1.0-dz)*(thee->data[IJK(ihi,jlo,klo)])
-          + (1.0-dx)*dy      *dz      *(thee->data[IJK(ilo,jhi,khi)])
-          + (1.0-dx)*(1.0-dy)*dz      *(thee->data[IJK(ilo,jlo,khi)])
-          + (1.0-dx)*dy      *(1.0-dz)*(thee->data[IJK(ilo,jhi,klo)])
-          + (1.0-dx)*(1.0-dy)*(1.0-dz)*(thee->data[IJK(ilo,jlo,klo)]);
-
-        *value = u;
-
-        if (isnan(u)) {
-            Vnm_print(2, "Vgrid_value:  Got NaN!\n");
-            Vnm_print(2, "Vgrid_value:  (x, y, z) = (%4.3f, %4.3f, %4.3f)\n",
-                    pt[0], pt[1], pt[2]);
-            Vnm_print(2, "Vgrid_value:  (ihi, jhi, khi) = (%d, %d, %d)\n",
-                    ihi, jhi, khi);
-            Vnm_print(2, "Vgrid_value:  (ilo, jlo, klo) = (%d, %d, %d)\n",
-                    ilo, jlo, klo);
-            Vnm_print(2, "Vgrid_value:  (nx, ny, nz) = (%d, %d, %d)\n",
-                    nx, ny, nz);
-            Vnm_print(2, "Vgrid_value:  (dx, dy, dz) = (%4.3f, %4.3f, %4.3f)\n",
-                    dx, dy, dz);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jhi,khi)] = %g\n",
-                    thee->data[IJK(ihi,jhi,khi)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jlo,khi)] = %g\n",
-                    thee->data[IJK(ihi,jlo,khi)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jhi,klo)] = %g\n",
-                    thee->data[IJK(ihi,jhi,klo)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jlo,klo)] = %g\n",
-                    thee->data[IJK(ihi,jlo,klo)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jhi,khi)] = %g\n",
-                    thee->data[IJK(ilo,jhi,khi)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jlo,khi)] = %g\n",
-                    thee->data[IJK(ilo,jlo,khi)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jhi,klo)] = %g\n",
-                    thee->data[IJK(ilo,jhi,klo)]);
-            Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jlo,klo)] = %g\n",
-                    thee->data[IJK(ilo,jlo,klo)]);
-        }
-        return 1;
+      dx = ifloat - (double)(ilo);
+      dy = jfloat - (double)(jlo);
+      dz = kfloat - (double)(klo);
+      u = dx      *dy      *dz      *(thee->data[IJK(ihi,jhi,khi)])
+        + dx      *(1.0-dy)*dz      *(thee->data[IJK(ihi,jlo,khi)])
+        + dx      *dy      *(1.0-dz)*(thee->data[IJK(ihi,jhi,klo)])
+        + dx      *(1.0-dy)*(1.0-dz)*(thee->data[IJK(ihi,jlo,klo)])
+        + (1.0-dx)*dy      *dz      *(thee->data[IJK(ilo,jhi,khi)])
+        + (1.0-dx)*(1.0-dy)*dz      *(thee->data[IJK(ilo,jlo,khi)])
+        + (1.0-dx)*dy      *(1.0-dz)*(thee->data[IJK(ilo,jhi,klo)])
+        + (1.0-dx)*(1.0-dy)*(1.0-dz)*(thee->data[IJK(ilo,jlo,klo)]);
+
+      *value = u;
+
+      if (isnan(u)) {
+        Vnm_print(2, "Vgrid_value:  Got NaN!\n");
+        Vnm_print(2, "Vgrid_value:  (x, y, z) = (%4.3f, %4.3f, %4.3f)\n",
+            pt[0], pt[1], pt[2]);
+        Vnm_print(2, "Vgrid_value:  (ihi, jhi, khi) = (%d, %d, %d)\n",
+            ihi, jhi, khi);
+        Vnm_print(2, "Vgrid_value:  (ilo, jlo, klo) = (%d, %d, %d)\n",
+            ilo, jlo, klo);
+        Vnm_print(2, "Vgrid_value:  (nx, ny, nz) = (%d, %d, %d)\n",
+            nx, ny, nz);
+        Vnm_print(2, "Vgrid_value:  (dx, dy, dz) = (%4.3f, %4.3f, %4.3f)\n",
+            dx, dy, dz);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jhi,khi)] = %g\n",
+            thee->data[IJK(ihi,jhi,khi)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jlo,khi)] = %g\n",
+            thee->data[IJK(ihi,jlo,khi)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jhi,klo)] = %g\n",
+            thee->data[IJK(ihi,jhi,klo)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ihi,jlo,klo)] = %g\n",
+            thee->data[IJK(ihi,jlo,klo)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jhi,khi)] = %g\n",
+            thee->data[IJK(ilo,jhi,khi)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jlo,khi)] = %g\n",
+            thee->data[IJK(ilo,jlo,khi)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jhi,klo)] = %g\n",
+            thee->data[IJK(ilo,jhi,klo)]);
+        Vnm_print(2, "Vgrid_value:  data[IJK(ilo,jlo,klo)] = %g\n",
+            thee->data[IJK(ilo,jlo,klo)]);
+      }
+      return 1;
 
     } else {
 
-        *value = 0;
-        return 0;
+      *value = 0;
+      return 0;
 
     }
 
@@ -297,77 +297,77 @@
 // Authors:  Stephen Bond and Nathan Baker
 /////////////////////////////////////////////////////////////////////////// */
 VPUBLIC int Vgrid_curvature(Vgrid *thee, double pt[3], int cflag,
-  double *value) {
+    double *value) {
 
-    double hx, hy, hzed, curv;
-    double dxx, dyy, dzz;
-    double uleft, umid, uright, testpt[3];
-
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_curvature:  Error -- got VNULL thee!\n");
-        VASSERT(0);
-    }
-    if (!(thee->ctordata || thee->readdata)) {
-        Vnm_print(2, "Vgrid_curvature:  Error -- no data available!\n");
-        VASSERT(0);
-    }
-
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-
-    curv = 0.0;
-
-    testpt[0] = pt[0];
-    testpt[1] = pt[1];
-    testpt[2] = pt[2];
-
-    /* Compute 2nd derivative in the x-direction */
-    VJMPERR1(Vgrid_value( thee, testpt, &umid));
-    testpt[0] = pt[0] - hx;
-    VJMPERR1(Vgrid_value( thee, testpt, &uleft));
-    testpt[0] = pt[0] + hx;
-    VJMPERR1(Vgrid_value( thee, testpt, &uright));
-    testpt[0] = pt[0];
-
-    dxx = (uright - 2*umid + uleft)/(hx*hx);
-
-    /* Compute 2nd derivative in the y-direction */
-    VJMPERR1(Vgrid_value( thee, testpt, &umid));
-    testpt[1] = pt[1] - hy;
-    VJMPERR1(Vgrid_value( thee, testpt, &uleft));
-    testpt[1] = pt[1] + hy;
-    VJMPERR1(Vgrid_value( thee, testpt, &uright));
-    testpt[1] = pt[1];
-
-    dyy = (uright - 2*umid + uleft)/(hy*hy);
-
-    /* Compute 2nd derivative in the z-direction */
-    VJMPERR1(Vgrid_value( thee, testpt, &umid));
-    testpt[2] = pt[2] - hzed;
-    VJMPERR1(Vgrid_value( thee, testpt, &uleft));
-    testpt[2] = pt[2] + hzed;
-    VJMPERR1(Vgrid_value( thee, testpt, &uright));
-
-    dzz = (uright - 2*umid + uleft)/(hzed*hzed);
-
-
-    if ( cflag == 0 ) {
-        curv = fabs(dxx);
-        curv = ( curv > fabs(dyy) ) ? curv : fabs(dyy);
-        curv = ( curv > fabs(dzz) ) ? curv : fabs(dzz);
-    } else if ( cflag == 1 ) {
-        curv = (dxx + dyy + dzz)/3.0;
-    } else {
-        Vnm_print(2, "Vgrid_curvature:  support for cflag = %d not available!\n", cflag);
-        VASSERT( 0 ); /* Feature Not Coded Yet! */
-    }
+  double hx, hy, hzed, curv;
+  double dxx, dyy, dzz;
+  double uleft, umid, uright, testpt[3];
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_curvature:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_curvature:  Error -- no data available!\n");
+    VASSERT(0);
+  }
+
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+
+  curv = 0.0;
+
+  testpt[0] = pt[0];
+  testpt[1] = pt[1];
+  testpt[2] = pt[2];
+
+  /* Compute 2nd derivative in the x-direction */
+  VJMPERR1(Vgrid_value( thee, testpt, &umid));
+  testpt[0] = pt[0] - hx;
+  VJMPERR1(Vgrid_value( thee, testpt, &uleft));
+  testpt[0] = pt[0] + hx;
+  VJMPERR1(Vgrid_value( thee, testpt, &uright));
+  testpt[0] = pt[0];
+
+  dxx = (uright - 2*umid + uleft)/(hx*hx);
+
+  /* Compute 2nd derivative in the y-direction */
+  VJMPERR1(Vgrid_value( thee, testpt, &umid));
+  testpt[1] = pt[1] - hy;
+  VJMPERR1(Vgrid_value( thee, testpt, &uleft));
+  testpt[1] = pt[1] + hy;
+  VJMPERR1(Vgrid_value( thee, testpt, &uright));
+  testpt[1] = pt[1];
+
+  dyy = (uright - 2*umid + uleft)/(hy*hy);
+
+  /* Compute 2nd derivative in the z-direction */
+  VJMPERR1(Vgrid_value( thee, testpt, &umid));
+  testpt[2] = pt[2] - hzed;
+  VJMPERR1(Vgrid_value( thee, testpt, &uleft));
+  testpt[2] = pt[2] + hzed;
+  VJMPERR1(Vgrid_value( thee, testpt, &uright));
+
+  dzz = (uright - 2*umid + uleft)/(hzed*hzed);
+
+
+  if ( cflag == 0 ) {
+    curv = fabs(dxx);
+    curv = ( curv > fabs(dyy) ) ? curv : fabs(dyy);
+    curv = ( curv > fabs(dzz) ) ? curv : fabs(dzz);
+  } else if ( cflag == 1 ) {
+    curv = (dxx + dyy + dzz)/3.0;
+  } else {
+    Vnm_print(2, "Vgrid_curvature:  support for cflag = %d not available!\n", cflag);
+    VASSERT( 0 ); /* Feature Not Coded Yet! */
+  }
 
-    *value = curv;
-    return 1;
+  *value = curv;
+  return 1;
 
-    VERROR1:
-        return 0;
+VERROR1:
+  return 0;
 
 }
 
@@ -378,83 +378,83 @@
 /////////////////////////////////////////////////////////////////////////// */
 VPUBLIC int Vgrid_gradient(Vgrid *thee, double pt[3], double grad[3]) {
 
-    double hx, hy, hzed;
-    double uleft, umid, uright, testpt[3];
-    int haveleft, haveright;
-
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_gradient:  Error -- got VNULL thee!\n");
-        VASSERT(0);
-    }
-    if (!(thee->ctordata || thee->readdata)) {
-        Vnm_print(2, "Vgrid_gradient:  Error -- no data available!\n");
-        VASSERT(0);
-    }
-
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-
-    /* Compute derivative in the x-direction */
-    testpt[0] = pt[0];
-    testpt[1] = pt[1];
-    testpt[2] = pt[2];
-    VJMPERR1( Vgrid_value( thee, testpt, &umid));
-    testpt[0] = pt[0] - hx;
-    if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
-    else haveleft = 0;
-    testpt[0] = pt[0] + hx;
-    if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
-    else haveright = 0;
-    if (haveright && haveleft) grad[0] = (uright - uleft)/(2*hx);
-    else if (haveright) grad[0] = (uright - umid)/hx;
-    else if (haveleft) grad[0] = (umid - uleft)/hx;
-    else VJMPERR1(0);
-
-    /* Compute derivative in the y-direction */
-    testpt[0] = pt[0];
-    testpt[1] = pt[1];
-    testpt[2] = pt[2];
-    VJMPERR1(Vgrid_value(thee, testpt, &umid));
-    testpt[1] = pt[1] - hy;
-    if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
-    else haveleft = 0;
-    testpt[1] = pt[1] + hy;
-    if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
-    else haveright = 0;
-    if (haveright && haveleft) grad[1] = (uright - uleft)/(2*hy);
-    else if (haveright) grad[1] = (uright - umid)/hy;
-    else if (haveleft) grad[1] = (umid - uleft)/hy;
-    else VJMPERR1(0);
-
-    /* Compute derivative in the z-direction */
-    testpt[0] = pt[0];
-    testpt[1] = pt[1];
-    testpt[2] = pt[2];
-    VJMPERR1(Vgrid_value(thee, testpt, &umid));
-    testpt[2] = pt[2] - hzed;
-    if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
-    else haveleft = 0;
-    testpt[2] = pt[2] + hzed;
-    if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
-    else haveright = 0;
-    if (haveright && haveleft) grad[2] = (uright - uleft)/(2*hzed);
-    else if (haveright) grad[2] = (uright - umid)/hzed;
-    else if (haveleft) grad[2] = (umid - uleft)/hzed;
-    else VJMPERR1(0);
+  double hx, hy, hzed;
+  double uleft, umid, uright, testpt[3];
+  int haveleft, haveright;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_gradient:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_gradient:  Error -- no data available!\n");
+    VASSERT(0);
+  }
+
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+
+  /* Compute derivative in the x-direction */
+  testpt[0] = pt[0];
+  testpt[1] = pt[1];
+  testpt[2] = pt[2];
+  VJMPERR1( Vgrid_value( thee, testpt, &umid));
+  testpt[0] = pt[0] - hx;
+  if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
+  else haveleft = 0;
+  testpt[0] = pt[0] + hx;
+  if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
+  else haveright = 0;
+  if (haveright && haveleft) grad[0] = (uright - uleft)/(2*hx);
+  else if (haveright) grad[0] = (uright - umid)/hx;
+  else if (haveleft) grad[0] = (umid - uleft)/hx;
+  else VJMPERR1(0);
+
+  /* Compute derivative in the y-direction */
+  testpt[0] = pt[0];
+  testpt[1] = pt[1];
+  testpt[2] = pt[2];
+  VJMPERR1(Vgrid_value(thee, testpt, &umid));
+  testpt[1] = pt[1] - hy;
+  if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
+  else haveleft = 0;
+  testpt[1] = pt[1] + hy;
+  if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
+  else haveright = 0;
+  if (haveright && haveleft) grad[1] = (uright - uleft)/(2*hy);
+  else if (haveright) grad[1] = (uright - umid)/hy;
+  else if (haveleft) grad[1] = (umid - uleft)/hy;
+  else VJMPERR1(0);
+
+  /* Compute derivative in the z-direction */
+  testpt[0] = pt[0];
+  testpt[1] = pt[1];
+  testpt[2] = pt[2];
+  VJMPERR1(Vgrid_value(thee, testpt, &umid));
+  testpt[2] = pt[2] - hzed;
+  if (Vgrid_value( thee, testpt, &uleft)) haveleft = 1;
+  else haveleft = 0;
+  testpt[2] = pt[2] + hzed;
+  if (Vgrid_value( thee, testpt, &uright)) haveright = 1;
+  else haveright = 0;
+  if (haveright && haveleft) grad[2] = (uright - uleft)/(2*hzed);
+  else if (haveright) grad[2] = (uright - umid)/hzed;
+  else if (haveleft) grad[2] = (umid - uleft)/hzed;
+  else VJMPERR1(0);
 
-    return 1;
+  return 1;
 
-    VERROR1:
-        return 0;
+VERROR1:
+  return 0;
 
 }
 
 /* ///////////////////////////////////////////////////////////////////////////
- // Routine:  Vgrid_readGZ
- //
- // Author:   David Gohara
- /////////////////////////////////////////////////////////////////////////// */
+// Routine:  Vgrid_readGZ
+//
+// Author:   David Gohara
+/////////////////////////////////////////////////////////////////////////// */
 #ifdef HAVE_ZLIB
 #define off_t long
 #include "zlib.h"
@@ -462,121 +462,121 @@
 VPUBLIC int Vgrid_readGZ(Vgrid *thee, const char *fname) {
 
 #ifdef HAVE_ZLIB
-    size_t i, j, k, u;
-    size_t len; // Temporary counter variable for loop conditionals
-    size_t header, incr;
-    double *temp;
-    double dtmp1, dtmp2, dtmp3;
-    gzFile infile;
-    char line[VMAX_ARGLEN];
-
-    header = 0;
-
-    /* Check to see if the existing data is null and, if not, clear it out */
-    if (thee->data != VNULL) {
-        Vnm_print(1, "%s:  destroying existing data!\n", __func__);
-        Vmem_free(thee->mem, thee->nx * thee->ny * thee->nz, sizeof(double),
-                  (void **)&(thee->data));
-        }
-
-    thee->readdata = 1;
-    thee->ctordata = 0;
-
-    infile = gzopen(fname, "rb");
-    if (infile == Z_NULL) {
-        Vnm_print(2, "%s:  Problem opening compressed file %s\n", __func__, fname);
-        return VRC_FAILURE;
-    }
-
-    thee->hx = 0.0;
-    thee->hy = 0.0;
-    thee->hzed = 0.0;
-
-    //read data here
-    while (header < 7) {
-        if(gzgets(infile, line, VMAX_ARGLEN) == Z_NULL){
-            return VRC_FAILURE;
-        }
-
-        // Skip comments and newlines
-        if(strncmp(line, "#", 1) == 0) continue;
-        if(line[0] == '\n') continue;
-
-        switch (header) {
-            case 0:
-                sscanf(line, "object 1 class gridpositions counts %d %d %d",
-                       &(thee->nx),&(thee->ny),&(thee->nz));
-                break;
-            case 1:
-                sscanf(line, "origin %lf %lf %lf",
-                       &(thee->xmin),&(thee->ymin),&(thee->zmin));
-                break;
-            case 2:
-            case 3:
-            case 4:
-                sscanf(line, "delta %lf %lf %lf",&dtmp1,&dtmp2,&dtmp3);
-                thee->hx += dtmp1;
-                thee->hy += dtmp2;
-                thee->hzed += dtmp3;
-                break;
-            default:
-                break;
-        }
-
-        header++;
-    }
-
-    /* Allocate space for the data */
-    Vnm_print(0, "%s:  allocating %d x %d x %d doubles for storage\n",
-        __func__, thee->nx, thee->ny, thee->nz);
-    len = thee->nx * thee->ny * thee->nz;
-
-    thee->data = VNULL;
-    thee->data = Vmem_malloc(thee->mem, len, sizeof(double));
-    if (thee->data == VNULL) {
-        Vnm_print(2, "%s:  Unable to allocate space for data!\n", __func__);
-        return 0;
-    }
-
-    /* Allocate a temporary buffer to store the compressed
-     * data into (column major order). Add 2 to ensure the buffer is
-     * big enough to take extra data on the final read loop.
-     */
-    temp = (double *)malloc(len * (2 * sizeof(double)));
-
-    for (i = 0; i < len; i += 3){
-        memset(&line, 0, sizeof(line));
-        gzgets(infile, line, VMAX_ARGLEN);
-        sscanf(line, "%lf %lf %lf", &temp[i], &temp[i+1], &temp[i+2]);
-    }
-
-    /* Now move the data to row major order */
-    incr = 0;
-    for (i=0; i<thee->nx; i++) {
-        for (j=0; j<thee->ny; j++) {
-            for (k=0; k<thee->nz; k++) {
-                u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
-                (thee->data)[u] = temp[incr++];
-            }
-        }
-    }
-
-    /* calculate grid maxima */
-    thee->xmax = thee->xmin + (thee->nx-1)*thee->hx;
-    thee->ymax = thee->ymin + (thee->ny-1)*thee->hy;
-    thee->zmax = thee->zmin + (thee->nz-1)*thee->hzed;
+  size_t i, j, k, u;
+  size_t len; // Temporary counter variable for loop conditionals
+  size_t header, incr;
+  double *temp;
+  double dtmp1, dtmp2, dtmp3;
+  gzFile infile;
+  char line[VMAX_ARGLEN];
+
+  header = 0;
+
+  /* Check to see if the existing data is null and, if not, clear it out */
+  if (thee->data != VNULL) {
+    Vnm_print(1, "%s:  destroying existing data!\n", __func__);
+    Vmem_free(thee->mem, thee->nx * thee->ny * thee->nz, sizeof(double),
+        (void **)&(thee->data));
+  }
+
+  thee->readdata = 1;
+  thee->ctordata = 0;
+
+  infile = gzopen(fname, "rb");
+  if (infile == Z_NULL) {
+    Vnm_print(2, "%s:  Problem opening compressed file %s\n", __func__, fname);
+    return VRC_FAILURE;
+  }
+
+  thee->hx = 0.0;
+  thee->hy = 0.0;
+  thee->hzed = 0.0;
+
+  //read data here
+  while (header < 7) {
+    if(gzgets(infile, line, VMAX_ARGLEN) == Z_NULL){
+      return VRC_FAILURE;
+    }
+
+    // Skip comments and newlines
+    if(strncmp(line, "#", 1) == 0) continue;
+    if(line[0] == '\n') continue;
+
+    switch (header) {
+      case 0:
+        sscanf(line, "object 1 class gridpositions counts %d %d %d",
+            &(thee->nx),&(thee->ny),&(thee->nz));
+        break;
+      case 1:
+        sscanf(line, "origin %lf %lf %lf",
+            &(thee->xmin),&(thee->ymin),&(thee->zmin));
+        break;
+      case 2:
+      case 3:
+      case 4:
+        sscanf(line, "delta %lf %lf %lf",&dtmp1,&dtmp2,&dtmp3);
+        thee->hx += dtmp1;
+        thee->hy += dtmp2;
+        thee->hzed += dtmp3;
+        break;
+      default:
+        break;
+    }
+
+    header++;
+  }
+
+  /* Allocate space for the data */
+  Vnm_print(0, "%s:  allocating %d x %d x %d doubles for storage\n",
+      __func__, thee->nx, thee->ny, thee->nz);
+  len = thee->nx * thee->ny * thee->nz;
+
+  thee->data = VNULL;
+  thee->data = Vmem_malloc(thee->mem, len, sizeof(double));
+  if (thee->data == VNULL) {
+    Vnm_print(2, "%s:  Unable to allocate space for data!\n", __func__);
+    return 0;
+  }
 
-    /* Close off the socket */
-    gzclose(infile);
-    free(temp);
+  /* Allocate a temporary buffer to store the compressed
+   * data into (column major order). Add 2 to ensure the buffer is
+   * big enough to take extra data on the final read loop.
+   */
+  temp = (double *)malloc(len * (2 * sizeof(double)));
+
+  for (i = 0; i < len; i += 3){
+    memset(&line, 0, sizeof(line));
+    gzgets(infile, line, VMAX_ARGLEN);
+    sscanf(line, "%lf %lf %lf", &temp[i], &temp[i+1], &temp[i+2]);
+  }
+
+  /* Now move the data to row major order */
+  incr = 0;
+  for (i=0; i<thee->nx; i++) {
+    for (j=0; j<thee->ny; j++) {
+      for (k=0; k<thee->nz; k++) {
+        u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
+        (thee->data)[u] = temp[incr++];
+      }
+    }
+  }
+
+  /* calculate grid maxima */
+  thee->xmax = thee->xmin + (thee->nx-1)*thee->hx;
+  thee->ymax = thee->ymin + (thee->ny-1)*thee->hy;
+  thee->zmax = thee->zmin + (thee->nz-1)*thee->hzed;
+
+  /* Close off the socket */
+  gzclose(infile);
+  free(temp);
 #else
 
-    Vnm_print(0, "WARNING\n");
-    Vnm_print(0, "Vgrid_readGZ:  gzip read/write support is disabled in this build\n");
-    Vnm_print(0, "Vgrid_readGZ:  configure and compile without the --disable-zlib flag.\n");
-    Vnm_print(0, "WARNING\n");
+  Vnm_print(0, "WARNING\n");
+  Vnm_print(0, "Vgrid_readGZ:  gzip read/write support is disabled in this build\n");
+  Vnm_print(0, "Vgrid_readGZ:  configure and compile without the --disable-zlib flag.\n");
+  Vnm_print(0, "WARNING\n");
 #endif
-    return VRC_SUCCESS;
+  return VRC_SUCCESS;
 }
 
 /**
@@ -584,36 +584,36 @@
  * @author Nathan Baker
  */
 VPUBLIC int Vgrid_readDX(Vgrid *thee,
-                         const char *iodev,
-                         const char *iofmt,
-                         const char *thost,
-                         const char *fname
-                        ) {
-
-    size_t i, j, k, itmp, u;
-    double dtmp;
-    char tok[VMAX_BUFSIZE];
-    Vio *sock;
-
-    /* Check to see if the existing data is null and, if not, clear it out */
-    if (thee->data != VNULL) {
-        Vnm_print(1, "Vgrid_readDX:  destroying existing data!\n");
+    const char *iodev,
+    const char *iofmt,
+    const char *thost,
+    const char *fname
+    ) {
+
+  size_t i, j, k, itmp, u;
+  double dtmp;
+  char tok[VMAX_BUFSIZE];
+  Vio *sock;
+
+  /* Check to see if the existing data is null and, if not, clear it out */
+  if (thee->data != VNULL) {
+    Vnm_print(1, "Vgrid_readDX:  destroying existing data!\n");
     Vmem_free(thee->mem, (thee->nx*thee->ny*thee->nz), sizeof(double),
-          (void **)&(thee->data)); }
+        (void **)&(thee->data)); }
     thee->readdata = 1;
     thee->ctordata = 0;
 
     /* Set up the virtual socket */
     sock = Vio_ctor(iodev,iofmt,thost,fname,"r");
     if (sock == VNULL) {
-        Vnm_print(2, "Vgrid_readDX: Problem opening virtual socket %s\n",
+      Vnm_print(2, "Vgrid_readDX: Problem opening virtual socket %s\n",
           fname);
-        return 0;
+      return 0;
     }
     if (Vio_accept(sock, 0) < 0) {
-        Vnm_print(2, "Vgrid_readDX: Problem accepting virtual socket %s\n",
+      Vnm_print(2, "Vgrid_readDX: Problem accepting virtual socket %s\n",
           fname);
-        return 0;
+      return 0;
     }
 
     Vio_setWhiteChars(sock, MCwhiteChars);
@@ -644,7 +644,7 @@
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(1 == sscanf(tok, "%d", &(thee->nz)));
     Vnm_print(0, "Vgrid_readDX:  Grid dimensions %d x %d x %d grid\n",
-     thee->nx, thee->ny, thee->nz);
+        thee->nx, thee->ny, thee->nz);
     /* Get "origin" */
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(!strcmp(tok, "origin"));
@@ -658,7 +658,7 @@
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(1 == sscanf(tok, "%lf", &(thee->zmin)));
     Vnm_print(0, "Vgrid_readDX:  Grid origin = (%g, %g, %g)\n",
-      thee->xmin, thee->ymin, thee->zmin);
+        thee->xmin, thee->ymin, thee->zmin);
     /* Get "delta" */
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(!strcmp(tok, "delta"));
@@ -702,7 +702,7 @@
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(1 == sscanf(tok, "%lf", &(thee->hzed)));
     Vnm_print(0, "Vgrid_readDX:  Grid spacings = (%g, %g, %g)\n",
-      thee->hx, thee->hy, thee->hzed);
+        thee->hx, thee->hy, thee->hzed);
     /* Get "object" */
     VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
     VJMPERR1(!strcmp(tok, "object"));
@@ -760,23 +760,23 @@
 
     /* Allocate space for the data */
     Vnm_print(0, "Vgrid_readDX:  allocating %d x %d x %d doubles for storage\n",
-      thee->nx, thee->ny, thee->nz);
+        thee->nx, thee->ny, thee->nz);
     thee->data = VNULL;
     thee->data = (double*)Vmem_malloc(thee->mem, u, sizeof(double));
     if (thee->data == VNULL) {
-        Vnm_print(2, "Vgrid_readDX:  Unable to allocate space for data!\n");
-        return 0;
+      Vnm_print(2, "Vgrid_readDX:  Unable to allocate space for data!\n");
+      return 0;
     }
 
     for (i=0; i<thee->nx; i++) {
-        for (j=0; j<thee->ny; j++) {
-            for (k=0; k<thee->nz; k++) {
-                u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
-                VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-                VJMPERR1(1 == sscanf(tok, "%lf", &dtmp));
-                (thee->data)[u] = dtmp;
-            }
+      for (j=0; j<thee->ny; j++) {
+        for (k=0; k<thee->nz; k++) {
+          u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
+          VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+          VJMPERR1(1 == sscanf(tok, "%lf", &dtmp));
+          (thee->data)[u] = dtmp;
         }
+      }
     }
 
     /* calculate grid maxima */
@@ -790,16 +790,16 @@
 
     return 1;
 
-  VERROR1:
+VERROR1:
     Vio_dtor(&sock);
     Vnm_print(2, "Vgrid_readDX:  Format problem with input file <%s>\n",
-      fname);
+        fname);
     return 0;
 
-  VERROR2:
+VERROR2:
     Vio_dtor(&sock);
     Vnm_print(2, "Vgrid_readDX:  I/O problem with input file <%s>\n",
-      fname);
+        fname);
     return 0;
 }
 
@@ -808,393 +808,393 @@
  * @author Juan Brandi
  */
 VPUBLIC int Vgrid_readDXBIN(Vgrid *thee, const char *iodev, const char *iofmt,
-                         const char *thost, const char *fname) {
+    const char *thost, const char *fname) {
 
-	size_t i, j, k, itmp, u;
-	double dtmp, dtmp2;
-	char tok[VMAX_BUFSIZE];
-	int isBinary = 0;
-	//Vio *sock;
-
-	/* Check to see if the existing data is null and, if not, clear it out */
-	if (thee->data != VNULL) {
-		Vnm_print(1, "Vgrid_readDXBIN: destroying existing data!\n");
-	Vmem_free(thee->mem, (thee->nx*thee->ny*thee->nz), sizeof(double),
-		  (void **)&(thee->data)); }
-	thee->readdata = 1;
-	thee->ctordata = 0;
-
-	/*Opend file fd for binary reading*/
-	FILE *fd = fopen(fname,"rb");
-	if(fd == NULL){
-		printf("Vgrid_readDXBIN: Problem opening file %s\n",fname);
-		fclose(fd);
-		return 0;
-	}
-
-	    /* Set up the virtual socket */
-//	    sock = Vio_ctor(iodev,iofmt,thost,fname,"r");
-//	    if (sock == VNULL) {
-//	        Vnm_print(2, "Vgrid_readDX: Problem opening virtual socket %s\n",
-//	          fname);
-//	        return 0;
-//	    }
-//	    if (Vio_accept(sock, 0) < 0) {
-//	        Vnm_print(2, "Vgrid_readDX: Problem accepting virtual socket %s\n",
-//	          fname);
-//	        return 0;
-//	    }
-//
-//	    Vio_setWhiteChars(sock, MCwhiteChars);
-//	    Vio_setCommChars(sock, MCcommChars);
+  size_t i, j, k, itmp, u;
+  double dtmp, dtmp2;
+  char tok[VMAX_BUFSIZE];
+  int isBinary = 0;
+  //Vio *sock;
+
+  /* Check to see if the existing data is null and, if not, clear it out */
+  if (thee->data != VNULL) {
+    Vnm_print(1, "Vgrid_readDXBIN: destroying existing data!\n");
+    Vmem_free(thee->mem, (thee->nx*thee->ny*thee->nz), sizeof(double),
+        (void **)&(thee->data)); }
+    thee->readdata = 1;
+    thee->ctordata = 0;
 
-	//skip comments
-	do{
-		fgets(tok, VMAX_BUFSIZE, fd);
-	}
-	while(tok[0]=='#');
-
-	//get counts
-	if(sscanf(tok,"object 1 class gridpositions counts %i %i %i\n",&(thee->nx),&(thee->ny),&(thee->nz))!= 3){
-		printf("Vgrid_readDXBIN: Failed to read dimensions.\n");
-		fclose(fd);
-		return 0;
-	}
-	printf("Vgrid_readDXBIN: Grid dimensions %d x %d x %d grid\n",thee->nx, thee->ny, thee->nz);
-
-	    /* Read in the DX regular positions */
-
-		/* Get "object" */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(!strcmp(tok, "object"));
-//	    /* Get "1" */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%d", &itmp));
-//	    /* Get "class" */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(!strcmp(tok, "class"));
-//	    /* Get "gridpositions" */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(!strcmp(tok, "gridpositions"));
-//	    /* Get "counts" */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(!strcmp(tok, "counts"));
-//	    /* Get nx */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->nx)));
-//	    /* Get ny */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->ny)));
-//	    /* Get nz */
-//	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
-//	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->nz)));
-//	    Vnm_print(0, "Vgrid_readDX:  Grid dimensions %d x %d x %d grid\n",
-//	     thee->nx, thee->ny, thee->nz);
-
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: unexpected end of file.\n");
-		fclose(fd);
-		return 0;
-	}
-	if(sscanf(tok,"origin %lf %lf %lf",&(thee->xmin),&(thee->ymin),&(thee->zmin))!=3){
-		printf("Vgrid_readDXBIN: Failed to read origin cell data.\n");
-		fclose(fd);
-		return 0;
-	}
-	printf("Vgrid_readDXBIN: Grid origin = (%g %g %g)\n",thee->xmin, thee->ymin, thee->zmin);
-
-	//get Delta x
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: unexpected end of file.\n");
-		fclose(fd);
-		return 0;
-	}
-	if(sscanf(tok,"delta %lf %lf %lf",&(thee->hx),&dtmp,&dtmp2)!=3){
-		printf("Vgrid_readDXBIN: Failed to read delta x data.\n");
-		fclose(fd);
-		return 0;
-	}
-	//get Delta y
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: Unexpected end of file\n");
-		fclose(fd);
-		return 0;
-	}
-	if(sscanf(tok,"delta %lf %lf %lf",&dtmp,&(thee->hy),&dtmp2)!=3){
-		printf("Vgrid_readDXBIN: Failed to read delta y data.\n");
-		fclose(fd);
-		return 0;
-	}
-	//get Delta z
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: Unexpected end of file.\n");
-		fclose(fd);
-		return 0;
-	}
-	if(sscanf(tok,"delta %lf %lf %lf",&dtmp,&dtmp2,&(thee->hzed))!=3){
-		printf("Vgrid_readDXBIN: Failed to read delta z data.\n");
-		fclose(fd);
-		return 0;
-	}
-	printf("Vgrid_readDXBIN: Grid spacings = (%g, %g, %g)\n",thee->hx, thee->hy, thee->hzed);
-
-	//skip a line
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: Unexpected end of file.\n");
-		fclose(fd);
-		return 0;
-	}
-
-	//scan the buffer for the word binary
-	if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
-		printf("Vgrid_readDXBIN: Unexpected end of file.\n");
-		fclose(fd);
-		return 0;
-	}
-	if(strstr(tok,"binary")){
-		isBinary = 1;
-	}
-	else{
-		printf("Vgrid_readDXBIN: Binary tag not found. Will continue to try to read binary data.");
-	}
-
-	u = (size_t)thee->nx * thee->ny * thee->nz;
-	int tot = thee->nx * thee->ny * thee->nz;
-
-	/*Allocate space for the data*/
-	printf("Vgrid_readDXBIN: allocating %d x %d x %d doubled for storage\n", thee->nx, thee->ny, thee->nz);
-	thee->data = NULL;
-	thee->data = (double *)malloc(tot*sizeof(double));
-
-	if(thee->data == NULL){
-		printf("Vgrid_readDXBIN: Unable to allocate space for data!\n");
-		fclose(fd);
-		return 0;
-	}
-
-	int counter = 0, r;
-
-	for (i=0; i<thee->nx; i++) {
-		for (j=0; j<thee->ny; j++) {
-			for (k=0; k<thee->nz; k++) {
-				u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
-				r = fread(&dtmp,sizeof(double),1,fd);
-				(thee->data)[u] = dtmp;
-				if(r!= 1){
-					printf("Vgrid_readDXBIN: Failed to read doubles.\n");
-					return 0;
-				}
-				counter++;
-			}
-		}
-	}
-
-	if(counter!=tot){
-		printf("Vgrid_readDXBIN: Read double = %d not equal to items = %d\n",counter, tot);
-	}
-
-	/* calculate grid maxima */
-	thee->xmax = thee->xmin + (thee->nx-1)*thee->hx;
-	thee->ymax = thee->ymin + (thee->ny-1)*thee->hy;
-	thee->zmax = thee->zmin + (thee->nz-1)*thee->hzed;
+    /*Opend file fd for binary reading*/
+    FILE *fd = fopen(fname,"rb");
+    if(fd == NULL){
+      printf("Vgrid_readDXBIN: Problem opening file %s\n",fname);
+      fclose(fd);
+      return 0;
+    }
 
-	fclose(fd);
+    /* Set up the virtual socket */
+    //	    sock = Vio_ctor(iodev,iofmt,thost,fname,"r");
+    //	    if (sock == VNULL) {
+    //	        Vnm_print(2, "Vgrid_readDX: Problem opening virtual socket %s\n",
+    //	          fname);
+    //	        return 0;
+    //	    }
+    //	    if (Vio_accept(sock, 0) < 0) {
+    //	        Vnm_print(2, "Vgrid_readDX: Problem accepting virtual socket %s\n",
+    //	          fname);
+    //	        return 0;
+    //	    }
+    //
+    //	    Vio_setWhiteChars(sock, MCwhiteChars);
+    //	    Vio_setCommChars(sock, MCcommChars);
+
+    //skip comments
+    do{
+      fgets(tok, VMAX_BUFSIZE, fd);
+    }
+    while(tok[0]=='#');
+
+    //get counts
+    if(sscanf(tok,"object 1 class gridpositions counts %i %i %i\n",&(thee->nx),&(thee->ny),&(thee->nz))!= 3){
+      printf("Vgrid_readDXBIN: Failed to read dimensions.\n");
+      fclose(fd);
+      return 0;
+    }
+    printf("Vgrid_readDXBIN: Grid dimensions %d x %d x %d grid\n",thee->nx, thee->ny, thee->nz);
 
-	return 1;
-}
+    /* Read in the DX regular positions */
 
+    /* Get "object" */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(!strcmp(tok, "object"));
+    //	    /* Get "1" */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%d", &itmp));
+    //	    /* Get "class" */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(!strcmp(tok, "class"));
+    //	    /* Get "gridpositions" */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(!strcmp(tok, "gridpositions"));
+    //	    /* Get "counts" */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(!strcmp(tok, "counts"));
+    //	    /* Get nx */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->nx)));
+    //	    /* Get ny */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->ny)));
+    //	    /* Get nz */
+    //	    VJMPERR2(1 == Vio_scanf(sock, "%s", tok));
+    //	    VJMPERR1(1 == sscanf(tok, "%d", &(thee->nz)));
+    //	    Vnm_print(0, "Vgrid_readDX:  Grid dimensions %d x %d x %d grid\n",
+    //	     thee->nx, thee->ny, thee->nz);
+
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: unexpected end of file.\n");
+      fclose(fd);
+      return 0;
+    }
+    if(sscanf(tok,"origin %lf %lf %lf",&(thee->xmin),&(thee->ymin),&(thee->zmin))!=3){
+      printf("Vgrid_readDXBIN: Failed to read origin cell data.\n");
+      fclose(fd);
+      return 0;
+    }
+    printf("Vgrid_readDXBIN: Grid origin = (%g %g %g)\n",thee->xmin, thee->ymin, thee->zmin);
+
+    //get Delta x
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: unexpected end of file.\n");
+      fclose(fd);
+      return 0;
+    }
+    if(sscanf(tok,"delta %lf %lf %lf",&(thee->hx),&dtmp,&dtmp2)!=3){
+      printf("Vgrid_readDXBIN: Failed to read delta x data.\n");
+      fclose(fd);
+      return 0;
+    }
+    //get Delta y
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: Unexpected end of file\n");
+      fclose(fd);
+      return 0;
+    }
+    if(sscanf(tok,"delta %lf %lf %lf",&dtmp,&(thee->hy),&dtmp2)!=3){
+      printf("Vgrid_readDXBIN: Failed to read delta y data.\n");
+      fclose(fd);
+      return 0;
+    }
+    //get Delta z
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: Unexpected end of file.\n");
+      fclose(fd);
+      return 0;
+    }
+    if(sscanf(tok,"delta %lf %lf %lf",&dtmp,&dtmp2,&(thee->hzed))!=3){
+      printf("Vgrid_readDXBIN: Failed to read delta z data.\n");
+      fclose(fd);
+      return 0;
+    }
+    printf("Vgrid_readDXBIN: Grid spacings = (%g, %g, %g)\n",thee->hx, thee->hy, thee->hzed);
+
+    //skip a line
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: Unexpected end of file.\n");
+      fclose(fd);
+      return 0;
+    }
+
+    //scan the buffer for the word binary
+    if(fgets(tok,VMAX_BUFSIZE, fd) == NULL){
+      printf("Vgrid_readDXBIN: Unexpected end of file.\n");
+      fclose(fd);
+      return 0;
+    }
+    if(strstr(tok,"binary")){
+      isBinary = 1;
+    }
+    else{
+      printf("Vgrid_readDXBIN: Binary tag not found. Will continue to try to read binary data.");
+    }
 
-/* ///////////////////////////////////////////////////////////////////////////
- // Routine:  Vgrid_writeGZ
- //
- // Author:   Nathan Baker
- /////////////////////////////////////////////////////////////////////////// */
-VPUBLIC void Vgrid_writeGZ(Vgrid *thee, const char *iodev, const char *iofmt,
-                            const char *thost, const char *fname, char *title, double *pvec) {
+    u = (size_t)thee->nx * thee->ny * thee->nz;
+    int tot = thee->nx * thee->ny * thee->nz;
 
-#ifdef HAVE_ZLIB
-    double xmin, ymin, zmin, hx, hy, hzed;
+    /*Allocate space for the data*/
+    printf("Vgrid_readDXBIN: allocating %d x %d x %d doubled for storage\n", thee->nx, thee->ny, thee->nz);
+    thee->data = NULL;
+    thee->data = (double *)malloc(tot*sizeof(double));
 
-    int nx, ny, nz, nxPART, nyPART, nzPART;
-    int usepart, gotit;
-    size_t icol, i, j, k, u;
-    double x, y, z, xminPART, yminPART, zminPART;
-
-    size_t txyz;
-    double txmin, tymin, tzmin;
-
-    char header[8196];
-    char footer[8196];
-    char line[80];
-    char newline[] = "\n";
-    gzFile outfile;
-    char precFormat[VMAX_BUFSIZE];
+    if(thee->data == NULL){
+      printf("Vgrid_readDXBIN: Unable to allocate space for data!\n");
+      fclose(fd);
+      return 0;
+    }
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_writeGZ:  Error -- got VNULL thee!\n");
-        VASSERT(0);
-    }
-    if (!(thee->ctordata || thee->readdata)) {
-        Vnm_print(2, "Vgrid_writeGZ:  Error -- no data available!\n");
-        VASSERT(0);
-    }
-
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
-    xmin = thee->xmin;
-    ymin = thee->ymin;
-    zmin = thee->zmin;
+    int counter = 0, r;
 
-    if (pvec == VNULL) usepart = 0;
-    else usepart = 1;
+    for (i=0; i<thee->nx; i++) {
+      for (j=0; j<thee->ny; j++) {
+        for (k=0; k<thee->nz; k++) {
+          u = k*(thee->nx)*(thee->ny)+j*(thee->nx)+i;
+          r = fread(&dtmp,sizeof(double),1,fd);
+          (thee->data)[u] = dtmp;
+          if(r!= 1){
+            printf("Vgrid_readDXBIN: Failed to read doubles.\n");
+            return 0;
+          }
+          counter++;
+        }
+      }
+    }
 
-    /* Set up the virtual socket */
-    Vnm_print(0, "Vgrid_writeGZ:  Opening file...\n");
-    outfile = gzopen(fname, "wb");
+    if(counter!=tot){
+      printf("Vgrid_readDXBIN: Read double = %d not equal to items = %d\n",counter, tot);
+    }
 
-    if (usepart) {
-        /* Get the lower corner and number of grid points for the local
-         * partition */
-        xminPART = VLARGE;
-        yminPART = VLARGE;
-        zminPART = VLARGE;
-        nxPART = 0;
-        nyPART = 0;
-        nzPART = 0;
-        /* First, search for the lower corner */
-        for (k=0; k<nz; k++) {
-            z = k*hzed + zmin;
-            for (j=0; j<ny; j++) {
-                y = j*hy + ymin;
-                for (i=0; i<nx; i++) {
-                    x = i*hx + xmin;
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        if (x < xminPART) xminPART = x;
-                        if (y < yminPART) yminPART = y;
-                        if (z < zminPART) zminPART = z;
-                    }
-                }
-            }
-        }
-        /* Now search for the number of grid points in the z direction */
-        for (k=0; k<nz; k++) {
-            gotit = 0;
-            for (j=0; j<ny; j++) {
-                for (i=0; i<nx; i++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nzPART++;
-        }
-        /* Now search for the number of grid points in the y direction */
-        for (j=0; j<ny; j++) {
-            gotit = 0;
-            for (k=0; k<nz; k++) {
-                for (i=0; i<nx; i++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nyPART++;
-        }
-        /* Now search for the number of grid points in the x direction */
-        for (i=0; i<nx; i++) {
-            gotit = 0;
-            for (k=0; k<nz; k++) {
-                for (j=0; j<ny; j++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nxPART++;
-        }
+    /* calculate grid maxima */
+    thee->xmax = thee->xmin + (thee->nx-1)*thee->hx;
+    thee->ymax = thee->ymin + (thee->ny-1)*thee->hy;
+    thee->zmax = thee->zmin + (thee->nz-1)*thee->hzed;
 
-        if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
-            Vnm_print(0, "Vgrid_writeGZ:  printing only subset of domain\n");
-        }
+    fclose(fd);
 
-        txyz = (nxPART*nyPART*nzPART);
-        txmin = xminPART;
-        tymin = yminPART;
-        tzmin = zminPART;
+    return 1;
+}
 
-    }else {
 
-        txyz = (nx*ny*nz);
-        txmin = xmin;
-        tymin = ymin;
-        tzmin = zmin;
+/* ///////////////////////////////////////////////////////////////////////////
+// Routine:  Vgrid_writeGZ
+//
+// Author:   Nathan Baker
+/////////////////////////////////////////////////////////////////////////// */
+VPUBLIC void Vgrid_writeGZ(Vgrid *thee, const char *iodev, const char *iofmt,
+    const char *thost, const char *fname, char *title, double *pvec) {
 
-    }
+#ifdef HAVE_ZLIB
+  double xmin, ymin, zmin, hx, hy, hzed;
 
-    /* Write off the title (if we're not XDR) */
-    sprintf(header,
-            "# Data from %s\n"	\
-            "# \n"							\
-            "# %s\n"			\
-            "# \n"							\
-            "object 1 class gridpositions counts %i %i %i\n"	\
-            "origin %12.6e %12.6e %12.6e\n"	\
-            "delta %12.6e 0.000000e+00 0.000000e+00\n"		\
-            "delta 0.000000e+00 %12.6e 0.000000e+00\n"		\
-            "delta 0.000000e+00 0.000000e+00 %12.6e\n"		\
-            "object 2 class gridconnections counts %i %i %i\n"\
-            "object 3 class array type double rank 0 items %lu data follows\n",
-            PACKAGE_STRING,title,nx,ny,nz,txmin,tymin,tzmin,
-            hx,hy,hzed,nx,ny,nz,txyz);
-    gzwrite(outfile, header, strlen(header)*sizeof(char));
+  int nx, ny, nz, nxPART, nyPART, nzPART;
+  int usepart, gotit;
+  size_t icol, i, j, k, u;
+  double x, y, z, xminPART, yminPART, zminPART;
+
+  size_t txyz;
+  double txmin, tymin, tzmin;
+
+  char header[8196];
+  char footer[8196];
+  char line[80];
+  char newline[] = "\n";
+  gzFile outfile;
+  char precFormat[VMAX_BUFSIZE];
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_writeGZ:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_writeGZ:  Error -- no data available!\n");
+    VASSERT(0);
+  }
+
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+  xmin = thee->xmin;
+  ymin = thee->ymin;
+  zmin = thee->zmin;
+
+  if (pvec == VNULL) usepart = 0;
+  else usepart = 1;
+
+  /* Set up the virtual socket */
+  Vnm_print(0, "Vgrid_writeGZ:  Opening file...\n");
+  outfile = gzopen(fname, "wb");
 
-    /* Now write the data */
-    icol = 0;
+  if (usepart) {
+    /* Get the lower corner and number of grid points for the local
+     * partition */
+    xminPART = VLARGE;
+    yminPART = VLARGE;
+    zminPART = VLARGE;
+    nxPART = 0;
+    nyPART = 0;
+    nzPART = 0;
+    /* First, search for the lower corner */
+    for (k=0; k<nz; k++) {
+      z = k*hzed + zmin;
+      for (j=0; j<ny; j++) {
+        y = j*hy + ymin;
+        for (i=0; i<nx; i++) {
+          x = i*hx + xmin;
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            if (x < xminPART) xminPART = x;
+            if (y < yminPART) yminPART = y;
+            if (z < zminPART) zminPART = z;
+          }
+        }
+      }
+    }
+    /* Now search for the number of grid points in the z direction */
+    for (k=0; k<nz; k++) {
+      gotit = 0;
+      for (j=0; j<ny; j++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nzPART++;
+    }
+    /* Now search for the number of grid points in the y direction */
+    for (j=0; j<ny; j++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nyPART++;
+    }
+    /* Now search for the number of grid points in the x direction */
     for (i=0; i<nx; i++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
         for (j=0; j<ny; j++) {
-            for (k=0; k<nz; k++) {
-                u = k*(nx)*(ny)+j*(nx)+i;
-                if (pvec[u] > 0.0) {
-                    sprintf(line, "%12.6e ", thee->data[u]);
-                    gzwrite(outfile, line, strlen(line)*sizeof(char));
-                    icol++;
-                    if (icol == 3) {
-                        icol = 0;
-                        gzwrite(outfile, newline, strlen(newline)*sizeof(char));
-                    }
-                }
-            }
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nxPART++;
+    }
+
+    if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
+      Vnm_print(0, "Vgrid_writeGZ:  printing only subset of domain\n");
+    }
+
+    txyz = (nxPART*nyPART*nzPART);
+    txmin = xminPART;
+    tymin = yminPART;
+    tzmin = zminPART;
+
+  }else {
+
+    txyz = (nx*ny*nz);
+    txmin = xmin;
+    tymin = ymin;
+    tzmin = zmin;
+
+  }
+
+  /* Write off the title (if we're not XDR) */
+  sprintf(header,
+      "# Data from %s\n"	\
+      "# \n"							\
+      "# %s\n"			\
+      "# \n"							\
+      "object 1 class gridpositions counts %i %i %i\n"	\
+      "origin %12.6e %12.6e %12.6e\n"	\
+      "delta %12.6e 0.000000e+00 0.000000e+00\n"		\
+      "delta 0.000000e+00 %12.6e 0.000000e+00\n"		\
+      "delta 0.000000e+00 0.000000e+00 %12.6e\n"		\
+      "object 2 class gridconnections counts %i %i %i\n"\
+      "object 3 class array type double rank 0 items %lu data follows\n",
+      PACKAGE_STRING,title,nx,ny,nz,txmin,tymin,tzmin,
+      hx,hy,hzed,nx,ny,nz,txyz);
+  gzwrite(outfile, header, strlen(header)*sizeof(char));
+
+  /* Now write the data */
+  icol = 0;
+  for (i=0; i<nx; i++) {
+    for (j=0; j<ny; j++) {
+      for (k=0; k<nz; k++) {
+        u = k*(nx)*(ny)+j*(nx)+i;
+        if (pvec[u] > 0.0) {
+          sprintf(line, "%12.6e ", thee->data[u]);
+          gzwrite(outfile, line, strlen(line)*sizeof(char));
+          icol++;
+          if (icol == 3) {
+            icol = 0;
+            gzwrite(outfile, newline, strlen(newline)*sizeof(char));
+          }
         }
+      }
     }
-    if(icol < 3){
-        char newline[] = "\n";
-        gzwrite(outfile, newline, strlen(newline)*sizeof(char));
-    }
+  }
+  if(icol < 3){
+    char newline[] = "\n";
+    gzwrite(outfile, newline, strlen(newline)*sizeof(char));
+  }
 
-    /* Create the field */
-    sprintf(footer, "attribute \"dep\" string \"positions\"\n" \
-            "object \"regular positions regular connections\" class field\n" \
-            "component \"positions\" value 1\n" \
-            "component \"connections\" value 2\n" \
-            "component \"data\" value 3\n");
-    gzwrite(outfile, footer, strlen(footer)*sizeof(char));
+  /* Create the field */
+  sprintf(footer, "attribute \"dep\" string \"positions\"\n" \
+      "object \"regular positions regular connections\" class field\n" \
+      "component \"positions\" value 1\n" \
+      "component \"connections\" value 2\n" \
+      "component \"data\" value 3\n");
+  gzwrite(outfile, footer, strlen(footer)*sizeof(char));
 
-    gzclose(outfile);
+  gzclose(outfile);
 #else
 
-    Vnm_print(0, "WARNING\n");
-    Vnm_print(0, "Vgrid_readGZ:  gzip read/write support is disabled in this build\n");
-    Vnm_print(0, "Vgrid_readGZ:  configure and compile without the --disable-zlib flag.\n");
-    Vnm_print(0, "WARNING\n");
+  Vnm_print(0, "WARNING\n");
+  Vnm_print(0, "Vgrid_readGZ:  gzip read/write support is disabled in this build\n");
+  Vnm_print(0, "Vgrid_readGZ:  configure and compile without the --disable-zlib flag.\n");
+  Vnm_print(0, "WARNING\n");
 #endif
 }
 
@@ -1204,250 +1204,250 @@
 // Author:   Nathan Baker
 /////////////////////////////////////////////////////////////////////////// */
 VPUBLIC void Vgrid_writeDX(Vgrid *thee, const char *iodev, const char *iofmt,
-  const char *thost, const char *fname, char *title, double *pvec) {
+    const char *thost, const char *fname, char *title, double *pvec) {
 
-    double xmin, ymin, zmin, hx, hy, hzed;
-    int nx, ny, nz, nxPART, nyPART, nzPART;
-    int usepart, gotit;
-    size_t icol, i, j, k, u;
-    double x, y, z, xminPART, yminPART, zminPART;
-    Vio *sock;
-    char precFormat[VMAX_BUFSIZE];
-
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_writeDX:  Error -- got VNULL thee!\n");
-        VASSERT(0);
-    }
-    if (!(thee->ctordata || thee->readdata)) {
-        Vnm_print(2, "Vgrid_writeDX:  Error -- no data available!\n");
-        VASSERT(0);
-    }
-
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
-    xmin = thee->xmin;
-    ymin = thee->ymin;
-    zmin = thee->zmin;
-
-    if (pvec == VNULL) usepart = 0;
-    else usepart = 1;
-
-    /* Set up the virtual socket */
-    Vnm_print(0, "Vgrid_writeDX:  Opening virtual socket...\n");
-    sock = Vio_ctor(iodev,iofmt,thost,fname,"w");
-    if (sock == VNULL) {
-        Vnm_print(2, "Vgrid_writeDX:  Problem opening virtual socket %s\n",
-          fname);
-        return;
-    }
-    if (Vio_connect(sock, 0) < 0) {
-        Vnm_print(2, "Vgrid_writeDX: Problem connecting virtual socket %s\n",
-          fname);
-        return;
-    }
+  double xmin, ymin, zmin, hx, hy, hzed;
+  int nx, ny, nz, nxPART, nyPART, nzPART;
+  int usepart, gotit;
+  size_t icol, i, j, k, u;
+  double x, y, z, xminPART, yminPART, zminPART;
+  Vio *sock;
+  char precFormat[VMAX_BUFSIZE];
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_writeDX:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_writeDX:  Error -- no data available!\n");
+    VASSERT(0);
+  }
+
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+  xmin = thee->xmin;
+  ymin = thee->ymin;
+  zmin = thee->zmin;
+
+  if (pvec == VNULL) usepart = 0;
+  else usepart = 1;
+
+  /* Set up the virtual socket */
+  Vnm_print(0, "Vgrid_writeDX:  Opening virtual socket...\n");
+  sock = Vio_ctor(iodev,iofmt,thost,fname,"w");
+  if (sock == VNULL) {
+    Vnm_print(2, "Vgrid_writeDX:  Problem opening virtual socket %s\n",
+        fname);
+    return;
+  }
+  if (Vio_connect(sock, 0) < 0) {
+    Vnm_print(2, "Vgrid_writeDX: Problem connecting virtual socket %s\n",
+        fname);
+    return;
+  }
 
-    Vio_setWhiteChars(sock, MCwhiteChars);
-    Vio_setCommChars(sock, MCcommChars);
+  Vio_setWhiteChars(sock, MCwhiteChars);
+  Vio_setCommChars(sock, MCcommChars);
 
-    Vnm_print(0, "Vgrid_writeDX:  Writing to virtual socket...\n");
+  Vnm_print(0, "Vgrid_writeDX:  Writing to virtual socket...\n");
 
-    if (usepart) {
-        /* Get the lower corner and number of grid points for the local
-         * partition */
-        xminPART = VLARGE;
-        yminPART = VLARGE;
-        zminPART = VLARGE;
-        nxPART = 0;
-        nyPART = 0;
-        nzPART = 0;
-        /* First, search for the lower corner */
-        for (k=0; k<nz; k++) {
-            z = k*hzed + zmin;
-            for (j=0; j<ny; j++) {
-                y = j*hy + ymin;
-                for (i=0; i<nx; i++) {
-                    x = i*hx + xmin;
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        if (x < xminPART) xminPART = x;
-                        if (y < yminPART) yminPART = y;
-                        if (z < zminPART) zminPART = z;
-                    }
-                }
-            }
-        }
-        /* Now search for the number of grid points in the z direction */
-        for (k=0; k<nz; k++) {
-            gotit = 0;
-            for (j=0; j<ny; j++) {
-                for (i=0; i<nx; i++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nzPART++;
-        }
-        /* Now search for the number of grid points in the y direction */
-        for (j=0; j<ny; j++) {
-            gotit = 0;
-            for (k=0; k<nz; k++) {
-                for (i=0; i<nx; i++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nyPART++;
-        }
-        /* Now search for the number of grid points in the x direction */
+  if (usepart) {
+    /* Get the lower corner and number of grid points for the local
+     * partition */
+    xminPART = VLARGE;
+    yminPART = VLARGE;
+    zminPART = VLARGE;
+    nxPART = 0;
+    nyPART = 0;
+    nzPART = 0;
+    /* First, search for the lower corner */
+    for (k=0; k<nz; k++) {
+      z = k*hzed + zmin;
+      for (j=0; j<ny; j++) {
+        y = j*hy + ymin;
         for (i=0; i<nx; i++) {
-            gotit = 0;
-            for (k=0; k<nz; k++) {
-                for (j=0; j<ny; j++) {
-                    if (pvec[IJK(i,j,k)] > 0.0) {
-                        gotit = 1;
-                        break;
-                    }
-                }
-                if (gotit) break;
-            }
-            if (gotit) nxPART++;
+          x = i*hx + xmin;
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            if (x < xminPART) xminPART = x;
+            if (y < yminPART) yminPART = y;
+            if (z < zminPART) zminPART = z;
+          }
         }
+      }
+    }
+    /* Now search for the number of grid points in the z direction */
+    for (k=0; k<nz; k++) {
+      gotit = 0;
+      for (j=0; j<ny; j++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nzPART++;
+    }
+    /* Now search for the number of grid points in the y direction */
+    for (j=0; j<ny; j++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nyPART++;
+    }
+    /* Now search for the number of grid points in the x direction */
+    for (i=0; i<nx; i++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
+        for (j=0; j<ny; j++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nxPART++;
+    }
 
-        if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
-            Vnm_print(0, "Vgrid_writeDX:  printing only subset of domain\n");
-        }
+    if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
+      Vnm_print(0, "Vgrid_writeDX:  printing only subset of domain\n");
+    }
 
 
-        /* Write off the title (if we're not XDR) */
-        if (Vstring_strcasecmp(iofmt, "XDR") == 0) {
-            Vnm_print(0, "Vgrid_writeDX:  Skipping comments for XDR format.\n");
-        } else {
-            Vnm_print(0, "Vgrid_writeDX:  Writing comments for %s format.\n",
-              iofmt);
-            Vio_printf(sock, "# Data from %s\n", PACKAGE_STRING);
-            Vio_printf(sock, "# \n");
-            Vio_printf(sock, "# %s\n", title);
-            Vio_printf(sock, "# \n");
-        }
-
-        /* Write off the DX regular positions */
-        Vio_printf(sock, "object 1 class gridpositions counts %d %d %d\n",
-          nxPART, nyPART, nzPART);
-
-        sprintf(precFormat, Vprecision, xminPART, yminPART, zminPART);
-        Vio_printf(sock, "origin %s\n", precFormat);
-        sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
-        Vio_printf(sock, "delta %s\n", precFormat);
-        sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
-        Vio_printf(sock, "delta %s\n", precFormat);
-        sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
-        Vio_printf(sock, "delta %s\n", precFormat);
-
-        /* Write off the DX regular connections */
-        Vio_printf(sock, "object 2 class gridconnections counts %d %d %d\n",
-          nxPART, nyPART, nzPART);
-
-        /* Write off the DX data */
-        Vio_printf(sock, "object 3 class array type double rank 0 items %lu \
-data follows\n", (nxPART*nyPART*nzPART));
-        icol = 0;
-        for (i=0; i<nx; i++) {
-            for (j=0; j<ny; j++) {
-                for (k=0; k<nz; k++) {
-                    u = k*(nx)*(ny)+j*(nx)+i;
-                    if (pvec[u] > 0.0) {
-                        Vio_printf(sock, "%12.6e ", thee->data[u]);
-                        icol++;
-                        if (icol == 3) {
-                            icol = 0;
-                            Vio_printf(sock, "\n");
-                        }
-                    }
-                }
+    /* Write off the title (if we're not XDR) */
+    if (Vstring_strcasecmp(iofmt, "XDR") == 0) {
+      Vnm_print(0, "Vgrid_writeDX:  Skipping comments for XDR format.\n");
+    } else {
+      Vnm_print(0, "Vgrid_writeDX:  Writing comments for %s format.\n",
+          iofmt);
+      Vio_printf(sock, "# Data from %s\n", PACKAGE_STRING);
+      Vio_printf(sock, "# \n");
+      Vio_printf(sock, "# %s\n", title);
+      Vio_printf(sock, "# \n");
+    }
+
+    /* Write off the DX regular positions */
+    Vio_printf(sock, "object 1 class gridpositions counts %d %d %d\n",
+        nxPART, nyPART, nzPART);
+
+    sprintf(precFormat, Vprecision, xminPART, yminPART, zminPART);
+    Vio_printf(sock, "origin %s\n", precFormat);
+    sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
+    Vio_printf(sock, "delta %s\n", precFormat);
+    sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
+    Vio_printf(sock, "delta %s\n", precFormat);
+    sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
+    Vio_printf(sock, "delta %s\n", precFormat);
+
+    /* Write off the DX regular connections */
+    Vio_printf(sock, "object 2 class gridconnections counts %d %d %d\n",
+        nxPART, nyPART, nzPART);
+
+    /* Write off the DX data */
+    Vio_printf(sock, "object 3 class array type double rank 0 items %lu \
+        data follows\n", (nxPART*nyPART*nzPART));
+    icol = 0;
+    for (i=0; i<nx; i++) {
+      for (j=0; j<ny; j++) {
+        for (k=0; k<nz; k++) {
+          u = k*(nx)*(ny)+j*(nx)+i;
+          if (pvec[u] > 0.0) {
+            Vio_printf(sock, "%12.6e ", thee->data[u]);
+            icol++;
+            if (icol == 3) {
+              icol = 0;
+              Vio_printf(sock, "\n");
             }
+          }
         }
+      }
+    }
 
-        if (icol != 0) Vio_printf(sock, "\n");
+    if (icol != 0) Vio_printf(sock, "\n");
 
-        /* Create the field */
-        Vio_printf(sock, "attribute \"dep\" string \"positions\"\n");
-        Vio_printf(sock, "object \"regular positions regular connections\" \
-class field\n");
-        Vio_printf(sock, "component \"positions\" value 1\n");
-        Vio_printf(sock, "component \"connections\" value 2\n");
-        Vio_printf(sock, "component \"data\" value 3\n");
+    /* Create the field */
+    Vio_printf(sock, "attribute \"dep\" string \"positions\"\n");
+    Vio_printf(sock, "object \"regular positions regular connections\" \
+        class field\n");
+    Vio_printf(sock, "component \"positions\" value 1\n");
+    Vio_printf(sock, "component \"connections\" value 2\n");
+    Vio_printf(sock, "component \"data\" value 3\n");
 
+  } else {
+    /* Write off the title (if we're not XDR) */
+    if (Vstring_strcasecmp(iofmt, "XDR") == 0) {
+      Vnm_print(0, "Vgrid_writeDX:  Skipping comments for XDR format.\n");
     } else {
-        /* Write off the title (if we're not XDR) */
-        if (Vstring_strcasecmp(iofmt, "XDR") == 0) {
-            Vnm_print(0, "Vgrid_writeDX:  Skipping comments for XDR format.\n");
-        } else {
-            Vnm_print(0, "Vgrid_writeDX:  Writing comments for %s format.\n",
-              iofmt);
-            Vio_printf(sock, "# Data from %s\n", PACKAGE_STRING);
-            Vio_printf(sock, "# \n");
-            Vio_printf(sock, "# %s\n", title);
-            Vio_printf(sock, "# \n");
-        }
+      Vnm_print(0, "Vgrid_writeDX:  Writing comments for %s format.\n",
+          iofmt);
+      Vio_printf(sock, "# Data from %s\n", PACKAGE_STRING);
+      Vio_printf(sock, "# \n");
+      Vio_printf(sock, "# %s\n", title);
+      Vio_printf(sock, "# \n");
+    }
 
 
-        /* Write off the DX regular positions */
-        Vio_printf(sock, "object 1 class gridpositions counts %d %d %d\n",
-          nx, ny, nz);
-
-        sprintf(precFormat, Vprecision, xmin, ymin, zmin);
-        Vio_printf(sock, "origin %s\n", precFormat);
-        sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
-        Vio_printf(sock, "delta %s\n", precFormat);
-        sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
-        Vio_printf(sock, "delta %s\n", precFormat);
-        sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
-        Vio_printf(sock, "delta %s\n", precFormat);
-
-        /* Write off the DX regular connections */
-        Vio_printf(sock, "object 2 class gridconnections counts %d %d %d\n",
-          nx, ny, nz);
-
-        /* Write off the DX data */
-        Vio_printf(sock, "object 3 class array type double rank 0 items %lu \
-data follows\n", (nx*ny*nz));
-        icol = 0;
-        for (i=0; i<nx; i++) {
-            for (j=0; j<ny; j++) {
-                for (k=0; k<nz; k++) {
-                    u = k*(nx)*(ny)+j*(nx)+i;
-                    Vio_printf(sock, "%12.6e ", thee->data[u]);
-                    icol++;
-                    if (icol == 3) {
-                        icol = 0;
-                        Vio_printf(sock, "\n");
-                    }
-                }
-            }
+    /* Write off the DX regular positions */
+    Vio_printf(sock, "object 1 class gridpositions counts %d %d %d\n",
+        nx, ny, nz);
+
+    sprintf(precFormat, Vprecision, xmin, ymin, zmin);
+    Vio_printf(sock, "origin %s\n", precFormat);
+    sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
+    Vio_printf(sock, "delta %s\n", precFormat);
+    sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
+    Vio_printf(sock, "delta %s\n", precFormat);
+    sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
+    Vio_printf(sock, "delta %s\n", precFormat);
+
+    /* Write off the DX regular connections */
+    Vio_printf(sock, "object 2 class gridconnections counts %d %d %d\n",
+        nx, ny, nz);
+
+    /* Write off the DX data */
+    Vio_printf(sock, "object 3 class array type double rank 0 items %lu \
+        data follows\n", (nx*ny*nz));
+    icol = 0;
+    for (i=0; i<nx; i++) {
+      for (j=0; j<ny; j++) {
+        for (k=0; k<nz; k++) {
+          u = k*(nx)*(ny)+j*(nx)+i;
+          Vio_printf(sock, "%12.6e ", thee->data[u]);
+          icol++;
+          if (icol == 3) {
+            icol = 0;
+            Vio_printf(sock, "\n");
+          }
         }
-        if (icol != 0) Vio_printf(sock, "\n");
-
-        /* Create the field */
-        Vio_printf(sock, "attribute \"dep\" string \"positions\"\n");
-        Vio_printf(sock, "object \"regular positions regular connections\" \
-class field\n");
-        Vio_printf(sock, "component \"positions\" value 1\n");
-        Vio_printf(sock, "component \"connections\" value 2\n");
-        Vio_printf(sock, "component \"data\" value 3\n");
+      }
     }
+    if (icol != 0) Vio_printf(sock, "\n");
 
-    /* Close off the socket */
-    Vio_connectFree(sock);
-    Vio_dtor(&sock);
+    /* Create the field */
+    Vio_printf(sock, "attribute \"dep\" string \"positions\"\n");
+    Vio_printf(sock, "object \"regular positions regular connections\" \
+        class field\n");
+    Vio_printf(sock, "component \"positions\" value 1\n");
+    Vio_printf(sock, "component \"connections\" value 2\n");
+    Vio_printf(sock, "component \"data\" value 3\n");
+  }
+
+  /* Close off the socket */
+  Vio_connectFree(sock);
+  Vio_dtor(&sock);
 }
 
 /* ///////////////////////////////////////////////////////////////////////////
@@ -1456,523 +1456,523 @@
 // Author:   Juan Brandi
 /////////////////////////////////////////////////////////////////////////// */
 VPUBLIC void Vgrid_writeDXBIN(Vgrid *thee, const char *iodev, const char *iofmt,
-  const char *thost, const char *fname, char *title, double *pvec){
-
-	double xmin, ymin, zmin, hx, hy, hzed;
-	int nx, ny, nz, nxPART, nyPART, nzPART;
-	int usepart, gotit;
-	size_t icol, i, j, k, u;
-	double x, y, z, xminPART, yminPART, zminPART;
-	//Vio *sock;
-	char precFormat[VMAX_BUFSIZE];
-
-	if (thee == VNULL) {
-		Vnm_print(2, "Vgrid_writeDXBIN:  Error -- got VNULL thee!\n");
-			VASSERT(0);
-		}
-		if (!(thee->ctordata || thee->readdata)) {
-			Vnm_print(2, "Vgrid_writeDXBIN:  Error -- no data available!\n");
-			VASSERT(0);
-		}
-
-
-		hx = thee->hx;
-		hy = thee->hy;
-		hzed = thee->hzed;
-		nx = thee->nx;
-		ny = thee->ny;
-		nz = thee->nz;
-		xmin = thee->xmin;
-		ymin = thee->ymin;
-		zmin = thee->zmin;
-
-		if (pvec == VNULL) usepart = 0;
-		else usepart = 1;
-
-		/*will not use vio methods to try to avoid using malloc.*/
-		FILE *fd = fopen(fname,"wb");
-
-		//check to se if the file was created/open successfully.
-		if(fd == NULL){
-			printf("Vgrid_writeDXBIN: Problem opening file %s for writing.\n", fname);
-			return;
-		}
-
-		printf("Vgrid_writeDXBIN: Writing to file...\n");
-
-		if (usepart) {
-			/* Get the lower corner and number of grid points for the local
-			 * partition */
-			xminPART = VLARGE;
-			yminPART = VLARGE;
-			zminPART = VLARGE;
-			nxPART = 0;
-			nyPART = 0;
-			nzPART = 0;
-			/* First, search for the lower corner */
-			for (k=0; k<nz; k++) {
-				z = k*hzed + zmin;
-				for (j=0; j<ny; j++) {
-					y = j*hy + ymin;
-					for (i=0; i<nx; i++) {
-						x = i*hx + xmin;
-						if (pvec[IJK(i,j,k)] > 0.0) {
-							if (x < xminPART) xminPART = x;
-							if (y < yminPART) yminPART = y;
-							if (z < zminPART) zminPART = z;
-						}
-					}
-				}
-			}
-			/* Now search for the number of grid points in the z direction */
-			for (k=0; k<nz; k++) {
-				gotit = 0;
-				for (j=0; j<ny; j++) {
-					for (i=0; i<nx; i++) {
-						if (pvec[IJK(i,j,k)] > 0.0) {
-							gotit = 1;
-							break;
-						}
-					}
-					if (gotit) break;
-				}
-				if (gotit) nzPART++;
-			}
-			/* Now search for the number of grid points in the y direction */
-			for (j=0; j<ny; j++) {
-				gotit = 0;
-				for (k=0; k<nz; k++) {
-					for (i=0; i<nx; i++) {
-						if (pvec[IJK(i,j,k)] > 0.0) {
-							gotit = 1;
-							break;
-						}
-					}
-					if (gotit) break;
-				}
-				if (gotit) nyPART++;
-			}
-			/* Now search for the number of grid points in the x direction */
-			for (i=0; i<nx; i++) {
-				gotit = 0;
-				for (k=0; k<nz; k++) {
-					for (j=0; j<ny; j++) {
-						if (pvec[IJK(i,j,k)] > 0.0) {
-							gotit = 1;
-							break;
-						}
-					}
-					if (gotit) break;
-				}
-				if (gotit) nxPART++;
-			}
-
-			if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
-				Vnm_print(0, "Vgrid_writeDXBIN:  printing only subset of domain\n");
-			}
-
-			/* Write title (we're in XDR and "wb") */
-			//Vnm_print(0, "Vgrid_writeDXBIN:  Writing comments for dxbin format.\n");
-			printf("Vgrid_writeDXBIN: Writing comments for dxbin format\n");
-			fprintf(fd, "# Data from %s\n",PACKAGE_STRING);
-			fprintf(fd, "# \n");
-			fprintf(fd, "# %s\n",title);
-			fprintf(fd, "# \n");
-
-			/* Write off the DX regular positions */
-			fprintf(fd, "object 1 class gridpositions counts %d %d %d\n",nxPART, nyPART, nzPART);
-
-			sprintf(precFormat, Vprecision, xminPART, yminPART, zminPART);
-			fprintf(fd, "origin %s\n",precFormat);
-
-			sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
-			fprintf(fd, "delta %s\n",precFormat);
-
-			sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
-			fprintf(fd, "delta %s\n", precFormat);
-
-			sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
-			fprintf(fd, "delta %s\n", precFormat);
-
-			/* Write off the DX regular connections */
-			fprintf(fd, "object 2 class gridconnections counts %d %d %d\n", nxPART, nyPART, nzPART);
-
-			/* Write off the DX data */
-			fprintf(fd, "object 3 class array type double rank 0 items %d binary data follows\n",(nxPART*nyPART*nzPART));
-
-			icol = 0;
-			for (i=0; i<nx; i++) {
-				for (j=0; j<ny; j++) {
-					for (k=0; k<nz; k++) {
-						u = k*(nx)*(ny)+j*(nx)+i;
-						if (pvec[u] > 0.0) {
-							fwrite(&(thee->data)[u],sizeof(double),1,fd);
-							icol++;
-							/*don't need the column formating to write binary doubles.*/
-							if (icol == 3) {
-								icol = 0;
-							}
-						}
-					}
-				}
-			}
-
-			fprintf(fd,"\n");
-
-			/* Create the field */
-			fprintf(fd, "attribute \"dep\" string \"positions\"\n");
-			fprintf(fd, "object \"regular positions regular connections\" class field\n");
-			fprintf(fd, "component \"positions\" value 1\n");
-			fprintf(fd, "component \"connections\" value 2\n");
-			fprintf(fd, "component \"data\" value 3\n");
-
-			fclose(fd);
-
-		} else {
-			/*write dx format title*/
-			printf("Vgrid_writeDXBIN: Writing comments for %s format.\n",iofmt);
-			fprintf(fd,"# Data from %s\n", PACKAGE_STRING);
-			fprintf(fd,"# \n");
-			fprintf(fd, "# %s\n", title);
-			fprintf(fd, "# \n");
-
-			/* Write off the DX regular positions */
-			fprintf(fd, "object 1 class gridpositions counts %d %d %d\n", nx, ny, nz);
-
-			sprintf(precFormat, Vprecision, xmin, ymin, zmin);
-			fprintf(fd, "origin %s\n", precFormat);
-
-			sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
-			fprintf(fd, "delta %s\n", precFormat);
-
-			sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
-			fprintf(fd, "delta %s\n", precFormat);
-
-			sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
-			fprintf(fd, "delta %s\n", precFormat);
-
-			/* Write off the DX regular connections */
-			fprintf(fd, "object 2 class gridconnections counts %d %d %d\n", nx, ny, nz);
-
-			/* Write off the DX data */
-			fprintf(fd, "object 3 class array type double rank 0 items %d binary data follows\n", (nx*ny*nz));
-
-			icol = 0;
-			for (i=0; i<nx; i++) {
-				for (j=0; j<ny; j++) {
-					for (k=0; k<nz; k++) {
-						u = k*(nx)*(ny)+j*(nx)+i;
-						fwrite(&(thee->data)[u],sizeof(double),1,fd);
-						icol++;
-						if (icol == 3) {
-							icol = 0;
-						}
-					}
-				}
-			}
-
-			fprintf(fd, "\n");
-
-			/* Create the field */
-			fprintf(fd, "attribute \"dep\" string \"positions\"\n");
-			fprintf(fd, "object \"regular positions regular connections\" class field\n");
-			fprintf(fd, "component \"positions\" value 1\n");
-			fprintf(fd, "component \"connections\" value 2\n");
-			fprintf(fd, "component \"data\" value 3\n");
-
-			fclose(fd);
-		}
-}
-
+    const char *thost, const char *fname, char *title, double *pvec){
 
-/* ///////////////////////////////////////////////////////////////////////////
-// Routine:  Vgrid_writeUHBD
-// Author:   Nathan Baker
-/////////////////////////////////////////////////////////////////////////// */
-VPUBLIC void Vgrid_writeUHBD(Vgrid *thee, const char *iodev, const char *iofmt,
-  const char *thost, const char *fname, char *title, double *pvec) {
+  double xmin, ymin, zmin, hx, hy, hzed;
+  int nx, ny, nz, nxPART, nyPART, nzPART;
+  int usepart, gotit;
+  size_t icol, i, j, k, u;
+  double x, y, z, xminPART, yminPART, zminPART;
+  //Vio *sock;
+  char precFormat[VMAX_BUFSIZE];
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_writeDXBIN:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_writeDXBIN:  Error -- no data available!\n");
+    VASSERT(0);
+  }
+
+
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+  xmin = thee->xmin;
+  ymin = thee->ymin;
+  zmin = thee->zmin;
+
+  if (pvec == VNULL) usepart = 0;
+  else usepart = 1;
+
+  /*will not use vio methods to try to avoid using malloc.*/
+  FILE *fd = fopen(fname,"wb");
+
+  //check to se if the file was created/open successfully.
+  if(fd == NULL){
+    printf("Vgrid_writeDXBIN: Problem opening file %s for writing.\n", fname);
+    return;
+  }
 
-    size_t u, icol, i, j, k;
-    size_t gotit, nx, ny, nz;
-    double xmin, ymin, zmin, hzed, hy, hx;
-    Vio *sock;
+  printf("Vgrid_writeDXBIN: Writing to file...\n");
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_writeUHBD:  Error -- got VNULL thee!\n");
-        VASSERT(0);
+  if (usepart) {
+    /* Get the lower corner and number of grid points for the local
+     * partition */
+    xminPART = VLARGE;
+    yminPART = VLARGE;
+    zminPART = VLARGE;
+    nxPART = 0;
+    nyPART = 0;
+    nzPART = 0;
+    /* First, search for the lower corner */
+    for (k=0; k<nz; k++) {
+      z = k*hzed + zmin;
+      for (j=0; j<ny; j++) {
+        y = j*hy + ymin;
+        for (i=0; i<nx; i++) {
+          x = i*hx + xmin;
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            if (x < xminPART) xminPART = x;
+            if (y < yminPART) yminPART = y;
+            if (z < zminPART) zminPART = z;
+          }
+        }
+      }
     }
-    if (!(thee->ctordata || thee->readdata)) {
-        Vnm_print(2, "Vgrid_writeUHBD:  Error -- no data available!\n");
-        VASSERT(0);
+    /* Now search for the number of grid points in the z direction */
+    for (k=0; k<nz; k++) {
+      gotit = 0;
+      for (j=0; j<ny; j++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nzPART++;
+    }
+    /* Now search for the number of grid points in the y direction */
+    for (j=0; j<ny; j++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
+        for (i=0; i<nx; i++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nyPART++;
     }
-
-    if ((thee->hx!=thee->hy) || (thee->hy!=thee->hzed)
-      || (thee->hx!=thee->hzed)) {
-        Vnm_print(2, "Vgrid_writeUHBD: can't write UHBD mesh with non-uniform \
-spacing\n");
-        return;
+    /* Now search for the number of grid points in the x direction */
+    for (i=0; i<nx; i++) {
+      gotit = 0;
+      for (k=0; k<nz; k++) {
+        for (j=0; j<ny; j++) {
+          if (pvec[IJK(i,j,k)] > 0.0) {
+            gotit = 1;
+            break;
+          }
+        }
+        if (gotit) break;
+      }
+      if (gotit) nxPART++;
     }
 
-    /* Set up the virtual socket */
-    sock = Vio_ctor(iodev,iofmt,thost,fname,"w");
-    if (sock == VNULL) {
-        Vnm_print(2, "Vgrid_writeUHBD: Problem opening virtual socket %s\n",
-          fname);
-        return;
-    }
-    if (Vio_connect(sock, 0) < 0) {
-        Vnm_print(2, "Vgrid_writeUHBD: Problem connecting virtual socket %s\n",
-          fname);
-        return;
+    if ((nxPART != nx) || (nyPART != ny) || (nzPART != nz)) {
+      Vnm_print(0, "Vgrid_writeDXBIN:  printing only subset of domain\n");
     }
 
-    /* Get the lower corner and number of grid points for the local
-     * partition */
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
-    xmin = thee->xmin;
-    ymin = thee->ymin;
-    zmin = thee->zmin;
-
-    /* Let interested folks know that partition information is ignored */
-    if (pvec != VNULL) {
-        gotit = 0;
-        for (i=0; i<(nx*ny*nz); i++) {
-            if (pvec[i] == 0) {
-                gotit = 1;
-                break;
-            }
-        }
-        if (gotit) {
-            Vnm_print(2, "Vgrid_writeUHBD:  IGNORING PARTITION INFORMATION!\n");
-            Vnm_print(2, "Vgrid_writeUHBD:  This means I/O from parallel runs \
-will have significant overlap.\n");
-        }
-    }
+    /* Write title (we're in XDR and "wb") */
+    //Vnm_print(0, "Vgrid_writeDXBIN:  Writing comments for dxbin format.\n");
+    printf("Vgrid_writeDXBIN: Writing comments for dxbin format\n");
+    fprintf(fd, "# Data from %s\n",PACKAGE_STRING);
+    fprintf(fd, "# \n");
+    fprintf(fd, "# %s\n",title);
+    fprintf(fd, "# \n");
 
-    /* Write out the header */
-    Vio_printf(sock, "%72s\n", title);
-    Vio_printf(sock, "%12.5e%12.5e%7d%7d%7d%7d%7d\n", 1.0, 0.0, -1, 0,
-      nz, 1, nz);
-    Vio_printf(sock, "%7d%7d%7d%12.5e%12.5e%12.5e%12.5e\n", nx, ny, nz,
-      hx, (xmin-hx), (ymin-hx), (zmin-hx));
-    Vio_printf(sock, "%12.5e%12.5e%12.5e%12.5e\n", 0.0, 0.0, 0.0, 0.0);
-    Vio_printf(sock, "%12.5e%12.5e%7d%7d", 0.0, 0.0, 0, 0);
+    /* Write off the DX regular positions */
+    fprintf(fd, "object 1 class gridpositions counts %d %d %d\n",nxPART, nyPART, nzPART);
+
+    sprintf(precFormat, Vprecision, xminPART, yminPART, zminPART);
+    fprintf(fd, "origin %s\n",precFormat);
+
+    sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
+    fprintf(fd, "delta %s\n",precFormat);
+
+    sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
+    fprintf(fd, "delta %s\n", precFormat);
+
+    sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
+    fprintf(fd, "delta %s\n", precFormat);
+
+    /* Write off the DX regular connections */
+    fprintf(fd, "object 2 class gridconnections counts %d %d %d\n", nxPART, nyPART, nzPART);
+
+    /* Write off the DX data */
+    fprintf(fd, "object 3 class array type double rank 0 items %d binary data follows\n",(nxPART*nyPART*nzPART));
 
-    /* Write out the entries */
     icol = 0;
-    for (k=0; k<nz; k++) {
-        Vio_printf(sock, "\n%7d%7d%7d\n", k+1, thee->nx, thee->ny);
-        icol = 0;
-        for (j=0; j<ny; j++) {
-            for (i=0; i<nx; i++) {
-                u = k*(nx)*(ny)+j*(nx)+i;
-                icol++;
-                Vio_printf(sock, " %12.5e", thee->data[u]);
-                if (icol == 6) {
-                    icol = 0;
-                    Vio_printf(sock, "\n");
-                }
+    for (i=0; i<nx; i++) {
+      for (j=0; j<ny; j++) {
+        for (k=0; k<nz; k++) {
+          u = k*(nx)*(ny)+j*(nx)+i;
+          if (pvec[u] > 0.0) {
+            fwrite(&(thee->data)[u],sizeof(double),1,fd);
+            icol++;
+            /*don't need the column formating to write binary doubles.*/
+            if (icol == 3) {
+              icol = 0;
             }
+          }
         }
+      }
     }
-    if (icol != 0) Vio_printf(sock, "\n");
 
-    /* Close off the socket */
-    Vio_connectFree(sock);
-    Vio_dtor(&sock);
-}
-
-VPUBLIC double Vgrid_integrate(Vgrid *thee) {
+    fprintf(fd,"\n");
 
-    size_t i, j, k;
-    int nx, ny, nz;
-    double sum, w;
+    /* Create the field */
+    fprintf(fd, "attribute \"dep\" string \"positions\"\n");
+    fprintf(fd, "object \"regular positions regular connections\" class field\n");
+    fprintf(fd, "component \"positions\" value 1\n");
+    fprintf(fd, "component \"connections\" value 2\n");
+    fprintf(fd, "component \"data\" value 3\n");
+
+    fclose(fd);
+
+  } else {
+    /*write dx format title*/
+    printf("Vgrid_writeDXBIN: Writing comments for %s format.\n",iofmt);
+    fprintf(fd,"# Data from %s\n", PACKAGE_STRING);
+    fprintf(fd,"# \n");
+    fprintf(fd, "# %s\n", title);
+    fprintf(fd, "# \n");
+
+    /* Write off the DX regular positions */
+    fprintf(fd, "object 1 class gridpositions counts %d %d %d\n", nx, ny, nz);
+
+    sprintf(precFormat, Vprecision, xmin, ymin, zmin);
+    fprintf(fd, "origin %s\n", precFormat);
+
+    sprintf(precFormat, Vprecision, hx, 0.0, 0.0);
+    fprintf(fd, "delta %s\n", precFormat);
+
+    sprintf(precFormat, Vprecision, 0.0, hy, 0.0);
+    fprintf(fd, "delta %s\n", precFormat);
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_integrate:  Got VNULL thee!\n");
-        VASSERT(0);
-    }
+    sprintf(precFormat, Vprecision, 0.0, 0.0, hzed);
+    fprintf(fd, "delta %s\n", precFormat);
 
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
+    /* Write off the DX regular connections */
+    fprintf(fd, "object 2 class gridconnections counts %d %d %d\n", nx, ny, nz);
 
-    sum = 0.0;
+    /* Write off the DX data */
+    fprintf(fd, "object 3 class array type double rank 0 items %d binary data follows\n", (nx*ny*nz));
 
-    for (k=0; k<nz; k++) {
-        w = 1.0;
-        if ((k==0) || (k==(nz-1))) w = w * 0.5;
-        for (j=0; j<ny; j++) {
-            w = 1.0;
-            if ((j==0) || (j==(ny-1))) w = w * 0.5;
-            for (i=0; i<nx; i++) {
-                w = 1.0;
-                if ((i==0) || (i==(nx-1))) w = w * 0.5;
-                sum = sum + w*(thee->data[IJK(i,j,k)]);
-            }
+    icol = 0;
+    for (i=0; i<nx; i++) {
+      for (j=0; j<ny; j++) {
+        for (k=0; k<nz; k++) {
+          u = k*(nx)*(ny)+j*(nx)+i;
+          fwrite(&(thee->data)[u],sizeof(double),1,fd);
+          icol++;
+          if (icol == 3) {
+            icol = 0;
+          }
         }
+      }
     }
 
-    sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
+    fprintf(fd, "\n");
 
-    return sum;
+    /* Create the field */
+    fprintf(fd, "attribute \"dep\" string \"positions\"\n");
+    fprintf(fd, "object \"regular positions regular connections\" class field\n");
+    fprintf(fd, "component \"positions\" value 1\n");
+    fprintf(fd, "component \"connections\" value 2\n");
+    fprintf(fd, "component \"data\" value 3\n");
 
+    fclose(fd);
+  }
 }
 
 
-VPUBLIC double Vgrid_normL1(Vgrid *thee) {
+/* ///////////////////////////////////////////////////////////////////////////
+// Routine:  Vgrid_writeUHBD
+// Author:   Nathan Baker
+/////////////////////////////////////////////////////////////////////////// */
+VPUBLIC void Vgrid_writeUHBD(Vgrid *thee, const char *iodev, const char *iofmt,
+    const char *thost, const char *fname, char *title, double *pvec) {
 
-    size_t i, j, k;
-    int nx, ny, nz;
-    double sum;
+  size_t u, icol, i, j, k;
+  size_t gotit, nx, ny, nz;
+  double xmin, ymin, zmin, hzed, hy, hx;
+  Vio *sock;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_writeUHBD:  Error -- got VNULL thee!\n");
+    VASSERT(0);
+  }
+  if (!(thee->ctordata || thee->readdata)) {
+    Vnm_print(2, "Vgrid_writeUHBD:  Error -- no data available!\n");
+    VASSERT(0);
+  }
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_normL1:  Got VNULL thee!\n");
-        VASSERT(0);
-    }
+  if ((thee->hx!=thee->hy) || (thee->hy!=thee->hzed)
+      || (thee->hx!=thee->hzed)) {
+    Vnm_print(2, "Vgrid_writeUHBD: can't write UHBD mesh with non-uniform \
+        spacing\n");
+    return;
+  }
+
+  /* Set up the virtual socket */
+  sock = Vio_ctor(iodev,iofmt,thost,fname,"w");
+  if (sock == VNULL) {
+    Vnm_print(2, "Vgrid_writeUHBD: Problem opening virtual socket %s\n",
+        fname);
+    return;
+  }
+  if (Vio_connect(sock, 0) < 0) {
+    Vnm_print(2, "Vgrid_writeUHBD: Problem connecting virtual socket %s\n",
+        fname);
+    return;
+  }
+
+  /* Get the lower corner and number of grid points for the local
+   * partition */
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+  xmin = thee->xmin;
+  ymin = thee->ymin;
+  zmin = thee->zmin;
+
+  /* Let interested folks know that partition information is ignored */
+  if (pvec != VNULL) {
+    gotit = 0;
+    for (i=0; i<(nx*ny*nz); i++) {
+      if (pvec[i] == 0) {
+        gotit = 1;
+        break;
+      }
+    }
+    if (gotit) {
+      Vnm_print(2, "Vgrid_writeUHBD:  IGNORING PARTITION INFORMATION!\n");
+      Vnm_print(2, "Vgrid_writeUHBD:  This means I/O from parallel runs \
+          will have significant overlap.\n");
+    }
+  }
+
+  /* Write out the header */
+  Vio_printf(sock, "%72s\n", title);
+  Vio_printf(sock, "%12.5e%12.5e%7d%7d%7d%7d%7d\n", 1.0, 0.0, -1, 0,
+      nz, 1, nz);
+  Vio_printf(sock, "%7d%7d%7d%12.5e%12.5e%12.5e%12.5e\n", nx, ny, nz,
+      hx, (xmin-hx), (ymin-hx), (zmin-hx));
+  Vio_printf(sock, "%12.5e%12.5e%12.5e%12.5e\n", 0.0, 0.0, 0.0, 0.0);
+  Vio_printf(sock, "%12.5e%12.5e%7d%7d", 0.0, 0.0, 0, 0);
 
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
+  /* Write out the entries */
+  icol = 0;
+  for (k=0; k<nz; k++) {
+    Vio_printf(sock, "\n%7d%7d%7d\n", k+1, thee->nx, thee->ny);
+    icol = 0;
+    for (j=0; j<ny; j++) {
+      for (i=0; i<nx; i++) {
+        u = k*(nx)*(ny)+j*(nx)+i;
+        icol++;
+        Vio_printf(sock, " %12.5e", thee->data[u]);
+        if (icol == 6) {
+          icol = 0;
+          Vio_printf(sock, "\n");
+        }
+      }
+    }
+  }
+  if (icol != 0) Vio_printf(sock, "\n");
+
+  /* Close off the socket */
+  Vio_connectFree(sock);
+  Vio_dtor(&sock);
+}
 
-    sum = 0.0;
-    for (k=0; k<nz; k++) {
-        for (j=0; j<ny; j++) {
-            for (i=0; i<nx; i++) {
-                sum = sum + VABS(thee->data[IJK(i,j,k)]);
-            }
-        }
+VPUBLIC double Vgrid_integrate(Vgrid *thee) {
+
+  size_t i, j, k;
+  int nx, ny, nz;
+  double sum, w;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_integrate:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
+
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+
+  sum = 0.0;
+
+  for (k=0; k<nz; k++) {
+    w = 1.0;
+    if ((k==0) || (k==(nz-1))) w = w * 0.5;
+    for (j=0; j<ny; j++) {
+      w = 1.0;
+      if ((j==0) || (j==(ny-1))) w = w * 0.5;
+      for (i=0; i<nx; i++) {
+        w = 1.0;
+        if ((i==0) || (i==(nx-1))) w = w * 0.5;
+        sum = sum + w*(thee->data[IJK(i,j,k)]);
+      }
     }
+  }
 
-    sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
+  sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
 
-    return sum;
+  return sum;
 
 }
 
-VPUBLIC double Vgrid_normL2(Vgrid *thee) {
 
-    size_t i, j, k;
-    int nx, ny, nz;
-    double sum;
+VPUBLIC double Vgrid_normL1(Vgrid *thee) {
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_normL2:  Got VNULL thee!\n");
-        VASSERT(0);
+  size_t i, j, k;
+  int nx, ny, nz;
+  double sum;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_normL1:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
+
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+
+  sum = 0.0;
+  for (k=0; k<nz; k++) {
+    for (j=0; j<ny; j++) {
+      for (i=0; i<nx; i++) {
+        sum = sum + VABS(thee->data[IJK(i,j,k)]);
+      }
     }
+  }
 
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
+  sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
 
-    sum = 0.0;
-    for (k=0; k<nz; k++) {
-        for (j=0; j<ny; j++) {
-            for (i=0; i<nx; i++) {
-                sum = sum + VSQR(thee->data[IJK(i,j,k)]);
-            }
-        }
+  return sum;
+
+}
+
+VPUBLIC double Vgrid_normL2(Vgrid *thee) {
+
+  size_t i, j, k;
+  int nx, ny, nz;
+  double sum;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_normL2:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
+
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+
+  sum = 0.0;
+  for (k=0; k<nz; k++) {
+    for (j=0; j<ny; j++) {
+      for (i=0; i<nx; i++) {
+        sum = sum + VSQR(thee->data[IJK(i,j,k)]);
+      }
     }
+  }
 
-    sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
+  sum = sum*(thee->hx)*(thee->hy)*(thee->hzed);
 
-    return VSQRT(sum);
+  return VSQRT(sum);
 
 }
 
 VPUBLIC double Vgrid_seminormH1(Vgrid *thee) {
 
-    size_t i, j, k;
-    int nx, ny, nz, d;
-    double pt[3], grad[3], sum, hx, hy, hzed, xmin, ymin, zmin;
-
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_seminormH1:  Got VNULL thee!\n");
-        VASSERT(0);
-    }
-
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
-    hx = thee->hx;
-    hy = thee->hy;
-    hzed = thee->hzed;
-    xmin = thee->xmin;
-    ymin = thee->ymin;
-    zmin = thee->zmin;
-
-    sum = 0.0;
-    for (k=0; k<nz; k++) {
-        pt[2] = k*hzed + zmin;
-        for (j=0; j<ny; j++) {
-            pt[1] = j*hy + ymin;
-            for (i=0; i<nx; i++) {
-                pt[0] = i*hx + xmin;
-                VASSERT(Vgrid_gradient(thee, pt, grad));
-                for (d=0; d<3; d++) sum = sum + VSQR(grad[d]);
-            }
-        }
+  size_t i, j, k;
+  int nx, ny, nz, d;
+  double pt[3], grad[3], sum, hx, hy, hzed, xmin, ymin, zmin;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_seminormH1:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
+
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+  hx = thee->hx;
+  hy = thee->hy;
+  hzed = thee->hzed;
+  xmin = thee->xmin;
+  ymin = thee->ymin;
+  zmin = thee->zmin;
+
+  sum = 0.0;
+  for (k=0; k<nz; k++) {
+    pt[2] = k*hzed + zmin;
+    for (j=0; j<ny; j++) {
+      pt[1] = j*hy + ymin;
+      for (i=0; i<nx; i++) {
+        pt[0] = i*hx + xmin;
+        VASSERT(Vgrid_gradient(thee, pt, grad));
+        for (d=0; d<3; d++) sum = sum + VSQR(grad[d]);
+      }
     }
+  }
 
-    sum = sum*(hx)*(hy)*(hzed);
+  sum = sum*(hx)*(hy)*(hzed);
 
-    if (VABS(sum) < VSMALL) sum = 0.0;
-    else sum = VSQRT(sum);
+  if (VABS(sum) < VSMALL) sum = 0.0;
+  else sum = VSQRT(sum);
 
-    return sum;
+  return sum;
 
 }
 
 VPUBLIC double Vgrid_normH1(Vgrid *thee) {
 
-    double sum = 0.0;
+  double sum = 0.0;
 
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_normH1:  Got VNULL thee!\n");
-        VASSERT(0);
-    }
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_normH1:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
 
-    sum = VSQR(Vgrid_seminormH1(thee)) + VSQR(Vgrid_normL2(thee));
+  sum = VSQR(Vgrid_seminormH1(thee)) + VSQR(Vgrid_normL2(thee));
 
-    return VSQRT(sum);
+  return VSQRT(sum);
 
 }
 
 VPUBLIC double Vgrid_normLinf(Vgrid *thee) {
 
-    size_t i, j, k;
-    int nx, ny, nz, gotval;
-    double sum, val;
-
-    if (thee == VNULL) {
-        Vnm_print(2, "Vgrid_normLinf:  Got VNULL thee!\n");
-        VASSERT(0);
-    }
-
-    nx = thee->nx;
-    ny = thee->ny;
-    nz = thee->nz;
-
-    sum = 0.0;
-    gotval = 0;
-    for (k=0; k<nz; k++) {
-        for (j=0; j<ny; j++) {
-            for (i=0; i<nx; i++) {
-                val = VABS(thee->data[IJK(i,j,k)]);
-                if (!gotval) {
-                    gotval = 1;
-                    sum = val;
-                }
-                if (val > sum) sum = val;
-            }
+  size_t i, j, k;
+  int nx, ny, nz, gotval;
+  double sum, val;
+
+  if (thee == VNULL) {
+    Vnm_print(2, "Vgrid_normLinf:  Got VNULL thee!\n");
+    VASSERT(0);
+  }
+
+  nx = thee->nx;
+  ny = thee->ny;
+  nz = thee->nz;
+
+  sum = 0.0;
+  gotval = 0;
+  for (k=0; k<nz; k++) {
+    for (j=0; j<ny; j++) {
+      for (i=0; i<nx; i++) {
+        val = VABS(thee->data[IJK(i,j,k)]);
+        if (!gotval) {
+          gotval = 1;
+          sum = val;
         }
+        if (val > sum) sum = val;
+      }
     }
+  }
 
-    return sum;
+  return sum;
 
 }
diff --new-file -ru apbs-3.0.0/src/pmgc/buildGd.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/buildGd.c
--- apbs-3.0.0/src/pmgc/buildGd.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/buildGd.c	2020-09-29 19:12:06.000000000 +0200
@@ -229,7 +229,7 @@
         for(jj=2; jj<=*ny-1; jj++) {
             j = 2 * jj - 1;
 
-            for(ii=2; ii<=*nx-1; i++) {
+            for(ii=2; ii<=*nx-1; ii++) {
                i = 2 * ii - 1;
 
                // Index computations
diff --new-file -ru apbs-3.0.0/src/pmgc/mgsubd.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mgsubd.c
--- apbs-3.0.0/src/pmgc/mgsubd.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mgsubd.c	2020-09-29 19:12:06.000000000 +0200
@@ -54,6 +54,10 @@
 
 #include "mgsubd.h"
 
+double bf;
+double oh;
+double cputme;
+
 VPUBLIC void Vbuildops(
         int *nx, int *ny, int *nz,
         int *nlev, int *ipkey, int *iinfo,
diff --new-file -ru apbs-3.0.0/src/pmgc/mgsubd.h apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mgsubd.h
--- apbs-3.0.0/src/pmgc/mgsubd.h	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mgsubd.h	2020-09-29 19:12:06.000000000 +0200
@@ -254,9 +254,6 @@
         );
 
 
-/// @todo  Get rid of these globals in refactor
-double bf, oh, cputme;
-
 /** @brief   This routine prints out some info and such from inside multigrid.
  *  @author  Tucker Beck [C Translation], Michael Holst [Original]
  *  @note    Replaces prtstp from mgsubd.f
diff --new-file -ru apbs-3.0.0/src/pmgc/mypdec.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mypdec.c
--- apbs-3.0.0/src/pmgc/mypdec.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mypdec.c	2020-09-29 19:12:06.000000000 +0200
@@ -54,6 +54,18 @@
 
 #include "mypdec.h"
 
+double v1;
+double v2;
+double v3;
+double conc1;
+double conc2;
+double conc3;
+double vol;
+double relSize;
+int nion;
+double charge[MAXIONS];
+double sconc[MAXIONS];
+
 VPUBLIC void Vmypdefinitlpbe(int *tnion, double *tcharge, double *tsconc) {
 
     int i;
diff --new-file -ru apbs-3.0.0/src/pmgc/mypdec.h apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mypdec.h
--- apbs-3.0.0/src/pmgc/mypdec.h	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/pmgc/mypdec.h	2020-09-29 19:12:06.000000000 +0200
@@ -67,10 +67,10 @@
 #define SINH_MAX  85.0
 
 /// @todo  Remove dependencies on global variables
-double v1, v2, v3, conc1, conc2, conc3, vol, relSize;
-int nion;
-double charge[MAXIONS];
-double sconc[MAXIONS];
+extern double v1, v2, v3, conc1, conc2, conc3, vol, relSize;
+extern int nion;
+extern double charge[MAXIONS];
+extern double sconc[MAXIONS];
 
 #define Na 6.022045000e-04
 
diff --new-file -ru apbs-3.0.0/src/routines.c apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/routines.c
--- apbs-3.0.0/src/routines.c	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/src/routines.c	2020-09-29 19:12:06.000000000 +0200
@@ -5503,61 +5503,6 @@
       strncpy(pbsamIn.expfil_[i], samparm->expfil[i], CHR_MAXLEN);
   }
 
-  // Running MSMS if the MSMS flag is used
-  if (samparm->setmsms == 1) {
-    for (i=0; i<pbamIn.nmol_; i++) {
-    // find a clever way to use prefix of molecule name for msms outputs
-    for (j=0; j < VMAX_ARGLEN; j++)
-       if (nosh->molpath[i][j] == '\0') break;
-
-    // assume terminated by '.pqr' -> 4 char, want to term w/ '.xyzr'
-	//char xyzr[j+2], surf[j+2], outname[j-4];
-	char xyzr[VMAX_ARGLEN], surf[VMAX_ARGLEN], outname[VMAX_ARGLEN];
-    for( k=0; k < j - 4; k++)
-    {
-        xyzr[k] = nosh->molpath[i][k];
-        outname[k] = nosh->molpath[i][k];
-        surf[k] = nosh->molpath[i][k];
-    }
-    outname[k] = '\0';
-    xyzr[k]   = '.';  surf[k]   = '.';
-    xyzr[k+1] = 'x';  surf[k+1] = 'v';
-    xyzr[k+2] = 'y';  surf[k+2] = 'e';
-    xyzr[k+3] = 'z';  surf[k+3] = 'r';
-    xyzr[k+4] = 'r';  surf[k+4] = 't';
-    xyzr[k+5] = '\0'; surf[k+5] = '\0';;
-
-    // write an XYZR file from xyzr data
-    FILE *fp;
-    fp=fopen(xyzr, "w");
-    Vatom *atom;
-    for(k=0; k< Valist_getNumberAtoms(molecules[i]); k++)
-    {
-       atom = Valist_getAtom(molecules[i],k);
-       fprintf(fp, "%.4f  %.4f  %.4f  %.4f\n", Vatom_getPosition(atom)[0],
-                                               Vatom_getPosition(atom)[1],
-                                               Vatom_getPosition(atom)[2],
-                                               Vatom_getRadius(atom));
-    }
-    fclose(fp);
-
-    #ifdef _WIN32
-       sprintf(fname_tp, "msms.exe -if %s -prob %f -dens %f -of %s",
-               xyzr, samparm->probe_radius,samparm->density, outname);
-    #else
-       sprintf(fname_tp, "msms -if %s -prob %f -dens %f -of %s",
-               xyzr, samparm->probe_radius,samparm->density, outname);
-    #endif
-
-      printf("%s\n", fname_tp);
-
-      printf("Running MSMS...\n");
-      ierr = system(fname_tp);
-
-      strncpy(pbsamIn.surffil_[i], surf, CHR_MAXLEN);
-    }
-  }
-
 
   // debug
   printPBSAMStruct( pbamIn, pbsamIn );
diff --new-file -ru apbs-3.0.0/tests/apbs_check_forces.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_forces.py
--- apbs-3.0.0/tests/apbs_check_forces.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_forces.py	2020-09-29 19:12:06.000000000 +0200
@@ -10,13 +10,21 @@
 
 ERROR_TOLERANCE = 1e-6
 
+
 class PolarForce:
     """
     Exctracts and compares computations of polar forces
     """
 
     # A crazy regex pattern used to match label/value sets
-    pattern = r'\s+(?P<label>[a-zA-Z]+)\s+(?P<x>[+-]?\d\.\d+E[+-]\d+)\s+(?P<y>[+-]?\d\.\d+E[+-]\d+)\s+(?P<z>[+-]?\d\.\d+E[+-]\d+)'
+    patterns = [
+        r"\s+",
+        r"(?P<label>[a-zA-Z]+)\s+",
+        r"(?P<x>[+-]?\d\.\d+E[+-]\d+)\s+",
+        r"(?P<y>[+-]?\d\.\d+E[+-]\d+)\s+",
+        r"(?P<z>[+-]?\d\.\d+E[+-]\d+)",
+    ]
+    pattern = "".join(patterns)
 
     def __init__(self, label, x, y, z):
         """
@@ -27,15 +35,19 @@
         self.y = y
         self.z = z
 
-    def __init__(self, line):
+    def __init__(self, line):  # noqa F811
         """
         Extracts ploar force results from a file at a given line
         """
-        m = re.search(self.pattern, line)
-        self.label = m.group('label')
-        self.x = float(m.group('x'))
-        self.y = float(m.group('y'))
-        self.z = float(m.group('z'))
+        try:
+            m = re.search(self.pattern, line)
+            self.label = m.group("label")
+            self.x = float(m.group("x"))
+            self.y = float(m.group("y"))
+            self.z = float(m.group("z"))
+        except Exception as msg:
+            sys.stderr.write(f"\nLINE:{line}\nException:{msg}\n")
+            raise msg
 
     def diff(self, other):
         """
@@ -43,7 +55,7 @@
         """
 
         diff_dict = {}
-        for d in ('x', 'y', 'z'):
+        for d in ("x", "y", "z"):
             diff_dict[d] = abs(getattr(self, d) - getattr(other, d))
         return diff_dict
 
@@ -51,7 +63,12 @@
         """
         Get the PolarForce
         """
-        return "PolarForce{ label:%s, x:%g, y:%g, z:%g}\n" % (self.label, self.x, self.y, self.z)
+        return "PolarForce{ label:%s, x:%g, y:%g, z:%g}\n" % (
+            self.label,
+            self.x,
+            self.y,
+            self.z,
+        )
 
     def short(self):
         """
@@ -66,7 +83,15 @@
     """
 
     # A crazy regex pattern used to match label/value sets
-    pattern = r'\s+(?P<label>[a-zA-Z]+)\s+(?P<atom>\w+)\s+(?P<x>[+-]?\d\.\d+E[+-]\d+)\s+(?P<y>[+-]?\d\.\d+E[+-]\d+)\s+(?P<z>[+-]?\d\.\d+E[+-]\d+)'
+    patterns = [
+        r"\s+",
+        r"(?P<label>[a-zA-Z]+)\s+",
+        r"(?P<atom>\w+)\s+",
+        r"(?P<x>[+-]?\d\.\d+E[+-]\d+)\s+",
+        r"(?P<y>[+-]?\d\.\d+E[+-]\d+)\s+",
+        r"(?P<z>[+-]?\d\.\d+E[+-]\d+)",
+    ]
+    pattern = "".join(patterns)
 
     def __init__(self, label, atom, x, y, z):
         """
@@ -75,22 +100,32 @@
         super(ApolarForce, self).__init__(self, x, y, z)
         self.label = label
 
-    def __init__(self, line):
+    def __init__(self, line):  # noqa F811
         """
         Extracts aploar force results from a file at a given line
         """
-        m = re.search(self.pattern, line)
-        self.label = m.group('label')
-        self.atom = m.group('atom')
-        self.x = float(m.group('x'))
-        self.y = float(m.group('y'))
-        self.z = float(m.group('z'))
+        try:
+            m = re.search(self.pattern, line)
+            self.label = m.group("label")
+            self.atom = m.group("atom")
+            self.x = float(m.group("x"))
+            self.y = float(m.group("y"))
+            self.z = float(m.group("z"))
+        except Exception as msg:
+            sys.stderr.write(f"\nLINE:{line}\nException:{msg}\n")
+            raise msg
 
     def __rpr__(self):
-        return "ApolarForce{ label:%s, atom:%s, x:%g, y:%g, z:%g}\n" % (self.label, self.atom, self.x, self.y, self.z)
+        return "ApolarForce{ label:%s, atom:%s, x:%g, y:%g, z:%g}\n" % (
+            self.label,
+            self.atom,
+            self.x,
+            self.y,
+            self.z,
+        )
 
     def short(self):
-        return '%s for %s' % (self.label, self.atom)
+        return f"{self.label} for self.atom"
 
 
 def extract_forces(force_class, lines, start_pattern):
@@ -114,7 +149,7 @@
             if not re.search(force_class.pattern, line_text):
                 end_line = line_number
                 break
-    return parse_forces(force_class, lines[start_line : end_line])
+    return parse_forces(force_class, lines[start_line:end_line])
 
 
 def parse_forces(force_class, lines):
@@ -128,7 +163,7 @@
     return force_dict
 
 
-def compare_force_dicts(test_force_dict, true_force_dict):
+def compare_force_dicts(test_force_dict, true_force_dict, logger):
     """
     Compares force dictionaries
     """
@@ -143,64 +178,92 @@
             true_value = getattr(true_force, diff_key)
 
             if diff_value == 0.0:
-                logger.message('*** Comparison %s in %s PASSED ***' % (test_force.short(), diff_key))
-                logger.log('Comparison %s in %s PASSED (%g)' % (test_force.short(), diff_key, test_value))
+                logger.message(
+                    f"*** Comparison {test_force.short()} in {diff_key} "
+                    + "PASSED ***"
+                )
+                logger.log(
+                    f"Comparison {test_force.short()} in {diff_key} PASSED "
+                    + f"({test_value})"
+                )
             elif diff_value < ERROR_TOLERANCE:
-                logger.message('*** Comparison %s in %s PASSED (with rounding error - see log)***' % (test_force.short(), diff_key))
-                logger.log('Comparison %s in %s PASSED within error (%g; expected %g)' %(test_force.short(), diff_key, test_value, true_value))
+                logger.message(
+                    f"*** Comparison {test_force.short()} in {diff_key} "
+                    + "PASSED (with rounding error - see log)***"
+                )
+                logger.log(
+                    f"Comparison {test_force.short()} in {diff_key} "
+                    + f"PASSED within error ({test_value}; "
+                    + f"expected {true_value})"
+                )
             else:
-                logger.message('*** Comparison %s in %s FAILED ***' % (test_force.short(), diff_key))
-                logger.message('   APBS returned %g' % test_value)
-                logger.message('   Expected result is %g (difference of: %g)' % (true_value, diff_value))
-                logger.log('Comparison %s in %s FAILED (%g; expected %g)' %(test_force.short(), diff_key, test_value, true_value))
+                logger.message(
+                    f"*** Comparison {test_force.short()} in {diff_key} "
+                    + "FAILED ***"
+                )
+                logger.message(f"   APBS returned {test_value}")
+                logger.message(
+                    f"   Expected result is {true_value} (difference of: "
+                    + f"{diff_value})"
+                )
+                logger.log(
+                    f"Comparison {test_force.short()} in {diff_key} "
+                    + f"FAILED ({test_value}; expected {true_value})"
+                )
 
 
 def check_forces(input_file, polar_file, apolar_file, logger):
     """
     Check the forces
     """
-    logger.both("Checking forces for input file %s" % input_file)
+    logger.both(f"Checking forces for input file {input_file}")
 
     f = None
     try:
-        f = open(input_file, 'r')
+        f = open(input_file, "r")
     except IOError:
-        print >> sys.stderr, "Couldn't read from forces file %s" % input_file
+        sys.stderr.write(f"Couldn't read from forces file {input_file}")
     input_lines = f.readlines()
 
-    test_polar_force_dict = extract_forces(PolarForce, input_lines, 'print force')
-    test_apolar_force_dict = extract_forces(ApolarForce, input_lines, 'print APOL force')
+    test_polar_force_dict = extract_forces(
+        PolarForce, input_lines, "print force"
+    )
+    test_apolar_force_dict = extract_forces(
+        ApolarForce, input_lines, "print APOL force"
+    )
 
     try:
-        f = open(polar_file, 'r')
+        f = open(polar_file, "r")
     except IOError:
-        print >> sys.stderr, "Couldn't read from forces file %s" % input_file
+        sys.stderr.write(f"Couldn't read from forces file {input_file}")
     input_lines = f.readlines()
     true_polar_force_dict = parse_forces(PolarForce, input_lines)
 
     try:
-        f = open(apolar_file, 'r')
+        f = open(apolar_file, "r")
     except IOError:
-        print >> sys.stderr, "Couldn't read from forces file %s" % input_file
+        sys.stderr.write(f"Couldn't read from forces file {input_file}")
     input_lines = f.readlines()
     true_apolar_force_dict = parse_forces(ApolarForce, input_lines)
 
     logger.both("Checking Polar Forces")
-    compare_force_dicts(test_polar_force_dict, true_polar_force_dict)
+    compare_force_dicts(test_polar_force_dict, true_polar_force_dict, logger)
 
     logger.both("Checking Apolar Forces")
-    compare_force_dicts(test_apolar_force_dict, true_apolar_force_dict)
+    compare_force_dicts(test_apolar_force_dict, true_apolar_force_dict, logger)
 
 
 def test():
     """
     test
     """
-    l = open('forces.log', 'w')
-    logger = Logger(sys.stderr, l)
-    check_forces('apbs-forces.out', 'polarforces', 'apolarforces', logger)
+    lval = open("forces.log", "w")
+    logger = Logger(sys.stderr, lval)
+    check_forces("apbs-forces.out", "polarforces", "apolarforces", logger)
 
 
-if __name__ == '__main__':
-    sys.stderr.write("The python source file %s is a module and not runnable" % sys.argv[0])
+if __name__ == "__main__":
+    sys.stderr.write(
+        f"The python source file {sys.argv[0]} is a module and not runnable"
+    )
     sys.exit(1)
diff --new-file -ru apbs-3.0.0/tests/apbs_check_intermediate_energies.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_intermediate_energies.py
--- apbs-3.0.0/tests/apbs_check_intermediate_energies.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_intermediate_energies.py	2020-09-29 19:12:06.000000000 +0200
@@ -10,12 +10,13 @@
 
 ERROR_TOLERANCE = 1e-6
 
+
 class ElecEnergy:
     """
     extracts and compares computed intermediate energies
     """
 
-    pattern = r'\s(?P<label>[a-zA-Z]+ [a-zA-Z]+ = )[\-]?(?P<x>[0-9]+(\.[0-9]+)?(E[\+,\-][0-9]+)?)'
+    pattern = r"\s(?P<label>[a-zA-Z]+ [a-zA-Z]+ = )[\-]?(?P<x>[0-9]+(\.[0-9]+)?(E[\+,\-][0-9]+)?)"  # noqa E501
 
     def __init__(self, label, x):
         """
@@ -24,23 +25,22 @@
         self.label = label
         self.x = x
 
-    def __init__(self, line):
+    def __init__(self, line):  # noqa F811
         """
         extract energy results from a file at a given line
         """
         m = re.search(self.pattern, line)
-        self.label = m.group('label')
-        self.x = float(m.group('x'))
+        self.label = m.group("label")
+        self.x = float(m.group("x"))
 
     def __repr__(self):
-        return "ElecEnergy{ label:%s, x:%g" % (self.label, self.x)
+        return f"ElecEnergy label:{self.label}, x:{self.x}"
 
     def diff(self, other):
         """
-    	compares the value of two energy calculations
-    	"""
-
-        return abs(getattr(self, d) - getattr(other, d))
+        compares the value of two energy calculations
+        """
+        return abs(getattr(self, self.x) - getattr(other, other.x))
 
     def short(self):
         """
@@ -76,34 +76,40 @@
     """
     check energies
     """
-    print("Checking for intermidiate energies in input file %s" % input_file)
+    print(f"Checking for intermidiate energies in input file {input_file}")
 
     f = None
     try:
-        f = open(input_file, 'r')
+        f = open(input_file, "r")
     except IOError:
-        print("Couldn't read from energy file %s" % input_file, file=sys.stderr)
+        print(f"Couldn't read from energy file {input_file}", file=sys.stderr)
 
     input_lines = f.readlines()
 
-    energy_list = extract_energy(ElecEnergy, input_lines, 'Total electrostatic energy')
-    energy_list += extract_energy(ElecEnergy, input_lines, 'Mobile charge energy')
-    energy_list += extract_energy(ElecEnergy, input_lines, 'Fixed charge energy')
-    energy_list += extract_energy(ElecEnergy, input_lines, 'Dielectric energy')
+    energy_list = extract_energy(
+        ElecEnergy, input_lines, "Total electrostatic energy"
+    )
+    energy_list += extract_energy(
+        ElecEnergy, input_lines, "Mobile charge energy"
+    )
+    energy_list += extract_energy(
+        ElecEnergy, input_lines, "Fixed charge energy"
+    )
+    energy_list += extract_energy(ElecEnergy, input_lines, "Dielectric energy")
 
     return energy_list
 
+
 def test():
     """
     Run the test
     """
-    l = open('energy.log', 'w')
-    logger = Logger(sys.stderr, l)
-    energy_list = check_energies('actio_stdout.txt')
+    lval = open("energy.log", "w")
+    logger = Logger(sys.stderr, lval)  # noqa F841
+    energy_list = check_energies("actio_stdout.txt")
     print(energy_list)
 
 
-if __name__ == '__main__':
-    #print >> sys.stderr, "The python source files %s is a module and not runnable" % sys.argv[0]
-    print("The python source files %s is a module and not runnable" % sys.argv[0])
+if __name__ == "__main__":
+    print(f"The python source file {sys.argv[0]} is a module and not runnable")
     sys.exit(1)
diff --new-file -ru apbs-3.0.0/tests/apbs_check_results.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_results.py
--- apbs-3.0.0/tests/apbs_check_results.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_check_results.py	2020-09-29 19:12:06.000000000 +0200
@@ -6,7 +6,7 @@
 
 import sys
 from math import log10, floor
-from apbs_logger import Logger
+from apbs_logger import Logger  # noqa F401
 
 ERROR_TOLERANCE = 1e-4
 
@@ -15,12 +15,18 @@
     """
     Rounds a number to a specified number of significant figures
     """
-    return round(x, sigfigs - int(floor(log10(abs(x)))) - 1)
+    value = 0.0
+    try:
+        value = round(x, sigfigs - int(floor(log10(abs(x)))) - 1)
+    except ValueError as msg:
+        sys.stderr.write(f"The value ({x}) caused an error: {msg}")
+    return value
 
 
 def check_results(computed_result, expected_result, input_file, logger, ocd):
     """
-    Compares computed results to an expected results within some margin of error
+    Compares computed results to an expected results within some margin of
+    error
     """
 
     # OCD mode requires a match up to 12 significant figures
@@ -34,26 +40,37 @@
         expected_result = round_sigfigs(expected_result, 6)
 
     # Compute the error in the calculation
-    error = abs((computed_result - expected_result)/expected_result*100.0)
+    error = abs((computed_result - expected_result) / expected_result * 100.0)
 
-    # An exact match after rounding to specifiec precision means the test passed
+    # An exact match after rounding to specifiec precision means the test
+    # passed
     if computed_result == expected_result:
         logger.message("*** PASSED ***\n")
-        logger.log("PASSED %.12e\n" % computed_result)
+        logger.log(f"PASSED {computed_result:.12e}\n")
 
     # Otherwise, test that the error is below error tolerance
-    elif error < ERROR_TOLERANCE*100:
+    elif error < ERROR_TOLERANCE * 100:
         logger.message("*** PASSED (with rounding error - see log) ***\n")
-        logger.log("PASSED within error (%.12e; expected %.12e; %g%% error)\n" % (computed_result, expected_result, error))
+        logger.log(
+            f"PASSED within error ({computed_result:.12e}; "
+            + f"expected {expected_result:.12e}; {error}% error)\n"
+        )
 
     # If neither is true, the test failed
     else:
         logger.message("*** FAILED ***\n")
-        logger.message("   APBS returned      %.12e\n" % computed_result)
-        logger.message("   Expected result is %.12e (%g%% error)\n" % (expected_result, error))
-        logger.log("FAILED (%.12e; expected %.12e; %g%% error)\n" % (computed_result, expected_result, error))
+        logger.message(f"   APBS returned      {computed_result:.12e}\n")
+        logger.message(
+            f"   Expected result is {expected_result:.12e} ({error}% error)\n"
+        )
+        logger.log(
+            f"FAILED ({computed_result:.12e}; "
+            + f"expected {expected_result:.12e}; {error}% error)\n"
+        )
 
 
-if __name__ == '__main__':
-    sys.stderr.write("The python source file %s is a module and not runnable" % sys.argv[0])
+if __name__ == "__main__":
+    sys.stderr.write(
+        f"The python source file {sys.argv[0]} is a module and not runnable"
+    )
     sys.exit(1)
diff --new-file -ru apbs-3.0.0/tests/apbs_logger.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_logger.py
--- apbs-3.0.0/tests/apbs_logger.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_logger.py	2020-09-29 19:12:06.000000000 +0200
@@ -7,24 +7,26 @@
 """
 
 import sys
-     
+
+
 class Logger:
-    
     def __init__(self, message_fd, logfile_fd):
         self.message_fd = message_fd
         self.logfile_fd = logfile_fd
-        
+
     def message(self, message):
         self.message_fd.write(message)
-        
+
     def log(self, message):
         self.logfile_fd.write(message)
-        
+
     def both(self, message):
         self.message(message)
         self.log(message)
-        
-        
-if __name__ == '__main__':
-    sys.stderr.write("The python source file %s is a module and not runnable" % sys.argv[0])
+
+
+if __name__ == "__main__":
+    sys.stderr.write(
+        f"The python source file {sys.argv[0]} is a module and not runnable"
+    )
     sys.exit(1)
diff --new-file -ru apbs-3.0.0/tests/apbs_tester.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_tester.py
--- apbs-3.0.0/tests/apbs_tester.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/apbs_tester.py	2020-09-29 19:12:06.000000000 +0200
@@ -7,9 +7,10 @@
 import sys
 import os
 import re
+import pathlib
 import datetime
-import subprocess
 import operator
+import subprocess
 from optparse import OptionParser
 from configparser import ConfigParser, NoOptionError
 from functools import reduce
@@ -20,81 +21,109 @@
 
 # The inputgen utility needs to be accessible, so we add its path
 sys.path.insert(0, "../tools/manip")
-from inputgen import split_input
+from inputgen import split_input  # noqa E402
 
 # Matches a floating point number such as -1.23456789E-20
-FLOAT_PATTERN = r'([+-]?\d+\.\d+E[+-]\d+)'
+FLOAT_PATTERN = r"([+-]?\d+\.\d+E[+-]\d+)"
+
+
+def find_binary(binary_name, logger):
+    # This is an attempt to find the apbs binary on a Windows system
+    # built with Visual Studio that creates binaries based on the
+    # current configuration.
+    # On Linux/Mac systems the apbs binary will bin ../build/bin/apbs
+    # On Windows the apbs.exe binary could be in ../build/bin/*/apbs.exe
+    start_dir = pathlib.Path(__file__).parent.parent.absolute() / "build"
+    logger.message(f"START_DIR:{start_dir}\n")
+    paths = pathlib.Path(start_dir).rglob(f"**/{binary_name}")
+    for idx in paths:
+        if idx.is_file():
+            if os.access(str(idx), os.X_OK):
+                return str(idx)
 
+    raise FileNotFoundError(f"Can't find file, {binary_name}")
 
-def test_binary(binary_name):
+
+def test_binary(binary_name, logger):
     """
     Ensures that the apbs binary is available
     """
 
+    logger.message(f"BINARY_NAME:{binary_name}\n")
     # Attempts to find apbs in the system path first
-    try:
+    binary = ""
+
+    # Try a number of ways to find the apbs binary
+    if pathlib.Path(binary_name).exists():
+        # Attempt number 1 - The full path was passed in
         binary = binary_name
-        command = [binary, "--version"]
-        with subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) as proc:
-            line = str(proc.stdout.read())
-        return binary
-    except OSError:
-        pass
+    else:
+        # Attempt number 2 - Just the binary name was passed in
+        binary = find_binary(binary_name, logger)
+
+    if binary is None:
+        raise FileNotFoundError(
+            f"Couldn't detect an apbs binary {binary_name}"
+            + "in the path or local bin directory"
+        )
+
+    if not os.access(binary, os.X_OK):
+        raise PermissionError(
+            f"The apbs binary, {binary}, "
+            + "is not executable!"
+        )
 
-    # Next, looks for the apbs binary in the apbs bin directory
     try:
-        binary = os.path.abspath("../build/bin/%s" % binary_name)
         command = [binary, "--version"]
-        with subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) as proc:
-            line = str(proc.stdout.read())
+        with subprocess.Popen(
+            command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT
+        ) as proc:
+            line = str(proc.stdout.read())  # noqa F841
         return binary
-    except OSError:
+    except OSError as ose:
+        logger.message(f"\nException:{ose}\n")
         return ""
 
 
-
 def process_serial(binary, input_file):
     """
     Runs the apbs binary on a given input file
     """
 
     # First extract the name of the input file's base name
-    base_name = input_file.split('.')[0]
+    base_name = input_file.split(".")[0]
 
     # The output file should have the same basename
-    output_name = '%s.out' % base_name
+    output_name = f"{base_name}.out"
 
     # Ensure that there are sufficient permissions to write to the output file
-    output_file = open(output_name, 'w')
+    output_file = open(output_name, "w")
 
     # Construct the system command and make the call
     command = [binary, input_file]
-    print("BINARY: %s" % binary)
-    print("INPUT:  %s" % input_file)
-    #proc = subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
-    #for line in proc.stdout:
-    #    sys.stdout.write(line)
-    #    output_file.write(line)
-    #proc.wait()
-    with subprocess.Popen(command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT) as proc:
-        line = str(proc.stdout.read(), 'utf-8')
-        # print(line)
+    print(f"BINARY: {binary}")
+    print(f"INPUT:  {input_file}")
+    with subprocess.Popen(
+        command, stdout=subprocess.PIPE, stderr=subprocess.STDOUT
+    ) as proc:
+        line = str(proc.stdout.read(), "utf-8")
         sys.stdout.write(line)
         output_file.write(line)
 
     # Look for the results in the output file
-    output_file = open(output_name, 'r')
+    output_file = open(output_name, "r")
     output_text = output_file.read()
 
     # Look for intermidiate energy results
     output_results = check_energies(output_name)
 
-    output_pattern = r'Global net (?:ELEC|APOL) energy \= ' + FLOAT_PATTERN
-    output_results2 = [float(r) for r in re.findall(output_pattern, output_text)]
+    output_pattern = r"Global net (?:ELEC|APOL) energy \= " + FLOAT_PATTERN
+    output_results2 = [
+        float(r) for r in re.findall(output_pattern, output_text)
+    ]
 
     output_results += output_results2
 
-
     # Return all the matched results as a list of floating point numbers
     return output_results
 
@@ -104,23 +133,26 @@
     Performs parallel apbs runs of the input file
     """
 
-    logger.message("Splitting the input file into %d separate files using the inputgen utility\n\n" % procs)
+    logger.message(
+        f"Splitting the input file into {procs} separate "
+        + "files using the inputgen utility\n\n"
+    )
 
     # Get the base name, and split the input file using inputgen's split_input
-    base_name = input_file.split('.')[0]
+    base_name = input_file.split(".")[0]
     split_input(input_file)
 
     results = None
     for proc in range(procs):
 
         # Process each paralle input file and capture the results from each
-        proc_input_file = '%s-PE%d.in' % (base_name, proc)
+        proc_input_file = f"{base_name}-PE{proc}.in"
         proc_results = process_serial(binary, proc_input_file)
 
         # Log the results from each parallel run
-        logger.message("Processor %d results:\n" % proc)
+        logger.message(f"Processor {proc} results:\n")
         for proc_result in proc_results:
-            logger.message("  %.12E\n" % proc_result)
+            logger.message(f"  {proc_result:.12e}\n")
         logger.message("\n")
 
         # Aggregate the results from each processor
@@ -133,15 +165,17 @@
     return results
 
 
-def run_test(binary, test_files, test_name, test_directory, setup, logger, ocd):
+def run_test(
+    binary, test_files, test_name, test_directory, setup, logger, ocd
+):
     """
     Runs a given test from the test cases file
     """
 
-    logger.log('-' * 80 + "\n")
-    logger.log("Test Timestamp: %s\n" % str(datetime.datetime.now()))
-    logger.log("Test Name:      %s\n" % test_name)
-    logger.log("Test Directory: %s\n" % test_directory)
+    logger.log("-" * 80 + "\n")
+    logger.log(f"Test Timestamp: {datetime.datetime.now()}\n")
+    logger.log(f"Test Name:      {test_name}\n")
+    logger.log(f"Test Directory: {test_directory}\n")
 
     # The net time is initially zero
     net_time = datetime.timedelta(0)
@@ -156,19 +190,19 @@
     for (base_name, expected_results) in test_files:
 
         # Get the name of the input file from the base name
-        input_file = '%s.in' % base_name
+        input_file = f"{base_name}.in"
 
         # If the expected results is 'forces', do a forces test on the input
-        if expected_results == 'forces':
-            logger.message('-' * 80 + "\n")
-            logger.message("Testing forces from %s\n\n" % input_file)
-            logger.log("Testing forces from %s\n" % input_file)
+        if expected_results == "forces":
+            logger.message("-" * 80 + "\n")
+            logger.message(f"Testing forces from {input_file}\n\n")
+            logger.log(f"Testing forces from {input_file}\n")
             start_time = datetime.datetime.now()
-            check_forces(input_file, 'polarforces', 'apolarforces', logger)
+            check_forces(input_file, "polarforces", "apolarforces", logger)
         else:
-            logger.message('-' * 80 + "\n")
-            logger.message("Testing input file %s\n\n" % input_file)
-            logger.log("Testing %s\n" % input_file)
+            logger.message("-" * 80 + "\n")
+            logger.message(f"Testing input file {input_file}\n\n")
+            logger.log(f"Testing {input_file}\n")
 
             # Record the start time before the test runs
             start_time = datetime.datetime.now()
@@ -176,34 +210,53 @@
             computed_results = None
 
             # Determine if this is a parallel run
-            match = re.search(r'\s*pdime((\s+\d+)+)', open(input_file, 'r').read())
+            match = re.search(
+                r"\s*pdime((\s+\d+)+)", open(input_file, "r").read()
+            )
 
             # If it is parallel, get the number of procs and do a parallel run
             if match:
-                procs = reduce(operator.mul, [int(p) for p in match.group(1).split()])
-                computed_results = process_parallel(binary, input_file, procs, logger)
+                procs = reduce(
+                    operator.mul, [int(p) for p in match.group(1).split()]
+                )
+                computed_results = process_parallel(
+                    binary, input_file, procs, logger
+                )
             # Otherwise, just do a serial run
             else:
                 computed_results = process_serial(binary, input_file)
 
             # Split the expected results into a list of text values
-            # print("EXPECTED COMPUTED: %i" % (len(computed_results)))
-            # print("EXPECTED EXPECTED: %i" % (len(expected_results)))
-            # print("COMPUTED: %s" %computed_results)
-            # print("EXPECTED: %s" %expected_results)
+            print(f"EXPECTED COMPUTED: {len(computed_results)}")
+            print(f"EXPECTED EXPECTED: {len(expected_results)}")
+            print(f"COMPUTED: {computed_results}")
+            print(f"EXPECTED: {expected_results}")
             expected_results = expected_results.split()
             for result in computed_results:
-                print("RESULT %s" % result)
+                print(f"COMPUTED RESULT {result}")
             for i in range(len(expected_results)):
                 # If the expected result is a star, it means ignore that result
-                if expected_results[i] == '*':
+                if expected_results[i] == "*":
                     continue
 
                 # Compare the expected to computed results
-                computed_result = computed_results[i]
+                computed_result = 0
+                try:
+                    computed_result = computed_results[i]
+                except IndexError as error:
+                    logger.message(
+                        f"Computed result for index, {i}, does not "
+                        + f"exist: {error}"
+                    )
                 expected_result = float(expected_results[i])
-                logger.message("Testing computed result %.12E against expected result %12E\n" % (computed_result, expected_result))
-                check_results(computed_result, expected_result, input_file, logger, ocd)
+                logger.message(
+                    "Testing computed result against "
+                    + f"expected result ({computed_result:.12e}, "
+                    + f"{expected_result:.12e})\n"
+                )
+                check_results(
+                    computed_result, expected_result, input_file, logger, ocd
+                )
 
         # Record the end time after the test
         end_time = datetime.datetime.now()
@@ -212,19 +265,18 @@
         stopwatch = elapsed_time.seconds + elapsed_time.microseconds / 1e6
 
         # Log the elapsed time for this test
-        logger.message("Elapsed time: %f seconds\n" % stopwatch)
-        logger.message('-' * 80 + "\n")
+        logger.message(f"Elapsed time: {stopwatch} seconds\n")
+        logger.message("-" * 80 + "\n")
 
     stopwatch = net_time.seconds + net_time.microseconds / 1e6
 
     # Log the elapsed time for all tests that were run
-    logger.message("Total elapsed time: %f seconds\n" % stopwatch)
+    logger.message(f"Total elapsed time: {stopwatch} seconds\n")
     logger.message("Test results have been logged\n")
-    logger.message('-' * 80 + "\n")
-    logger.log("Time:           %d seconds\n" % stopwatch)
-
-    os.chdir('../../tests')
+    logger.message("-" * 80 + "\n")
+    logger.log(f"Time:           {stopwatch} seconds\n")
 
+    os.chdir("../../tests")
 
 
 def main():
@@ -234,53 +286,79 @@
 
     parser = OptionParser()
 
-    #Describes the available options.
+    # Describes the available options.
     parser.add_option(
-        '-e', '--executable', dest='executable',
-        type='string', default='apbs',
-        help="Set the apbs executable to FILE", metavar="FILE"
-        )
+        "-e",
+        "--executable",
+        dest="executable",
+        type="string",
+        default="apbs",
+        help="Set the apbs executable to FILE",
+        metavar="FILE",
+    )
 
     parser.add_option(
-        '-c', '--test_config', dest='test_config',
-        type='string', default='test_cases.cfg',
-        help="Set the test configuration file to FILE", metavar="FILE"
-        )
+        "-c",
+        "--test_config",
+        dest="test_config",
+        type="string",
+        default="test_cases.cfg",
+        help="Set the test configuration file to FILE",
+        metavar="FILE",
+    )
 
     parser.add_option(
-        '-t', '--target_test', dest='target_test',
-        type='string', action='append', default=[],
-        help="Set the test to run to TEST", metavar="TEST"
-        )
+        "-t",
+        "--target_test",
+        dest="target_test",
+        type="string",
+        action="append",
+        default=[],
+        help="Set the test to run to TEST",
+        metavar="TEST",
+    )
 
     parser.add_option(
-        '-o', '--ocd', action='store_true', dest='ocd',
-        help="Run APBS in OCD mode"
-        )
+        "-o",
+        "--ocd",
+        action="store_true",
+        dest="ocd",
+        help="Run APBS in OCD mode",
+    )
 
     parser.add_option(
-        '-l', '--log_file', dest='log_file', type='string', default='test.log',
-        help="Save the test log to FILE.", metavar="FILE"
-        )
-
-    parser.add_option('-b', '--benchmark',
-                      action='store_const', const=1, dest='benchmark',
-                      help="Perform benchmarking."
-                     )
+        "-l",
+        "--log_file",
+        dest="log_file",
+        type="string",
+        default="test.log",
+        help="Save the test log to FILE.",
+        metavar="FILE",
+    )
 
+    parser.add_option(
+        "-b",
+        "--benchmark",
+        action="store_const",
+        const=1,
+        dest="benchmark",
+        help="Perform benchmarking.",
+    )
 
     # Parse the command line and extract option values
     (options, args) = parser.parse_args()
 
     # Messages will go to stdout, log messages will go to the supplied log file
-    message_fd = sys.stdout
-    logfile_fd = None
+    message_fd = sys.stderr
+    logfile_fd = sys.stderr
 
     # Verify that the log file is writable
     try:
-        logfile_fd = open(options.log_file, 'w')
+        logfile_fd = open(options.log_file, "w")
     except IOError as err:
-        parser.error("Could't open log_file %s: %s" % (options.log_file, err.strerror))
+        parser.error(
+            f"Couldn't open log_file {options.log_file}: {err.strerror}"
+        )
 
     # Set up the logger with the message and log file descriptor
     logger = Logger(message_fd, logfile_fd)
@@ -291,20 +369,18 @@
     config.read(options.test_config)
 
     # Make sure that the apbs binary can be found
-    binary = test_binary(options.executable)
-    if binary == '':
-        parser.error("Coulnd't detect an apbs binary in the path or local bin directory")
+    binary = test_binary(options.executable, logger)
 
     # Get the names of all the test sections to run.
     test_sections = []
-    if 'all' in options.target_test or options.target_test == []:
+    if "all" in options.target_test or options.target_test == []:
         test_sections = config.sections()
         print("Testing all sections")
     else:
         test_sections = options.target_test
 
-    print("The following sections will be tested: " + ', '.join(test_sections))
-    print('=' * 80)
+    print("The following sections will be tested: " + ", ".join(test_sections))
+    print("=" * 80)
 
     # Run each test that has been requested
     for test_name in test_sections:
@@ -313,27 +389,40 @@
 
         # Verify that the test is described in the test cases file
         if test_name not in config.sections():
-            print("  " + test_name + " section not found in " + options.test_config)
+            print(
+                "  "
+                + test_name
+                + " section not found in "
+                + options.test_config
+            )
             return 1
 
         # Grab the test directory
-        test_directory = config.get(test_name, 'input_dir')
-        config.remove_option(test_name, 'input_dir')
+        test_directory = config.get(test_name, "input_dir")
+        config.remove_option(test_name, "input_dir")
 
         # Check if there is a setup step.
         test_setup = None
         try:
-            test_setup = config.get(test_name, 'setup')
-            config.remove_option(test_name, 'setup')
+            test_setup = config.get(test_name, "setup")
+            config.remove_option(test_name, "setup")
         except NoOptionError:
             pass
 
         # Run the test!
-        run_test(binary, config.items(test_name), test_name, test_directory, test_setup, logger, options.ocd)
+        run_test(
+            binary,
+            config.items(test_name),
+            test_name,
+            test_directory,
+            test_setup,
+            logger,
+            options.ocd,
+        )
 
     return 0
 
 
 # If this file is executed as a script, call the main function
-if __name__ == '__main__':
+if __name__ == "__main__":
     sys.exit(main())
diff --new-file -ru apbs-3.0.0/tests/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/CMakeLists.txt
--- apbs-3.0.0/tests/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/CMakeLists.txt	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,43 @@
+cmake_minimum_required (VERSION 3.12)
+
+project("APBSTESTS")
+
+include (CTest)
+enable_testing()
+
+message(STATUS "******* TESTING ADDED *****************")
+find_package(Python3 COMPONENTS Interpreter)
+if(${Python3_FOUND})
+    message(STATUS "******* Python3 FOUND ${Python3_EXECUTABLE}")
+else()
+    message(FATAL  "******* Python3 NOT FOUND *****************")
+endif()
+
+set(APBS_BINARY "apbs")
+if(CMAKE_HOST_WIN32)
+  set(APBS_BINARY "apbs.exe")
+endif()
+
+set(TESTS_CFG_FILE ${CMAKE_SOURCE_DIR}/tests/test_cases.cfg)
+
+if(EXISTS ${TESTS_CFG_FILE})
+    file(READ ${TESTS_CFG_FILE} TEST_CASES_FILE)
+    string(REPLACE "\n" ";" TEST_CASES_LINES ${TEST_CASES_FILE}) 
+    foreach(_line ${TEST_CASES_LINES})
+        if(${_line} MATCHES "^\\[")
+            string(REPLACE "[" "" _line ${_line})
+            string(REPLACE "]" "" _line ${_line})
+            string(REGEX REPLACE "[-].*$" "" _shortname ${_line})
+            string(TOUPPER "ENABLE_${_shortname}" OPTION_NAME)
+            message(STATUS "******* FOUND TEST CASE ${_shortname}, ${_line}")
+            if (DEFINED "${OPTION_NAME}" AND NOT ${OPTION_NAME})
+                message(STATUS "******* SKIPPING TEST CASE ${_shortname}, ${_line}")
+            else()
+                message(STATUS "TEST  ${_line}_test  WORKING_DIRECTORY  ${CMAKE_SOURCE_DIR}/tests  COMMAND ${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/tests/apbs_tester.py -e ${APBS_BINARY} -t ${_line}")
+                add_test(NAME        "${_line}_test" WORKING_DIRECTORY "${CMAKE_SOURCE_DIR}/tests" COMMAND ${Python3_EXECUTABLE} ${CMAKE_SOURCE_DIR}/tests/apbs_tester.py -e ${APBS_BINARY} -t ${_line})
+            endif()
+        endif()
+    endforeach()
+else()
+    message(FATAL  "******* MISSING Test Config (${TESTS_CFG_FILE})")
+endif()
diff --new-file -ru apbs-3.0.0/tests/test_cases.cfg apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/test_cases.cfg
--- apbs-3.0.0/tests/test_cases.cfg	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tests/test_cases.cfg	2020-09-29 19:12:06.000000000 +0200
@@ -82,20 +82,20 @@
 
 [bem]
 input_dir   : ../examples/bem
-451c_order1 : -1.172906546441e+03
-451c_order5 : -1.175936034727E+03
+451c_order1 : -4.907440990309e+03
+451c_order5 : -4.920116369298e+03
 
 [bem-pKa]
 input_dir     : ../examples/bem-pKa
-ASH66         : -9.954199102140E-01
-2LZT-ASH66    : -8.620097356247E+01
-2LZT-noASH66  : -8.601110775968E+01
+ASH66         : -4.025681443841E+00
+2LZT-ASH66    : -3.690203872934E+02
+2LZT-noASH66  : -3.677953304674E+02
 
 [bem-binding-energy]
 input_dir     : ../examples/bem-binding-energy
-1d30          : -5.249027161163E+03
-1d30_monomer1 : -6.232145066905E+03
-1d30_monomer2 : -1.821470879387E+02
+1d30          : -2.211309768995E+04
+1d30_monomer1 : -2.622527466533E+04
+1d30_monomer2 : -7.799475420336E+02
 
 
 [pbam]
diff --new-file -ru apbs-3.0.0/tools/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/CMakeLists.txt
--- apbs-3.0.0/tools/CMakeLists.txt	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/CMakeLists.txt	2020-09-29 19:12:06.000000000 +0200
@@ -5,5 +5,6 @@
 
 if(ENABLE_PYTHON)
     add_subdirectory(python)
+    add_subdirectory(python-pybind)
 endif(ENABLE_PYTHON)
 
diff --new-file -ru apbs-3.0.0/tools/github/release-data.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/github/release-data.py
--- apbs-3.0.0/tools/github/release-data.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/github/release-data.py	2020-09-29 19:12:06.000000000 +0200
@@ -1,81 +1,120 @@
-import urllib2
+from urllib import urlopen
 import json
-import requests
-import sys
 from optparse import OptionParser
-#from pprint import pprint
+
+# from pprint import pprint
 import codecs
-codecs.register(lambda name: codecs.lookup('utf-8') if name == 'cp65001' else None)
+
+codecs.register(
+    lambda name: codecs.lookup("utf-8") if name == "cp65001" else None
+)
 """was using this to see what I had currently, could be useful later"""
 
 parser = OptionParser()
 
 
-parser.add_option("-l", "--list",
-                  dest="list", action='store_true', default=False,
-                  help="list available releases")
-
-parser.add_option("--linux",
-                  dest="linux",action='store_true', default=False,
-                  help="find the linux release data")
-                  
-parser.add_option("--osx",
-                  dest="osx",action='store_true', default=False,
-                  help="find the osx release data")
-parser.add_option("--windows",                                   
-                  dest="windows",action='store_true', default=False,
-                  help="find the windows release data")
-                  
-parser.add_option("--src",
-                  dest="src",action='store_true', default=False,
-                  help="find the src release data")
-                                    
-parser.add_option('-a',"--all",
-                  dest="all",action='store_true', default=True,
-                  help="find all release data (default)")
-
-
-parser.add_option("--pdb2pqr-2.0.0",
-                  dest="pdb2pqr-2.0.0",action='store_true', default=False,
-                  help="find the pdb2pqr 2.0.0 release data") 
-
-parser.add_option("--pdb2pqr-1.9.0",
-                  dest="pdb2pqr-1.9.0",action='store_true', default=False,
-                  help="find the pdb2pqr 1.9.0 release data")                   
-                  
-                  
-(options,args) = parser.parse_args()
-
-
-os_version = ['linux', 'osx', 'src', 'windows']
-version_num = ['pdb2pqr-2.0.0','pdb2pqr-1.9.0']
-
-
-data = urllib2.urlopen("https://api.github.com/repos/Electrostatics/apbs-pdb2pqr/releases")
+parser.add_option(
+    "-l",
+    "--list",
+    dest="list",
+    action="store_true",
+    default=False,
+    help="list available releases",
+)
+
+parser.add_option(
+    "--linux",
+    dest="linux",
+    action="store_true",
+    default=False,
+    help="find the linux release data",
+)
+
+parser.add_option(
+    "--osx",
+    dest="osx",
+    action="store_true",
+    default=False,
+    help="find the osx release data",
+)
+parser.add_option(
+    "--windows",
+    dest="windows",
+    action="store_true",
+    default=False,
+    help="find the windows release data",
+)
+
+parser.add_option(
+    "--src",
+    dest="src",
+    action="store_true",
+    default=False,
+    help="find the src release data",
+)
+
+parser.add_option(
+    "-a",
+    "--all",
+    dest="all",
+    action="store_true",
+    default=True,
+    help="find all release data (default)",
+)
+
+
+parser.add_option(
+    "--pdb2pqr-2.0.0",
+    dest="pdb2pqr-2.0.0",
+    action="store_true",
+    default=False,
+    help="find the pdb2pqr 2.0.0 release data",
+)
+
+parser.add_option(
+    "--pdb2pqr-1.9.0",
+    dest="pdb2pqr-1.9.0",
+    action="store_true",
+    default=False,
+    help="find the pdb2pqr 1.9.0 release data",
+)
+
+
+(options, args) = parser.parse_args()
+
+
+os_version = ["linux", "osx", "src", "windows"]
+version_num = ["pdb2pqr-2.0.0", "pdb2pqr-1.9.0"]
+
+
+data = urlopen(
+    "https://api.github.com/repos/Electrostatics/apbs-pdb2pqr/releases"
+)
 html = data.read()
 listofreleases = json.loads(html)
 
-    
-#determines if options other than all are selected
+
+# determines if options other than all are selected
 counter = 0
 for thing in os_version:
-    if getattr(options, thing) == True or options.list == True:
+    if getattr(options, thing) is True or options.list is True:
         counter += 1
         if counter > 0:
             options.all = False
 
 
 os = []
-release_number = []    
+release_number = []
 for version in version_num:
     if getattr(options, version):
         a = version.split("-")
         os.append(a[0])
         release_number.append(a[1])
-    
+
 b = set(os)
 c = set(release_number)
 
+bool2 = False
 if len(b) == 0:
     if len(c) == 0:
         for version in version_num:
@@ -87,64 +126,58 @@
             bool2 = True
 elif len(c) != 0:
     bool2 = False
-        
-    
-    
-bool = True   
-    
-#main code body, iterates over the command line inputs
+
+
+bool1 = True
+
+# main code body, iterates over the command line inputs
 for thing in os_version:
-    #print getattr(options, thing) == True
-    if getattr(options, thing) == True:
-        print "\n \n" + thing.upper() + ' RELEASES'
+    # print getattr(options, thing) == True
+    if getattr(options, thing) is True:
+        print("\n \n" + thing.upper() + " RELEASES")
         for number in listofreleases:
-            releasename = number.get("name")                
+            releasename = number.get("name")
             listofassets = number.get("assets")
-            print "\n" + releasename
-            print number.get("created_at") + "\n"
+            print("\n" + releasename)
+            print(number.get("created_at") + "\n")
             for info in listofassets:
                 for d in b:
                     for e in c:
                         if d and e in info.get("name"):
                             if thing in info.get("name"):
-                                print info.get("name")
+                                print(info.get("name"))
                                 count = info.get("download_count")
-                                print "Download Count = " + str(count)
+                                print(f"Download Count = {count}")
                                 continue
                         else:
-                            if bool2 == True:
+                            if bool2 is True:
                                 continue
                             else:
-                                print "No releases here"
-                                bool = False
-                                break        
+                                print("No releases here")
+                                bool1 = False
+                                break
                     break
-                if bool == False:
-                    bool = True
+                if bool1 is False:
+                    bool1 = True
                     break
-                
-                    
-                        
-                           
-
-            
-#the else case, prints all releases                                 
-if options.all == True:
-    print "\n \n" + "ALL RELEASES"
+
+
+# the else case, prints all releases
+if options.all is True:
+    print("\n \n" + "ALL RELEASES")
     for number in listofreleases:
         releasename = number.get("name")
-        print "\n" + releasename
+        print("\n" + releasename)
         listofassets = number.get("assets")
-        print number.get("created_at") + "\n"
+        print(number.get("created_at") + "\n")
         for info in listofassets:
-            print info.get("name")
+            print(info.get("name"))
             count = info.get("download_count")
-            print "Download Count = " + str(count)
- 
-#lists releases available 
-if options.list == True:
-    print "\n" + "RELEASES LIST"
-    for number in listofreleases:            
-        releasename = number.get("name")  
-        print "\n" + releasename
-                            
+            print("Download Count = " + str(count))
+
+# lists releases available
+if options.list is True:
+    print("\n" + "RELEASES LIST")
+    for number in listofreleases:
+        releasename = number.get("name")
+        print("\n" + releasename)
diff --new-file -ru apbs-3.0.0/tools/manip/inputgen.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/manip/inputgen.py
--- apbs-3.0.0/tools/manip/inputgen.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/manip/inputgen.py	2020-09-29 19:12:06.000000000 +0200
@@ -14,28 +14,30 @@
 # User - Definable Variables: Default values
 
 # cfac = 1.7                  # Factor by which to expand mol dims to
-                              # get coarse grid dims
+# get coarse grid dims
 # fadd = 20                   # Amount to add to mol dims to get fine
-                              # grid dims
+# grid dims
 # space = 0.50                # Desired fine mesh resolution
 # gmemfac = 200               # Number of bytes per grid point required
-                              # for sequential MG calculation
+# for sequential MG calculation
 # gmemceil = 400              # Max MB allowed for sequential MG
-                              # calculation.  Adjust this to force the
-                              # script to perform faster calculations (which
-                              # require more parallelism).
+# calculation.  Adjust this to force the
+# script to perform faster calculations (which
+# require more parallelism).
 # ofrac = 0.1                  # Overlap factor between mesh partitions
 # redfac = 0.25               # The maximum factor by which a domain
-                              # dimension can be reduced during focusing
+# dimension can be reduced during focusing
 
 import sys
 import pickle
-import psize
+from psize import Psize
+
 
 class Elec:
     """
         An object for the ELEC section of an APBS input file
     """
+
     def __init__(self, pqrpath, size, method, asyncflag, istrng=0, potdx=0):
         """
             Initialize the variables that can be set in this object
@@ -47,8 +49,15 @@
         # the per-grid dime rather than the global dime.
 
         self.dime = size.getFineGridPoints()
-        gmem = 200.0 * self.dime[0] * self.dime[1] * self.dime[2] / 1024.0 / 1024.0
-        if method == "": # method not named - use ceiling
+        gmem = (
+            200.0
+            * self.dime[0]
+            * self.dime[1]
+            * self.dime[2]
+            / 1024.0
+            / 1024.0
+        )
+        if method == "":  # method not named - use ceiling
             if gmem > size.getConstant("gmemceil"):
                 method = "mg-para"
             else:
@@ -76,7 +85,7 @@
         self.lpbe = 1
         self.npbe = 0
         self.bcfl = "sdh"
-        self.ion = [[-1, 1.815], [1, 1.875]] # Multiple ions possible
+        self.ion = [[-1, 1.815], [1, 1.875]]  # Multiple ions possible
         self.pdie = 2.0
         self.sdie = 78.54
         self.srfm = "smol"
@@ -91,7 +100,9 @@
         if potdx == 1:
             self.write = [["pot", "dx", pqrpath]]
         else:
-            self.write = [["pot", "dx", "pot"]] # Multiple write statements possible
+            self.write = [
+                ["pot", "dx", "pot"]
+            ]  # Multiple write statements possible
 
     def __str__(self):
         """
@@ -100,21 +111,49 @@
         """
         text = "elec %s\n" % self.label
         text += "    %s\n" % self.method
-        text += "    dime %i %i %i\n" % (self.dime[0], self.dime[1], self.dime[2])
+        text += "    dime %i %i %i\n" % (
+            self.dime[0],
+            self.dime[1],
+            self.dime[2],
+        )
         if self.method == "mg-manual":
             text += "    nlev %i\n" % self.nlev
-            text += "    glen %.3f %.3f %.3f\n" % (self.glen[0], self.glen[1], self.glen[2])
+            text += "    glen %.3f %.3f %.3f\n" % (
+                self.glen[0],
+                self.glen[1],
+                self.glen[2],
+            )
             text += "    gcent %s\n" % self.gcent
         elif self.method == "mg-auto":
-            text += "    cglen %.4f %.4f %.4f\n" % (self.cglen[0], self.cglen[1], self.cglen[2])
-            text += "    fglen %.4f %.4f %.4f\n" % (self.fglen[0], self.fglen[1], self.fglen[2])
+            text += "    cglen %.4f %.4f %.4f\n" % (
+                self.cglen[0],
+                self.cglen[1],
+                self.cglen[2],
+            )
+            text += "    fglen %.4f %.4f %.4f\n" % (
+                self.fglen[0],
+                self.fglen[1],
+                self.fglen[2],
+            )
             text += "    cgcent %s\n" % self.cgcent
             text += "    fgcent %s\n" % self.fgcent
         elif self.method == "mg-para":
-            text += "    pdime %i %i %i\n" % (self.pdime[0], self.pdime[1], self.pdime[2])
+            text += "    pdime %i %i %i\n" % (
+                self.pdime[0],
+                self.pdime[1],
+                self.pdime[2],
+            )
             text += "    ofrac %.1f\n" % self.ofrac
-            text += "    cglen %.4f %.4f %.4f\n" % (self.cglen[0], self.cglen[1], self.cglen[2])
-            text += "    fglen %.4f %.4f %.4f\n" % (self.fglen[0], self.fglen[1], self.fglen[2])
+            text += "    cglen %.4f %.4f %.4f\n" % (
+                self.cglen[0],
+                self.cglen[1],
+                self.cglen[2],
+            )
+            text += "    fglen %.4f %.4f %.4f\n" % (
+                self.fglen[0],
+                self.fglen[1],
+                self.fglen[2],
+            )
             text += "    cgcent %s\n" % self.cgcent
             text += "    fgcent %s\n" % self.fgcent
             if self.asyncflag == 1:
@@ -127,7 +166,11 @@
         text += "    bcfl %s\n" % self.bcfl
         if self.istrng > 0:
             for ion in self.ion:
-                text += "    ion charge %.2f conc %.3f radius %.4f\n" % (ion[0], self.istrng, ion[1])
+                text += "    ion charge %.2f conc %.3f radius %.4f\n" % (
+                    ion[0],
+                    self.istrng,
+                    ion[1],
+                )
         text += "    pdie %.4f\n" % self.pdie
         text += "    sdie %.4f\n" % self.sdie
         text += "    srfm %s\n" % self.srfm
@@ -143,6 +186,7 @@
         text += "end\n"
         return text
 
+
 class Input:
     """
         The input class.  Each input object is one APBS input file.
@@ -257,6 +301,7 @@
         pickle.dump(self, pfile)
         pfile.close()
 
+
 def split_input(filename):
     """
         Split the parallel input file into multiple async file names
@@ -266,7 +311,7 @@
                        file (string)
     """
     nproc = 0
-    file = open(filename, 'rU')
+    file = open(filename, "rU")
     text = ""
     while 1:
         line = file.readline()
@@ -274,16 +319,20 @@
             break
         text += line
         line = line.strip()
-        if line.startswith("pdime"): # Get # Procs
+        if line.startswith("pdime"):  # Get # Procs
             words = line.split()
             nproc = int(words[1]) * int(words[2]) * int(words[3])
 
     if nproc == 0:
-        sys.stderr.write("%s is not a valid APBS parallel input file!\n" % filename)
-        sys.stderr.write("The inputgen script was unable to asynchronize this file!\n")
+        sys.stderr.write(
+            "%s is not a valid APBS parallel input file!\n" % filename
+        )
+        sys.stderr.write(
+            "The inputgen script was unable to asynchronize this file!\n"
+        )
         sys.exit(2)
 
-    period = filename.find('.')
+    period = filename.find(".")
     for i in range(nproc):
         outname = filename[0:period] + "-PE%i.in" % i
         outtext = text.replace("mg-para\n", "mg-para\n    async %i\n" % i)
@@ -291,58 +340,84 @@
         outfile.write(outtext)
         outfile.close()
 
+
 def usage():
     """
         Display the usage information for this script
     """
-    size = psize.Psize()
-    msg = "\n"
-    msg += "Use this script to generate new APBS input files or split an existing\n"
-    msg += "parallel input file into multiple async files.\n\n"
-    msg += "Usage: inputgen.py [opts] <filename>\n"
-    msg += "Optional Arguments:\n"
-    msg += "  --help               : Display this text\n"
-    msg += "  --split              : Split an existing parallel input file to multiple\n"
-    msg += "                         async input files.\n"
-    msg += "  --potdx              : Create an input to compute an electrostatic potential map.\n"
-    msg += "  --method=<value>     : Force output file to write a specific APBS ELEC\n"
-    msg += "                         method.  Options are para (parallel), auto\n"
-    msg += "                         (automatic), manual (manual), or async (asynchronous).\n"
-    msg += "                         solve.  async will result in multiple input files.\n"
-    msg += "  --cfac=<value>       : Factor by which to expand molecular dimensions to\n"
-    msg += "                         get coarse grid dimensions.\n"
-    msg += "                         [default = %g]\n" % size.getConstant("cfac")
-    msg += "  --fadd=<value>       : Amount to add to molecular dimensions to get fine\n"
-    msg += "                         grid dimensions.\n"
-    msg += "                         [default = %g]\n" % size.getConstant("fadd")
-    msg += "  --space=<value>      : Desired fine mesh resolution\n"
-    msg += "                         [default = %g]\n" % size.getConstant("space")
-    msg += "  --gmemfac=<value>    : Number of bytes per grid point required\n"
-    msg += "                         for sequential MG calculation\n"
-    msg += "                         [default = %g]\n" % size.getConstant("gmemfac")
-    msg += "  --gmemceil=<value>   : Max MB allowed for sequential MG\n"
-    msg += "                         calculation.  Adjust this to force the\n"
-    msg += "                         script to perform faster calculations (which\n"
-    msg += "                         require more parallelism).\n"
-    msg += "                         [default = %g]\n" % size.getConstant("gmemceil")
-    msg += "  --ofrac=<value>      : Overlap factor between mesh partitions\n"
-    msg += "                         [default = %g]\n" % size.getConstant("ofrac")
-    msg += "  --redfac=<value>     : The maximum factor by which a domain\n"
-    msg += "                         dimension can be reduced during focusing\n"
-    msg += "                         [default = %g]\n" % size.getConstant("redfac")
-    msg += "  --istrng=<value>     : Ionic strength (M). Na+ anc Cl- ions will be used\n"
+    size = Psize()
+    cfac = size.getConstant("cfac")
+    fadd = size.getConstant("fadd")
+    space = size.getConstant("space")
+    gmemfac = size.getConstant("gmemfac")
+    gmemceil = size.getConstant("gmemceil")
+    ofrac = size.getConstant("ofrac")
+    redfac = size.getConstant("redfac")
+    msg = f"""
+Use this script to generate new APBS input files or split an existing
+parallel input file into multiple async files.
+
+Usage: inputgen.py [opts] <filename>
+Optional Arguments:
+  --help               : Display this text
+  --split              : Split an existing parallel input file to multiple
+                         async input files.
+  --potdx              : Create an input to compute an electrostatic potential
+                         map.
+  --method=<value>     : Force output file to write a specific APBS ELEC
+                         method.  Options are para (parallel), auto
+                         (automatic), manual (manual), or async (asynchronous).
+                         solve.  async will result in multiple input files.
+  --cfac=<value>       : Factor by which to expand molecular dimensions to
+                         get coarse grid dimensions.
+                         [default = {cfac}]
+  --fadd=<value>       : Amount to add to molecular dimensions to get fine
+                         grid dimensions.
+                         [default = {fadd}]
+  --space=<value>      : Desired fine mesh resolution
+                         [default = {space}]
+  --gmemfac=<value>    : Number of bytes per grid point required
+                         for sequential MG calculation
+                         [default = {gmemfac}]
+  --gmemceil=<value>   : Max MB allowed for sequential MG
+                         calculation.  Adjust this to force the
+                         script to perform faster calculations (which
+                         require more parallelism).
+                         [default = {gmemceil}]
+  --ofrac=<value>      : Overlap factor between mesh partitions
+                         [default = {ofrac}]
+  --redfac=<value>     : The maximum factor by which a domain
+                         dimension can be reduced during focusing
+                         [default = {redfac}]
+  --istrng=<value>     : Ionic strength (M). Na+ anc Cl- ions will be used
+  """
     sys.stderr.write(msg)
     sys.exit(2)
 
+
 def main():
     """
     Main
     """
 
     import getopt
+
     filename = ""
     short_opt_list = ""
-    long_opt_list = ["help", "split", "potdx", "method=", "cfac=", "space=", "gmemceil=", "gmemfac=", "ofrac=", "redfac=", "istrng=", "fadd="]
+    long_opt_list = [
+        "help",
+        "split",
+        "potdx",
+        "method=",
+        "cfac=",
+        "space=",
+        "gmemceil=",
+        "gmemfac=",
+        "ofrac=",
+        "redfac=",
+        "istrng=",
+        "fadd=",
+    ]
 
     try:
         opts, args = getopt.getopt(sys.argv[1:], short_opt_list, long_opt_list)
@@ -357,7 +432,7 @@
         filename = args[0]
 
     method = ""
-    size = psize.Psize()
+    size = Psize()
     async_val = 0
     split = 0
     istrng = 0
@@ -411,5 +486,6 @@
         data = Input(filename, size, method, async_val, istrng, potdx)
         data.print_input_files()
 
+
 if __name__ == "__main__":
     main()
diff --new-file -ru apbs-3.0.0/tools/manip/psize.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/manip/psize.py
--- apbs-3.0.0/tools/manip/psize.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/manip/psize.py	2020-09-29 19:12:06.000000000 +0200
@@ -1,5 +1,4 @@
-#!/usr/bin/env python
-# You may need to edit the above to point to your version of Python 2.0
+#!/usr/bin/env python3
 """
 psize.py
 Get dimensions and other interesting information from a PQR file
@@ -18,10 +17,20 @@
 import getopt
 from math import log
 
+
 class Psize:
     """Master class for parsing input files and suggesting settings"""
+
     def __init__(self):
-        self.constants = {"cfac": 1.7, "fadd":20, "space": 0.50, "gmemfac": 200, "gmemceil": 400, "ofrac":0.1, "redfac": 0.25}
+        self.constants = {
+            "cfac": 1.7,
+            "fadd": 20,
+            "space": 0.50,
+            "gmemfac": 200,
+            "gmemceil": 400,
+            "ofrac": 0.1,
+            "redfac": 0.25,
+        }
         self.minlen = [None, None, None]
         self.maxlen = [None, None, None]
         self.q = 0.0
@@ -61,13 +70,20 @@
                 for word in words[0:3]:
                     center.append(float(word))
                 for i in range(3):
-                    if self.minlen[i] is None or center[i]-rad < self.minlen[i]:
-                        self.minlen[i] = center[i]-rad
-                    if self.maxlen[i] is None or center[i]+rad > self.maxlen[i]:
-                        self.maxlen[i] = center[i]+rad
+                    if (
+                        self.minlen[i] is None
+                        or center[i] - rad < self.minlen[i]
+                    ):
+                        self.minlen[i] = center[i] - rad
+                    if (
+                        self.maxlen[i] is None
+                        or center[i] + rad > self.maxlen[i]
+                    ):
+                        self.maxlen[i] = center[i] + rad
             elif line.find("HETATM") == 0:
                 self.gothet = self.gothet + 1
-                # Special handling for no ATOM entries in the pqr file, only HETATM entries
+                # Special handling for no ATOM entries in the pqr file,
+                # only HETATM entries
                 if self.gotatom == 0:
                     subline = line[30:].replace("-", " -")
                     words = subline.split()
@@ -79,10 +95,16 @@
                     for word in words[0:3]:
                         center.append(float(word))
                     for i in range(3):
-                        if self.minlen[i] is None or center[i]-rad < self.minlen[i]:
-                            self.minlen[i] = center[i]-rad
-                        if self.maxlen[i] is None or center[i]+rad > self.maxlen[i]:
-                            self.maxlen[i] = center[i]+rad
+                        if (
+                            self.minlen[i] is None
+                            or center[i] - rad < self.minlen[i]
+                        ):
+                            self.minlen[i] = center[i] - rad
+                        if (
+                            self.maxlen[i] is None
+                            or center[i] + rad > self.maxlen[i]
+                        ):
+                            self.maxlen[i] = center[i] + rad
 
     def setConstant(self, name, value):
         """ Set a constant to a value; returns 0 if constant not found """
@@ -128,8 +150,8 @@
         """ Compute mesh grid points, assuming 4 levels in MG hierarchy """
         tn = [0, 0, 0]
         for i in range(3):
-            tn[i] = int(flen[i]/self.constants["space"] + 0.5)
-            self.n[i] = 32*(int((tn[i] - 1) / 32.0 + 0.5)) + 1
+            tn[i] = int(flen[i] / self.constants["space"] + 0.5)
+            self.n[i] = 32 * (int((tn[i] - 1) / 32.0 + 0.5)) + 1
             if self.n[i] < 33:
                 self.n[i] = 33
         return self.n
@@ -148,9 +170,11 @@
                 break
             else:
                 i = nsmall.index(max(nsmall))
-                nsmall[i] = 32 * ((nsmall[i] - 1)/32 - 1) + 1
+                nsmall[i] = 32 * ((nsmall[i] - 1) / 32 - 1) + 1
                 if nsmall <= 0:
-                    sys.stdout.write("You picked a memory ceiling that is too small\n")
+                    sys.stdout.write(
+                        "You picked a memory ceiling that is too small\n"
+                    )
                     sys.exit(0)
 
         self.nsmall = nsmall
@@ -162,9 +186,9 @@
 
         zofac = 1 + 2 * self.constants["ofrac"]
         for i in range(3):
-            self.np[i] = n[i]/float(nsmall[i])
+            self.np[i] = n[i] / float(nsmall[i])
             if self.np[i] > 1:
-                self.np[i] = int(zofac*n[i]/nsmall[i] + 1.0)
+                self.np[i] = int(zofac * n[i] / nsmall[i] + 1.0)
         return self.np
 
     def setFocus(self, flen, np, clen):
@@ -173,7 +197,11 @@
 
         nfoc = [0, 0, 0]
         for i in range(3):
-            nfoc[i] = int(log((flen[i]/np[i])/clen[i])/log(self.constants["redfac"]) + 1.0)
+            nfoc[i] = int(
+                log((flen[i] / np[i]) / clen[i])
+                / log(self.constants["redfac"])
+                + 1.0
+            )
         nfocus = nfoc[0]
         if nfoc[1] > nfocus:
             nfocus = nfoc[1]
@@ -197,7 +225,7 @@
         flen = self.getFineGridDims()
 
         self.setCenter(maxlen, minlen)
-        cen = self.getCenter()
+        cen = self.getCenter()  # noqa F841
 
         self.setFineGridPoints(flen)
         n = self.getFineGridPoints()
@@ -209,38 +237,48 @@
         np = self.getProcGrid()
 
         self.setFocus(flen, np, clen)
-        nfocus = self.getFocus()
+        nfocus = self.getFocus()  # noqa F841
 
     def getMax(self):
         """Get Max"""
         return self.maxlen
+
     def getMin(self):
         """Get Min"""
         return self.minlen
+
     def getCharge(self):
         """Get Charge"""
         return self.q
+
     def getLength(self):
         """Get Length"""
         return self.olen
+
     def getCoarseGridDims(self):
         """Get Course Grid Dimension"""
         return self.clen
+
     def getFineGridDims(self):
         """Get Fine Grid Dimension"""
         return self.flen
+
     def getCenter(self):
         """Get Center"""
         return self.cen
+
     def getFineGridPoints(self):
         """Get Grid Points"""
         return self.n
+
     def getSmallest(self):
         """Get Smallest"""
         return self.nsmall
+
     def getProcGrid(self):
         """Get Proc Grid"""
         return self.np
+
     def getFocus(self):
         """Get Focus"""
         return self.nfocus
@@ -277,43 +315,100 @@
             msg += "Number of ATOM entries = %i\n" % self.gotatom
             msg += "Number of HETATM entries (ignored) = %i\n" % self.gothet
             msg += "Total charge = %.3f e\n" % q
-            msg += "Dimensions = %.3f x %.3f x %.3f A\n" % (olen[0], olen[1], olen[2])
+            msg += "Dimensions = %.3f x %.3f x %.3f A\n" % (
+                olen[0],
+                olen[1],
+                olen[2],
+            )
             msg += "Center = %.3f x %.3f x %.3f A\n" % (cen[0], cen[1], cen[2])
-            msg += "Lower corner = %.3f x %.3f x %.3f A\n" % (float(minlen[0]), float(minlen[1]), float(minlen[2]))
-            msg += "Upper corner = %.3f x %.3f x %.3f A\n" % (float(maxlen[0]), float(maxlen[1]), float(maxlen[2]))
+            msg += "Lower corner = %.3f x %.3f x %.3f A\n" % (
+                float(minlen[0]),
+                float(minlen[1]),
+                float(minlen[2]),
+            )
+            msg += "Upper corner = %.3f x %.3f x %.3f A\n" % (
+                float(maxlen[0]),
+                float(maxlen[1]),
+                float(maxlen[2]),
+            )
             msg += "\n"
             msg += "############## GENERAL CALCULATION INFO #############\n"
-            msg += "Coarse grid dims = %.3f x %.3f x %.3f A\n" % (clen[0], clen[1], clen[2])
-            msg += "Fine grid dims = %.3f x %.3f x %.3f A\n" % (flen[0], flen[1], flen[2])
+            msg += "Coarse grid dims = %.3f x %.3f x %.3f A\n" % (
+                clen[0],
+                clen[1],
+                clen[2],
+            )
+            msg += "Fine grid dims = %.3f x %.3f x %.3f A\n" % (
+                flen[0],
+                flen[1],
+                flen[2],
+            )
             msg += "Num. fine grid pts. = %i x %i x %i\n" % (n[0], n[1], n[2])
 
             if gmem > self.constants["gmemceil"]:
-                msg += "Parallel solve required (%.3f MB > %.3f MB)\n" % (gmem, self.constants["gmemceil"])
-                msg += "Total processors required = %i\n" % (np[0]*np[1]*np[2])
-                msg += "Proc. grid = %i x %i x %i\n" % (int(np[0]), int(np[1]), int(np[2]))
-                msg += "Grid pts. on each proc. = %i x %i x %i\n" % (nsmall[0], nsmall[1], nsmall[2])
-                xglob = np[0]*round(nsmall[0]/(1 + 2*self.constants["ofrac"]) - .001)
-                yglob = np[1]*round(nsmall[1]/(1 + 2*self.constants["ofrac"]) - .001)
-                zglob = np[2]*round(nsmall[2]/(1 + 2*self.constants["ofrac"]) - .001)
+                msg += "Parallel solve required (%.3f MB > %.3f MB)\n" % (
+                    gmem,
+                    self.constants["gmemceil"],
+                )
+                msg += "Total processors required = %i\n" % (
+                    np[0] * np[1] * np[2]
+                )
+                msg += "Proc. grid = %i x %i x %i\n" % (
+                    int(np[0]),
+                    int(np[1]),
+                    int(np[2]),
+                )
+                msg += "Grid pts. on each proc. = %i x %i x %i\n" % (
+                    nsmall[0],
+                    nsmall[1],
+                    nsmall[2],
+                )
+                xglob = np[0] * round(
+                    nsmall[0] / (1 + 2 * self.constants["ofrac"]) - 0.001
+                )
+                yglob = np[1] * round(
+                    nsmall[1] / (1 + 2 * self.constants["ofrac"]) - 0.001
+                )
+                zglob = np[2] * round(
+                    nsmall[2] / (1 + 2 * self.constants["ofrac"]) - 0.001
+                )
                 if np[0] == 1:
                     xglob = nsmall[0]
                 if np[1] == 1:
                     yglob = nsmall[1]
                 if np[2] == 1:
                     zglob = nsmall[2]
-                msg += "Fine mesh spacing = %g x %g x %g A\n" % (flen[0]/(xglob-1), flen[1]/(yglob-1), flen[2]/(zglob-1))
-                msg += "Estimated mem. required for parallel solve = %.3f MB/proc.\n" % nsmem
-                ntot = nsmall[0]*nsmall[1]*nsmall[2]
+                msg += "Fine mesh spacing = %g x %g x %g A\n" % (
+                    flen[0] / (xglob - 1),
+                    flen[1] / (yglob - 1),
+                    flen[2] / (zglob - 1),
+                )
+                msg += "Estimated mem. required for parallel solve "
+                msg += "%.3f MB/proc.\n" % nsmem
+                ntot = nsmall[0] * nsmall[1] * nsmall[2]
             else:
-                msg += "Fine mesh spacing = %g x %g x %g A\n" % (flen[0]/(n[0]-1), flen[1]/(n[1]-1), flen[2]/(n[2]-1))
-                msg += "Estimated mem. required for sequential solve = %.3f MB\n" % gmem
-                ntot = n[0]*n[1]*n[2]
+                msg += "Fine mesh spacing = %g x %g x %g A\n" % (
+                    flen[0] / (n[0] - 1),
+                    flen[1] / (n[1] - 1),
+                    flen[2] / (n[2] - 1),
+                )
+                msg += (
+                    "Estimated mem. required for sequential solve = %.3f MB\n"
+                    % gmem
+                )
+                ntot = n[0] * n[1] * n[2]
 
             msg += "Number of focusing operations = %i\n" % nfocus
             msg += "\n"
-            msg += "################# ESTIMATED REQUIREMENTS ####################\n"
-            msg += "Memory per processor                   = %.3f MB\n" % (200.0*ntot/1024/1024)
-            msg += "Grid storage requirements (ASCII)      = %.3f MB\n" % (8.0*12*np[0]*np[1]*np[2]*ntot/1024/1024)
+            msg += "#################"
+            msg += " ESTIMATED REQUIREMENTS "
+            msg += "####################\n"
+            msg += "Memory per processor                   = %.3f MB\n" % (
+                200.0 * ntot / 1024 / 1024
+            )
+            msg += "Grid storage requirements (ASCII)      = %.3f MB\n" % (
+                8.0 * 12 * np[0] * np[1] * np[2] * ntot / 1024 / 1024
+            )
             msg += "\n"
 
         else:
@@ -321,6 +416,7 @@
 
         return msg
 
+
 def usage(rc):
     """ Print usage information and exit with error code rc """
     psize = Psize()
@@ -342,12 +438,16 @@
         dimensions. This value might need to be increased in the\n\
         visualization of highly charged molecules to prevent isocontours\n\
         from being truncated/clipped.\n"
-    msg += "    --space=<value>    [default = %g]\n" % psize.getConstant("space")
+    msg += "    --space=<value>    [default = %g]\n" % psize.getConstant(
+        "space"
+    )
     msg += "\
         The desired fine mesh spacing (in A).  This should be 0.5 A or\n\
         less for quantitative calculations but can be increased for\n\
         coarse visualization.\n"
-    msg += "    --gmemceil=<value> [default = %g]\n" % psize.getConstant("gmemceil")
+    msg += "    --gmemceil=<value> [default = %g]\n" % psize.getConstant(
+        "gmemceil"
+    )
     msg += "\
         Maximum memory (in MB) available per-processor for a calculation.\n\
         This should be adjusted to fit your machine.  If the calculation\n\
@@ -359,12 +459,16 @@
         default value works for many calculations, the best setting can\n\
         be somewhat system-dependent.  Users are encouraged to check\n\
         multiple values of ofrac for quantitative calcualtions.\n"
-    msg += "    --gmemfac=<value> [default = %g]\n" % psize.getConstant("gmemfac")
+    msg += "    --gmemfac=<value> [default = %g]\n" % psize.getConstant(
+        "gmemfac"
+    )
     msg += "\
         APBS memory usage (in bytes per grid point) for a sequential\n\
         multigrid calculatiaon.  This value should not need to be\n\
         adjusted unless the program has been modified.\n"
-    msg += "    --redfac=<value> [default = %g]\n" % psize.getConstant("redfac")
+    msg += "    --redfac=<value> [default = %g]\n" % psize.getConstant(
+        "redfac"
+    )
     msg += "\
         APBS maximum reduction of grid spacing during focusing.  This\n\
         value should not need to be adjusted unless the program has\n\
@@ -373,11 +477,21 @@
     sys.stderr.write(msg)
     sys.exit(rc)
 
+
 def main():
     """ Main driver for this script """
     filename = ""
     short_opt_list = "h"
-    long_opt_list = ["help", "cfac=", "fadd=", "space=", "gmemfac=", "gmemceil=", "ofrac=", "redfac="]
+    long_opt_list = [
+        "help",
+        "cfac=",
+        "fadd=",
+        "space=",
+        "gmemfac=",
+        "gmemceil=",
+        "ofrac=",
+        "redfac=",
+    ]
     try:
         opts, args = getopt.getopt(sys.argv[1:], short_opt_list, long_opt_list)
     except getopt.GetoptError as err:
@@ -418,5 +532,6 @@
     sys.stdout.write("# for more information on these default values\n")
     sys.stdout.write(psize.printResults())
 
+
 if __name__ == "__main__":
     main()
diff --new-file -ru apbs-3.0.0/tools/matlab/solver/Examples/born-ion/born.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/born-ion/born.in
--- apbs-3.0.0/tools/matlab/solver/Examples/born-ion/born.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/born-ion/born.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 #############################################################################
-### BORN ION SOLVATION ENERGY
-### $Id: apbs-mol-auto.in 1119 2007-07-23 13:52:03Z sobolevnrm $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for 
-### input file sytax.
+# BORN ION SOLVATION ENERGY
 #############################################################################
 
 # READ IN MOLECULES
diff --new-file -ru apbs-3.0.0/tools/matlab/solver/Examples/Meth/meth.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/Meth/meth.in
--- apbs-3.0.0/tools/matlab/solver/Examples/Meth/meth.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/Meth/meth.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
-### $Id: apbs-mol.in 1346 2009-02-10 21:11:14Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# ELECTROSTATIC ENERGY FOR METHANOL -> METHOXIDE IONIZATION
 ##########################################################################
 
 read 
@@ -138,4 +134,4 @@
 # Solvation energy difference
 print elecEnergy methoxide-solv - methoxide-ref - methanol-solv + methanol-ref end
 
-quit
+quit
diff --new-file -ru apbs-3.0.0/tools/matlab/solver/Examples/pka/apbs-smol-vdw.in apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/pka/apbs-smol-vdw.in
--- apbs-3.0.0/tools/matlab/solver/Examples/pka/apbs-smol-vdw.in	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/matlab/solver/Examples/pka/apbs-smol-vdw.in	2020-09-29 19:12:06.000000000 +0200
@@ -1,9 +1,5 @@
 ##########################################################################
-### PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
-### $Id: apbs-smol-vdw.in 1346 2009-02-10 21:11:14Z sdg0919 $
-###
-### Please see APBS documentation (http://apbs.sourceforge.net/doc/) for
-### syntax help.
+# PROTEIN KINASE BINDING ENERGY -- VAN DER WAALS SURFACE
 ##########################################################################
 
 read 
diff --new-file -ru apbs-3.0.0/tools/python/main.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/main.py
--- apbs-3.0.0/tools/python/main.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/main.py	2020-09-29 19:12:06.000000000 +0200
@@ -11,53 +11,125 @@
     Todd Dolinsky (todd@ccb.wustl.edu)
     Nathan Baker (nathan.baker@pnl.gov)
 
-	APBS -- Adaptive Poisson-Boltzmann Solver
+    APBS -- Adaptive Poisson-Boltzmann Solver
 
-	  Nathan A. Baker (nathan.baker@pnl.gov)
-	  Pacific Northwest National Laboratory
+      Nathan A. Baker (nathan.baker@pnl.gov)
+      Pacific Northwest National Laboratory
 
-	  Additional contributing authors listed in the code documentation.
+      Additional contributing authors listed in the code documentation.
 
-	Copyright (c) 2010-2020 Battelle Memorial Institute.
-    Developed at the Pacific Northwest National Laboratory, operated by Battelle Memorial Institute,
+    Copyright (c) 2010-2020 Battelle Memorial Institute.
+    Developed at the Pacific Northwest National Laboratory, operated by
+    Battelle Memorial Institute,
     Pacific Northwest Division for the U.S. Department Energy.
     Portions Copyright (c) 2002-2010, Washington University in St. Louis.
     Portions Copyright (c) 2002-2020, Nathan A. Baker.
-    Portions Copyright (c) 1999-2002, The Regents of the University of California.
+    Portions Copyright (c) 1999-2002, The Regents of the University of
+    California.
     Portions Copyright (c) 1995, Michael Holst
 
-	All rights reserved.
+    All rights reserved.
 
-	Redistribution and use in source and binary forms, with or without
-	modification, are permitted provided that the following conditions are met:
+    Redistribution and use in source and binary forms, with or without
+    modification, are permitted provided that the following conditions are met:
 
-	* Redistributions of source code must retain the above copyright notice, this
-	list of conditions and the following disclaimer.
+    * Redistributions of source code must retain the above copyright notice,
+    this list of conditions and the following disclaimer.
 
-	* Redistributions in binary form must reproduce the above copyright notice,
-	this list of conditions and the following disclaimer in the documentation
-	and/or other materials provided with the distribution.
-
-	* Neither the name of Washington University in St. Louis nor the names of its
-	contributors may be used to endorse or promote products derived from this
-	software without specific prior written permission.
-
-	THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
-	"AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
-	LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
-	A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR
-	CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
-	EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
-	PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
-	PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
-	LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
-	NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
-	SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
+    * Redistributions in binary form must reproduce the above copyright notice,
+    this list of conditions and the following disclaimer in the documentation
+    and/or other materials provided with the distribution.
+
+    * Neither the name of Washington University in St. Louis nor the names of
+    its contributors may be used to endorse or promote products derived from
+    this software without specific prior written permission.
+
+    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
+    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
+    LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
+    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER
+    OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
+    EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
+    PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR
+    PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
+    LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
+    NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
+    SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 """
 
-from apbslib import *
-import sys, time
-import string
+from apbslib import (
+    MGparm,
+    NOsh_ctor,
+    NOsh_elec2calc,
+    NOsh_elecname,
+    NOsh_getCalc,
+    NOsh_parseInputFile,
+    NOsh_printWhat,
+    NOsh_setupElecCalc,
+    NPT_APOLENERGY,
+    NPT_APOLFORCE,
+    NPT_ELECENERGY,
+    NPT_ELECFORCE,
+    NPT_ENERGY,
+    NPT_FORCE,
+    PBEparm,
+    Vcom_ctor,
+    Vcom_rank,
+    Vcom_size,
+    Vmem_ctor,
+    atomForce,
+    delete_Com,
+    delete_Mem,
+    delete_Nosh,
+    delete_atomforcelist,
+    delete_double_array,
+    delete_gridlist,
+    delete_int_array,
+    delete_pbelist,
+    delete_pmglist,
+    delete_pmgplist,
+    delete_valist,
+    double_array,
+    energyMG,
+    get_AtomForce,
+    get_Vpmg,
+    initMG,
+    int_array,
+    killChargeMaps,
+    killDielMaps,
+    killEnergy,
+    killForce,
+    killKappaMaps,
+    killMG,
+    killMolecules,
+    loadChargeMaps,
+    loadDielMaps,
+    loadKappaMaps,
+    loadMolecules,
+    new_atomforcelist,
+    new_gridlist,
+    new_pbelist,
+    new_pmglist,
+    new_pmgplist,
+    new_valist,
+    printApolEnergy,
+    printApolForce,
+    printElecEnergy,
+    printElecForce,
+    printEnergy,
+    printForce,
+    printMGPARM,
+    printPBEPARM,
+    setPartMG,
+    solveMG,
+    startVio,
+    wrap_forceMG,
+    writedataMG,
+    writematMG,
+    xrange,
+)
+import sys
+import time
 from sys import stdout, stderr
 
 __author__ = "Todd Dolinsky, Nathan Baker, Yong Huang"
@@ -65,10 +137,11 @@
 __version__ = "1.3"
 
 Python_kb = 1.3806581e-23
-Python_Na = 6.0221367e+23
+Python_Na = 6.0221367e23
 NOSH_MAXMOL = 20
 NOSH_MAXCALC = 20
 
+
 class APBSError(Exception):
     """ APBSError class
 
@@ -89,7 +162,8 @@
         """
             Return the error message
         """
-        return `self.value`
+        return repr(self.value)
+
 
 def getHeader():
     """ Get header information about APBS
@@ -97,7 +171,7 @@
             header: Information about APBS
     """
 
-    header = "\n\n\
+    header = '\n\n\
     ----------------------------------------------------------------------\n\
     Adaptive Poisson-Boltzmann Solver (APBS)\n\
     Version 1.6\n\
@@ -111,32 +185,40 @@
     \n\
     Copyright (c) 2010-2020 Battelle Memorial Institute. \n\
     Developed at the Pacific Northwest National Laboratory, \n\
-    operated by Battelle Memorial Institute, Pacific Northwest Division for the U.S. Department Energy.\n\
+    operated by Battelle Memorial Institute, Pacific Northwest Division for \
+    the U.S. Department Energy.\n\
     Portions Copyright (c) 2002-2010, Washington University in St. Louis.\n\
     Portions Copyright (c) 2002-2020, Nathan A. Baker.\n\
-    Portions Copyright (c) 1999-2002, The Regents of the University of California.\n\
+    Portions Copyright (c) 1999-2002, The Regents of the University of \
+    California.\n\
     Portions Copyright (c) 1995, Michael Holst\n\
     \n\
     All rights reserved.\n\
     \n\
     Redistribution and use in source and binary forms, with or without\n\
-    modification, are permitted provided that the following conditions are met:\n\
+    modification, are permitted provided that the following conditions are \
+    met:\n\
     \n\
-    * Redistributions of source code must retain the above copyright notice, this\n\
-      list of conditions and the following disclaimer.\n\
+    * Redistributions of source code must retain the above copyright notice, \
+      this\n list of conditions and the following disclaimer.\n\
     \n\
-    * Redistributions in binary form must reproduce the above copyright notice,\n\
-      this list of conditions and the following disclaimer in the documentation\n\
+    * Redistributions in binary form must reproduce the above copyright \
+      notice,\n\
+      this list of conditions and the following disclaimer in the \
+      documentation\n\
       and/or other materials provided with the distribution.\n\
     \n\
-    * Neither the name of Washington University in St. Louis nor the names of its\n\
-      contributors may be used to endorse or promote products derived from this\n\
+    * Neither the name of Washington University in St. Louis nor the names of \
+      its\n\
+      contributors may be used to endorse or promote products derived from \
+      this\n\
       software without specific prior written permission.\n\
     \n\
     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\
-    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\
+    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\
     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\
-    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\
+    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT \
+    OWNER OR\n\
     CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
     EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
     PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
@@ -145,10 +227,11 @@
     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\
     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\
     ----------------------------------------------------------------------\n\
-    \n\n"
+    \n\n'
 
     return header
 
+
 def getUsage():
     """ Get usage information about running APBS via Python
         Returns (usage)
@@ -165,6 +248,7 @@
 
     return usage
 
+
 def main():
     """ Main driver for testing.  Runs APBS on given input file """
 
@@ -194,7 +278,7 @@
     if len(sys.argv) != 2:
         stderr.write("main:  Called with %d arguments!\n" % len(sys.argv))
         stderr.write(getUsage())
-        raise APBSError, "Incorrect Usage!"
+        raise APBSError("Incorrect Usage!")
 
     # Parse the input file
     nosh = NOsh_ctor(rank, size)
@@ -202,20 +286,20 @@
     stdout.write("Parsing input file %s...\n" % input_file)
     if NOsh_parseInputFile(nosh, input_file) != 1:
         stderr.write("main:  Error while parsing input file.\n")
-        raise APBSError, "Error while parsing input file!"
+        raise APBSError("Error while parsing input file!")
 
     # Load the molecules using loadMolecules routine
     # loadMolecule passing NULL as second arg instead of Vparam
     alist = new_valist(NOSH_MAXMOL)
-    if loadMolecules(nosh,None,alist) != 1:
+    if loadMolecules(nosh, None, alist) != 1:
         stderr.write("main:  Error while loading molecules. \n")
-        raise APBSError, "Error while loading molecules!"
+        raise APBSError("Error while loading molecules!")
 
     # Setup the calculations
 
     if NOsh_setupElecCalc(nosh, alist) != 1:
         stderr.write("main: Error while setting up calculations. \n")
-        raise APBSError, "Error while setting up calculations!"
+        raise APBSError("Error while setting up calculations!")
 
     # Load the necessary maps
 
@@ -224,23 +308,24 @@
     dielZMap = new_gridlist(NOSH_MAXMOL)
     if loadDielMaps(nosh, dielXMap, dielYMap, dielZMap) != 1:
         stderr.write("Error reading dielectric maps!\n")
-        raise APBSError, "Error reading dielectric maps!"
+        raise APBSError("Error reading dielectric maps!")
 
     kappaMap = new_gridlist(NOSH_MAXMOL)
     if loadKappaMaps(nosh, kappaMap) != 1:
         stderr.write("Error reading kappa maps!\n")
-        raise APBSError, "Error reading kappa maps!"
+        raise APBSError("Error reading kappa maps!")
 
     chargeMap = new_gridlist(NOSH_MAXMOL)
     if loadChargeMaps(nosh, chargeMap) != 1:
         stderr.write("Error reading charge maps!\n")
-        raise APBSError, "Error reading charge maps!"
+        raise APBSError("Error reading charge maps!")
 
     # Do the calculations
 
     stdout.write("Preparing to run %d PBE calculations. \n" % nosh.ncalc)
 
-    for icalc in xrange(nosh.ncalc): totEnergy.append(0.0)
+    for icalc in xrange(nosh.ncalc):
+        totEnergy.append(0.0)
 
     for icalc in xrange(nosh.ncalc):
         stdout.write("---------------------------------------------\n")
@@ -249,26 +334,45 @@
         pbeparm = calc.pbeparm
         if calc.calctype != 0:
             stderr.write("main:  Only multigrid calculations supported!\n")
-            raise APBSError, "Only multigrid calculations supported!"
+            raise APBSError("Only multigrid calculations supported!")
 
+        k = 0
         for k in range(0, nosh.nelec):
-            if NOsh_elec2calc(nosh,k) >= icalc:
+            if NOsh_elec2calc(nosh, k) >= icalc:
                 break
 
         name = NOsh_elecname(nosh, k)
         if name == "":
-            stdout.write("CALCULATION #%d:  MULTIGRID\n" % (icalc+1))
+            stdout.write("CALCULATION #%d:  MULTIGRID\n" % (icalc + 1))
         else:
-            stdout.write("CALCULATION #%d (%s): MULTIGRID\n" % ((icalc+1),name))
+            stdout.write(
+                "CALCULATION #%d (%s): MULTIGRID\n" % ((icalc + 1), name)
+            )
         stdout.write("Setting up problem...\n")
 
         # Routine initMG
 
-        if initMG(icalc, nosh, mgparm, pbeparm, realCenter, pbe,
-              alist, dielXMap, dielYMap, dielZMap, kappaMap, chargeMap,
-              pmgp, pmg) != 1:
+        if (
+            initMG(
+                icalc,
+                nosh,
+                mgparm,
+                pbeparm,
+                realCenter,
+                pbe,
+                alist,
+                dielXMap,
+                dielYMap,
+                dielZMap,
+                kappaMap,
+                chargeMap,
+                pmgp,
+                pmg,
+            )
+            != 1
+        ):
             stderr.write("Error setting up MG calculation!\n")
-            raise APBSError, "Error setting up MG calculation!"
+            raise APBSError("Error setting up MG calculation!")
 
         # Print problem parameters if desired (comment out if you want
         # to minimize output to stdout)
@@ -278,28 +382,31 @@
 
         # Solve the problem : Routine solveMG
 
-        thispmg = get_Vpmg(pmg,icalc)
+        thispmg = get_Vpmg(pmg, icalc)
 
         if solveMG(nosh, thispmg, mgparm.type) != 1:
             stderr.write("Error solving PDE! \n")
-            raise APBSError, "Error Solving PDE!"
+            raise APBSError("Error Solving PDE!")
 
         # Set partition information : Routine setPartMG
 
         if setPartMG(nosh, mgparm, thispmg) != 1:
             stderr.write("Error setting partition info!\n")
-            raise APBSError, "Error setting partition info!"
+            raise APBSError("Error setting partition info!")
 
         # Get the energies - the energy for this calculation
         # (calculation number icalc) will be stored in the totEnergy array
 
-        ret, totEnergy[icalc] = energyMG(nosh, icalc, thispmg, 0, \
-                                         totEnergy[icalc], 0.0, 0.0, 0.0)
+        ret, totEnergy[icalc] = energyMG(
+            nosh, icalc, thispmg, 0, totEnergy[icalc], 0.0, 0.0, 0.0
+        )
 
         # Calculate forces
 
         aforce = get_AtomForce(atomforce, icalc)
-        wrap_forceMG(mem, nosh, pbeparm, mgparm, thispmg, aforce, alist, nforce, icalc)
+        wrap_forceMG(
+            mem, nosh, pbeparm, mgparm, thispmg, aforce, alist, nforce, icalc
+        )
 
         # Write out data from MG calculations : Routine writedataMG
         writedataMG(rank, nosh, pbeparm, thispmg)
@@ -358,7 +465,6 @@
     delete_pmgplist(pmgp)
     delete_pbelist(pbe)
 
-
     # Clean up MALOC structures
     delete_Com(com)
     delete_Mem(mem)
@@ -367,7 +473,11 @@
 
     # Stop the main timer
     main_timer_stop = time.clock()
-    stdout.write("Total execution time:  %1.6e sec\n" % (main_timer_stop - main_timer_start))
+    stdout.write(
+        "Total execution time:  %1.6e sec\n"
+        % (main_timer_stop - main_timer_start)
+    )
 
 
-if __name__ == "__main__": main()
+if __name__ == "__main__":
+    main()
diff --new-file -ru apbs-3.0.0/tools/python/noinput.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/noinput.py
--- apbs-3.0.0/tools/python/noinput.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/noinput.py	2020-09-29 19:12:06.000000000 +0200
@@ -32,8 +32,72 @@
 
 """
 
-from apbslib import *
-import sys, time
+from apbslib import (
+    MGparm,
+    NOsh_ctor,
+    NOsh_elec2calc,
+    NOsh_elecname,
+    NOsh_getCalc,
+    NOsh_printWhat,
+    NOsh_setupElecCalc,
+    NPT_ENERGY,
+    NPT_FORCE,
+    PBEparm,
+    Valist_load,
+    Vcom_ctor,
+    Vcom_rank,
+    Vcom_size,
+    Vmem_ctor,
+    delete_atomforcelist,
+    delete_double_array,
+    delete_gridlist,
+    delete_int_array,
+    delete_pbelist,
+    delete_pmglist,
+    delete_pmgplist,
+    delete_valist,
+    double_array,
+    energyMG,
+    getEnergies,
+    getForces,
+    getPotentials,
+    get_AtomForce,
+    get_Vpmg,
+    initMG,
+    int_array,
+    killChargeMaps,
+    killDielMaps,
+    killEnergy,
+    killForce,
+    killKappaMaps,
+    killMG,
+    killMolecules,
+    killPotMaps,
+    loadChargeMaps,
+    loadDielMaps,
+    loadKappaMaps,
+    loadPotMaps,
+    make_Valist,
+    new_atomforcelist,
+    new_gridlist,
+    new_pbelist,
+    new_pmglist,
+    new_pmgplist,
+    new_valist,
+    parseInputFromString,
+    printEnergy,
+    printForce,
+    printMGPARM,
+    printPBEPARM,
+    setPartMG,
+    solveMG,
+    wrap_forceMG,
+    writedataMG,
+    writematMG,
+    xrange,
+)
+import sys
+import time
 import string
 import re
 from sys import stdout, stderr
@@ -100,10 +164,11 @@
 PQR = "ATOM      1  I   ION     1       0.000   0.000  0.000  1.00  3.00"
 
 Python_kb = 1.3806581e-23
-Python_Na = 6.0221367e+23
+Python_Na = 6.0221367e23
 NOSH_MAXMOL = 20
 NOSH_MAXCALC = 20
 
+
 class APBSError(Exception):
     """ APBSError class
 
@@ -124,7 +189,8 @@
         """
             Return the error message
         """
-        return `self.value`
+        return repr(self.value)
+
 
 def getUnitConversion():
     """
@@ -134,9 +200,10 @@
             factor: The conversion factor (float)
     """
     temp = 298.15
-    factor = Python_kb/1000.0 * temp * Python_Na
+    factor = Python_kb / 1000.0 * temp * Python_Na
     return factor
 
+
 def getHeader():
     """ Get header information about APBS
         Returns (header)
@@ -148,7 +215,7 @@
             header: Information about APBS
     """
 
-    header = "\n\n\
+    header = '\n\n\
     ----------------------------------------------------------------------\n\
     Adaptive Poisson-Boltzmann Solver (APBS)\n\
     Version 1.6\n\
@@ -161,33 +228,37 @@
     Additional contributing authors listed in the code documentation.\n\
     \n\
     Copyright (c) 2010-2020 Battelle Memorial Institute.\n\
-    Developed at the Pacific Northwest National Laboratory, operated by Battelle Memorial Institute,\n\
+    Developed at the Pacific Northwest National Laboratory, operated by \
+    Battelle Memorial Institute,\n\
     Pacific Northwest Division for the U.S. Department Energy.\n\
     Portions Copyright (c) 2002-2010, Washington University in St. Louis.\n\
     Portions Copyright (c) 2002-2020, Nathan A. Baker.\n\
-    Portions Copyright (c) 1999-2002,  The Regents of the University of California.\n\
+    Portions Copyright (c) 1999-2002,  The Regents of the University of \
+    California.\n\
     Portions Copyright (c) 1995,  Michael Holst\n\
     \n\
     All rights reserved.\n\
     \n\
     Redistribution and use in source and binary forms, with or without\n\
-    modification, are permitted provided that the following conditions are met:\n\
+    modification, are permitted provided that the following conditions are \
+    met:\n\
     \n\
-    * Redistributions of source code must retain the above copyright notice, this\n\
-      list of conditions and the following disclaimer.\n\
+    * Redistributions of source code must retain the above copyright notice, \
+      this list of conditions and the following disclaimer.\n\
     \n\
-    * Redistributions in binary form must reproduce the above copyright notice,\n\
-      this list of conditions and the following disclaimer in the documentation\n\
-      and/or other materials provided with the distribution.\n\
+    * Redistributions in binary form must reproduce the above copyright \
+      notice, this list of conditions and the following disclaimer in the \
+      documentation and/or other materials provided with the distribution.\n\
     \n\
-    * Neither the name of Washington University in St. Louis nor the names of its\n\
-      contributors may be used to endorse or promote products derived from this\n\
-      software without specific prior written permission.\n\
+    * Neither the name of Washington University in St. Louis nor the names of \
+      its contributors may be used to endorse or promote products derived \
+      from this software without specific prior written permission.\n\
     \n\
     THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n\
-    \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\
+    "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n\
     LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n\
-    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR\n\
+    A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT \
+    OWNER OR\n\
     CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,\n\
     EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,\n\
     PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\n\
@@ -196,9 +267,10 @@
     NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\n\
     SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\
     ----------------------------------------------------------------------\n\
-    \n\n"
+    \n\n'
     return header
 
+
 def getUsage():
     """ Get usage information about running APBS via Python
         Returns (usage)
@@ -245,19 +317,19 @@
 
     factor = getUnitConversion()
 
-    for i in range(len(potList)):
+    for i in xrange(len(potList)):
         list = potList[i]
-        print "\nPer-atom potentials from calculation %i" % i
+        print(f"\nPer-atom potentials from calculation {i}")
         for j in range(len(list)):
             atom = list[j]
-            print "\t%i\t%.4f kT/e" % (j, (float(atom)))
+            print("\t%i\t%.4f kT/e" % (j, (float(atom))))
 
     for i in range(len(energyList)):
         list = energyList[i]
-        print "\nPer-atom energies from calculation %i" % i
+        print(f"\nPer-atom energies from calculation {i}")
         for j in range(len(list)):
             atom = list[j]
-            print "\t%i\t%.4f kJ/mol" % (j, (float(atom) * factor * 0.5))
+            print("\t%i\t%.4f kJ/mol" % (j, (float(atom) * factor * 0.5)))
 
     # Print the per-atom forces
 
@@ -266,14 +338,26 @@
         iblist = forceList[i]["ib"]
         dblist = forceList[i]["db"]
 
-        print "\nPer-atom forces from calculation %i" % i
+        print(f"\nPer-atom forces from calculation {i}")
         for j in range(len(qflist)):
-            qf = "%.3E %.3E %.3E" % (qflist[j][0]*factor, qflist[j][1]*factor, qflist[j][2]*factor)
-            ib = "%.3E %.3E %.3E" % (iblist[j][0]*factor, iblist[j][1]*factor, iblist[j][2]*factor)
-            db = "%.3E %.3E %.3E" % (dblist[j][0]*factor, dblist[j][1]*factor, dblist[j][2]*factor)
-            print "\t%i\t%s (qf)" % (j, qf)
-            print "\t%i\t%s (ib)" % (j, ib)
-            print "\t%i\t%s (db)" % (j, db)
+            qf = "%.3E %.3E %.3E" % (
+                qflist[j][0] * factor,
+                qflist[j][1] * factor,
+                qflist[j][2] * factor,
+            )
+            ib = "%.3E %.3E %.3E" % (
+                iblist[j][0] * factor,
+                iblist[j][1] * factor,
+                iblist[j][2] * factor,
+            )
+            db = "%.3E %.3E %.3E" % (
+                dblist[j][0] * factor,
+                dblist[j][1] * factor,
+                dblist[j][2] * factor,
+            )
+            print(f"\t{j}\t{qf} (qf)")
+            print(f"\t{j}\t{ib} (ib)")
+            print(f"\t{j}\t{db} (db)")
 
 
 def runAPBS(PQR, INPUT):
@@ -309,44 +393,46 @@
 
     if not parseInputFromString(nosh, INPUT):
         stderr.write("main:  Error while parsing input file.\n")
-        raise APBSError, "Error occurred!"
+        raise APBSError("Error occurred!")
 
     # Load the molecules using Valist_load routine, thereby
     # loading atoms directly into the valist object, removing
     # the need for an actual PQR file from stdin
 
     alist = new_valist(NOSH_MAXMOL)
-    atoms = string.split(PQR,"\n")
+    atoms = string.split(PQR, "\n")
     for i in range(len(atoms)):
         atom = atoms[i]
-        if not (atom.startswith("ATOM") or atom.startswith("HETATM")): continue
-        if atom == "": continue
+        if not (atom.startswith("ATOM") or atom.startswith("HETATM")):
+            continue
+        if atom == "":
+            continue
 
         # Try matching to see if a chain ID is present
         haschain = 0
-        if re.compile("( [A-Z]{3} [A-Z]{1} *\d+)").findall(atom) != []:
+        if re.compile(r"( [A-Z]{3} [A-Z]{1} *\d+)").findall(atom) != []:
             haschain = 1
 
         params = string.split(atom)
-        x.append(float(params[5+haschain]))
-        y.append(float(params[6+haschain]))
-        z.append(float(params[7+haschain]))
-        chg.append(float(params[8+haschain]))
-        rad.append(float(params[9+haschain]))
+        x.append(float(params[5 + haschain]))
+        y.append(float(params[6 + haschain]))
+        z.append(float(params[7 + haschain]))
+        chg.append(float(params[8 + haschain]))
+        rad.append(float(params[9 + haschain]))
 
     # If there are more than one PQR file, make multiple Valist
     # objects.  Make sure to get the actual length of the
     # coordinate since atoms may contain non ATOM lines.
 
-    myAlist = make_Valist(alist,0)
-    Valist_load(myAlist, len(x), x,y,z,chg,rad)
+    myAlist = make_Valist(alist, 0)
+    Valist_load(myAlist, len(x), x, y, z, chg, rad)
 
     if not NOsh_setupElecCalc(nosh, alist):
         stderr.write("main: Error setting up calculation.\n")
-        raise APBSError, "Error setting up calculations!"
-
+        raise APBSError("Error setting up calculations!")
 
-    for i in range(nosh.ncalc): totEnergy.append(0.0)
+    for i in range(nosh.ncalc):
+        totEnergy.append(0.0)
 
     # Initialize the Python holders
     energyList = []
@@ -361,54 +447,74 @@
     dielZMap = new_gridlist(NOSH_MAXMOL)
     if loadDielMaps(nosh, dielXMap, dielYMap, dielZMap) != 1:
         stderr.write("Error reading dielectric maps!\n")
-        raise APBSError, "Error reading dielectric maps!"
+        raise APBSError("Error reading dielectric maps!")
 
     kappaMap = new_gridlist(NOSH_MAXMOL)
     if loadKappaMaps(nosh, kappaMap) != 1:
         stderr.write("Error reading kappa maps!\n")
-        raise APBSError, "Error reading kappa maps!"
+        raise APBSError("Error reading kappa maps!")
 
     chargeMap = new_gridlist(NOSH_MAXMOL)
     if loadChargeMaps(nosh, chargeMap) != 1:
         stderr.write("Error reading charge maps!\n")
-        raise APBSError, "Error reading charge maps!"
+        raise APBSError("Error reading charge maps!")
 
     potMap = new_gridlist(NOSH_MAXMOL)
     if loadPotMaps(nosh, chargeMap) != 1:
         stderr.write("Error reading charge maps!\n")
-        raise APBSError, "Error reading charge maps!"
+        raise APBSError("Error reading charge maps!")
 
     # Do the calculations
 
-    stdout.write("Preparing to run %d PBE calculations. \n" % nosh.ncalc)
+    stdout.write(f"Preparing to run {nosh.ncalc} PBE calculations. \n")
 
-    for icalc in xrange(nosh.ncalc):
+    for icalc in range(nosh.ncalc):
         stdout.write("---------------------------------------------\n")
         calc = NOsh_getCalc(nosh, icalc)
         mgparm = calc.mgparm
         pbeparm = calc.pbeparm
         if calc.calctype != 0:
             stderr.write("main:  Only multigrid calculations supported!\n")
-            raise APBSError, "Only multigrid calculations supported!"
+            raise APBSError("Only multigrid calculations supported!")
 
+        k = 0
         for k in range(0, nosh.nelec):
-            if NOsh_elec2calc(nosh,k) >= icalc:
+            if NOsh_elec2calc(nosh, k) >= icalc:
                 break
 
         name = NOsh_elecname(nosh, k)
         if name == "":
-            stdout.write("CALCULATION #%d:  MULTIGRID\n" % (icalc+1))
+            stdout.write("CALCULATION #%d:  MULTIGRID\n" % (icalc + 1))
         else:
-            stdout.write("CALCULATION #%d (%s): MULTIGRID\n" % ((icalc+1),name))
+            stdout.write(
+                "CALCULATION #%d (%s): MULTIGRID\n" % ((icalc + 1), name)
+            )
         stdout.write("Setting up problem...\n")
 
         # Routine initMG
 
-        if initMG(icalc, nosh, mgparm, pbeparm, realCenter, pbe,
-              alist, dielXMap, dielYMap, dielZMap, kappaMap, chargeMap,
-              pmgp, pmg, potMap) != 1:
+        if (
+            initMG(
+                icalc,
+                nosh,
+                mgparm,
+                pbeparm,
+                realCenter,
+                pbe,
+                alist,
+                dielXMap,
+                dielYMap,
+                dielZMap,
+                kappaMap,
+                chargeMap,
+                pmgp,
+                pmg,
+                potMap,
+            )
+            != 1
+        ):
             stderr.write("Error setting up MG calculation!\n")
-            raise APBSError, "Error setting up MG calculation!"
+            raise APBSError("Error setting up MG calculation!")
 
         # Print problem parameters if desired (comment out if you want
         # to minimize output to stdout)
@@ -418,27 +524,31 @@
 
         # Solve the problem : Routine solveMG
 
-        thispmg = get_Vpmg(pmg,icalc)
+        thispmg = get_Vpmg(pmg, icalc)
 
         if solveMG(nosh, thispmg, mgparm.type) != 1:
             stderr.write("Error solving PDE! \n")
-            raise APBSError, "Error Solving PDE!"
+            raise APBSError("Error Solving PDE!")
 
         # Set partition information : Routine setPartMG
 
         if setPartMG(nosh, mgparm, thispmg) != 1:
             stderr.write("Error setting partition info!\n")
-            raise APBSError, "Error setting partition info!"
+            raise APBSError("Error setting partition info!")
 
         # Get the energies - the energy for this calculation
         # (calculation number icalc) will be stored in the totEnergy array
-        ret, totEnergy[icalc] = energyMG(nosh, icalc, thispmg, 0, 0.0, 0.0, 0.0, 0.0)
+        ret, totEnergy[icalc] = energyMG(
+            nosh, icalc, thispmg, 0, 0.0, 0.0, 0.0, 0.0
+        )
 
         # Calculate forces - doforce will be > 0 if anything other than
         # "calcforce no" is specified
 
         aforce = get_AtomForce(atomforce, icalc)
-        doforce = wrap_forceMG(mem, nosh, pbeparm, mgparm, thispmg, aforce, alist, nforce, icalc)
+        doforce = wrap_forceMG(
+            mem, nosh, pbeparm, mgparm, thispmg, aforce, alist, nforce, icalc
+        )
 
         # Write out data from MG calculations : Routine writedataMG
         writedataMG(rank, nosh, pbeparm, thispmg)
@@ -487,7 +597,7 @@
     killKappaMaps(nosh, kappaMap)
     killDielMaps(nosh, dielXMap, dielYMap, dielZMap)
     killMolecules(nosh, alist)
-    #delete_Nosh(nosh)
+    # delete_Nosh(nosh)
 
     # Clean up Python structures
 
@@ -505,17 +615,21 @@
     delete_pbelist(pbe)
 
     # Clean up MALOC structures
-    #delete_Com(com)
-    #delete_Mem(mem)
+    # delete_Com(com)
+    # delete_Mem(mem)
     stdout.write("\n")
     stdout.write("Thanks for using APBS!\n\n")
 
     # Stop the main timer
     main_timer_stop = time.clock()
-    stdout.write("Total execution time:  %1.6e sec\n" % (main_timer_stop - main_timer_start))
+    stdout.write(
+        "Total execution time:  %1.6e sec\n"
+        % (main_timer_stop - main_timer_start)
+    )
 
     return energyList, potList, forceList
 
+
 if __name__ == "__main__":
 
     # Check invocation
@@ -523,7 +637,7 @@
     if len(sys.argv) != 1:
         stderr.write("main:  Called with %d arguments!\n" % len(sys.argv))
         stderr.write(getUsage())
-        raise APBSError, "Incorrect Usage!"
+        raise APBSError("Incorrect Usage!")
 
     energyList, potList, forceList = runAPBS(PQR, INPUT)
 
diff --new-file -ru apbs-3.0.0/tools/python/vgrid/average.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/average.py
--- apbs-3.0.0/tools/python/vgrid/average.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/average.py	2020-09-29 19:12:06.000000000 +0200
@@ -1,4 +1,9 @@
-from vgrid import *
+from . vgrid import (
+    startVio,
+    Vgrid_ctor,
+    Vgrid_readDX,
+    Vgrid_value,
+)
 import sys
 import math
 from sys import stdout, stderr
@@ -13,25 +18,29 @@
     Adaptive Poisson-Boltzmann Solver (APBS)\n\
     ----------------------------------------------------------------------\n\
     \n\n"
-    
 
-usage = "python[2] average.py file.dx\n";
+
+usage = "python[2] average.py file.dx\n"
+
 
 def main():
 
     # *************** CHECK INVOCATION *******************
-    
+
     startVio()
 
     if len(sys.argv) != 2:
-        stderr.write("\n*** Syntax error: got %d arguments, expected 2.\n\n" % len(sys.argv))
+        stderr.write(
+            "\n*** Syntax error: got %d arguments, expected 2.\n\n"
+            % len(sys.argv)
+        )
         stderr.write("%s\n" % usage)
         sys.exit(2)
 
     else:
         inpath = sys.argv[1]
 
-    # *************** APBS INITIALIZATION ******************* 
+    # *************** APBS INITIALIZATION *******************
 
     stdout.write(header)
     data = []
@@ -52,7 +61,9 @@
 
     stdout.write("#     nx = %d, ny = %d, nz = %d\n" % (nx, ny, nz))
     stdout.write("#     hx = %g, hy = %g, hz = %g\n" % (hx, hy, hzed))
-    stdout.write("#     xmin = %g, ymin = %g, zmin = %g\n" % (xmin, ymin, zmin))
+    stdout.write(
+        "#     xmin = %g, ymin = %g, zmin = %g\n" % (xmin, ymin, zmin)
+    )
     # *************** SETTINGS ********************
 
     xcentAVG = 112.160
@@ -60,28 +71,28 @@
     zcentAVG = 137.245
     xlenAVG = 70.0
     zlenAVG = 70.0
-    ylenAVG = hy*(ny-1)
+    ylenAVG = hy * (ny - 1)
 
     # *************** AVERAGE **********************
 
-    xminAVG = xcentAVG - 0.5*xlenAVG
-    xmaxAVG = xcentAVG + 0.5*xlenAVG
-    yminAVG = ycentAVG - 0.5*ylenAVG
-    ymaxAVG = ycentAVG + 0.5*ylenAVG
-    zminAVG = zcentAVG - 0.5*zlenAVG
-    zmaxAVG = zcentAVG + 0.5*zlenAVG
-    imin = int(math.floor((xminAVG - xmin)/hx))
+    xminAVG = xcentAVG - 0.5 * xlenAVG
+    xmaxAVG = xcentAVG + 0.5 * xlenAVG
+    yminAVG = ycentAVG - 0.5 * ylenAVG
+    ymaxAVG = ycentAVG + 0.5 * ylenAVG
+    zminAVG = zcentAVG - 0.5 * zlenAVG
+    zmaxAVG = zcentAVG + 0.5 * zlenAVG
+    imin = int(math.floor((xminAVG - xmin) / hx))
     imin = max(imin, 0)
-    jmin = int(math.floor((yminAVG - ymin)/hy))
+    jmin = int(math.floor((yminAVG - ymin) / hy))
     jmin = max(jmin, 0)
-    kmin = int(math.floor((zminAVG - zmin)/hzed))
+    kmin = int(math.floor((zminAVG - zmin) / hzed))
     kmin = max(kmin, 0)
-    imax = int(math.ceil((xmaxAVG - xmin)/hx))
-    imax = min(imax, nx-1)
-    jmax = int(math.ceil((ymaxAVG - ymin)/hy))
-    jmax = min(jmax, ny-1)
-    kmax = int(math.ceil((zmaxAVG - zmin)/hzed))
-    kmax = min(kmax, nz-1)
+    imax = int(math.ceil((xmaxAVG - xmin) / hx))
+    imax = min(imax, nx - 1)
+    jmax = int(math.ceil((ymaxAVG - ymin) / hy))
+    jmax = min(jmax, ny - 1)
+    kmax = int(math.ceil((zmaxAVG - zmin) / hzed))
+    kmax = min(kmax, nz - 1)
 
     stdout.write("#  \tY POS\t\tAVERAGE\n")
     for j in range(jmin, jmax):
@@ -89,7 +100,7 @@
         navg = 0
         for k in range(kmin, kmax):
             for i in range(imin, imax):
-                pt = [i,j,k]
+                pt = [i, j, k]
                 val = 0.0
                 ret, value = Vgrid_value(grid, pt, val)
                 if ret:
@@ -97,9 +108,11 @@
                     navg = navg + 1
 
         if navg != 0:
-            avg = avg/navg
-            stdout.write("   \t%e\t\t%e\n" % ((hy*j + ymin), avg))
+            avg = avg / navg
+            stdout.write("   \t%e\t\t%e\n" % ((hy * j + ymin), avg))
         else:
-            stdout.write("   \t%e\t\t%s\n" % ((hy*j + ymin), "nan"))
+            stdout.write("   \t%e\t\t%s\n" % ((hy * j + ymin), "nan"))
+
 
-if __name__ == "__main__": main()
+if __name__ == "__main__":
+    main()
diff --new-file -ru apbs-3.0.0/tools/python/vgrid/mergedx.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/mergedx.py
--- apbs-3.0.0/tools/python/vgrid/mergedx.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/mergedx.py	2020-09-29 19:12:06.000000000 +0200
@@ -1,4 +1,16 @@
-#!/usr/bin/python2 -O
+#!/usr/bin/python3 -O
+
+import sys
+import getopt
+from . vgrid import (
+    startVio,
+    Vgrid_ctor,
+    Vgrid_readDX,
+    Vgrid_value,
+    Vgrid_writeDX,
+    delete_vgrid,
+    null_array,
+)
 
 """
     mergedx.py - Python script for merging dx files
@@ -17,12 +29,8 @@
     Adaptive Poisson-Boltzmann Solver (APBS)\n\
     ----------------------------------------------------------------------\n\
     \n\n"
-    
-import string
-import sys
-import getopt
-from vgrid import *
-        
+
+
 def IJK(nx, ny, nz, i, j, k):
     """
         Translate a three dimensional point to
@@ -35,14 +43,15 @@
             i:     Specific gridpoint in x direction (int)
             j:     Specific gridpoint in y direction (int)
             k:     Specific gridpoint in z direction (int)
-            
+
         Returns
             value: The one dimensional value matching the
                    three dimensional point
     """
-    value = (k*nx*ny + j*nx + i)
+    value = k * nx * ny + j * nx + i
     return value
 
+
 def createGrid(inputpath, root):
     """
         Create the merged grid by use of an APBS input file and
@@ -55,15 +64,15 @@
         Returns
             mygrid:    The merged grid object (Vgrid)
     """
-    
+
     # Initialize some variables
-    
+
     myaccess = []
-    ofrac = [0,0,0]
-    pdime = [0,0,0]
-    dime =  [0,0,0]
-    fglen = [0,0,0]
-    glob =  [0,0,0]
+    ofrac = [0, 0, 0]
+    pdime = [0, 0, 0]
+    dime = [0, 0, 0]
+    fglen = [0, 0, 0]
+    glob = [0, 0, 0]
     mygrid = None
     mydata = None
 
@@ -72,9 +81,11 @@
     inputfile = open(inputpath)
     while 1:
         line = inputfile.readline()
-        if line == "": break
-        words = string.split(line)
-        if len(words) == 0: continue
+        if line == "":
+            break
+        words = line.split()
+        if len(words) == 0:
+            continue
         if words[0] == "ofrac":
             ofrac[0] = float(words[1])
             ofrac[1] = float(words[1])
@@ -93,15 +104,18 @@
             fglen[2] = float(words[3])
 
     inputfile.close()
-    
-    if pdime[0] == 1: ofrac[0] = 0
-    if pdime[1] == 1: ofrac[1] = 0
-    if pdime[2] == 1: ofrac[2] = 0
-    
-    glob[0] = pdime[0]*int(round(dime[0]/(1 + 2*ofrac[0])))
-    glob[1] = pdime[1]*int(round(dime[1]/(1 + 2*ofrac[1])))
-    glob[2] = pdime[2]*int(round(dime[2]/(1 + 2*ofrac[2])))
-     
+
+    if pdime[0] == 1:
+        ofrac[0] = 0
+    if pdime[1] == 1:
+        ofrac[1] = 0
+    if pdime[2] == 1:
+        ofrac[2] = 0
+
+    glob[0] = pdime[0] * int(round(dime[0] / (1 + 2 * ofrac[0])))
+    glob[1] = pdime[1] * int(round(dime[1] / (1 + 2 * ofrac[1])))
+    glob[2] = pdime[2] * int(round(dime[2] / (1 + 2 * ofrac[2])))
+
     size = pdime[0] * pdime[1] * pdime[2]
 
     myxmin = None
@@ -109,55 +123,67 @@
     myzmin = None
     myhx = None
     myhy = None
-    myhz = None
+    myhzed = None
     mydata = []
-    
+
     # Read each dx file
 
     for i in range(size):
         mins = []
-        for j in range(3): mins.append(None)
-        kp = int(i/(pdime[0]*pdime[1]))
-        jp = int((i - kp*pdime[0]*pdime[1])/pdime[0])
-        ip = i - kp*pdime[0]*pdime[1] - jp*pdime[0]
-        mins[0] = ip*glob[0]/pdime[0]
-        mins[1] = jp*glob[1]/pdime[1]
-        mins[2] = kp*glob[2]/pdime[2]
+        for j in range(3):
+            mins.append(None)
+        kp = int(i / (pdime[0] * pdime[1]))
+        jp = int((i - kp * pdime[0] * pdime[1]) / pdime[0])
+        ip = i - kp * pdime[0] * pdime[1] - jp * pdime[0]
+        mins[0] = ip * glob[0] / pdime[0]
+        mins[1] = jp * glob[1] / pdime[1]
+        mins[2] = kp * glob[2] / pdime[2]
 
-                
         filename = "%s%i.dx" % (root, i)
         try:
             file = open(filename)
             file.close()
         except IOError:
-            print "Unable to find file %s!" % filename
+            print(f"Unable to find file {filename}!")
             sys.exit()
 
         data = []
         grid = Vgrid_ctor(0, 0, 0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, data)
 
-        print "Reading dx file %s..." % filename
+        print(f"Reading dx file {filename}...")
         Vgrid_readDX(grid, "FILE", "ASC", "", filename)
-        grid.xmax = grid.xmin + grid.hx*(grid.nx - 1)
-        grid.ymax = grid.ymin + grid.hy*(grid.ny - 1)
-        grid.zmax = grid.zmin + grid.hzed*(grid.nz - 1)
-        
-        print "\tGrid dimensions: %i %i %i" % (grid.nx, grid.ny, grid.nz)
-        print "\tGrid spacing: %.5f %.5f %.5f" % (grid.hx, grid.hy, grid.hzed)
-        print "\tGrid lower corner: %.2f %.2f %.2f" % (grid.xmin, grid.ymin, grid.zmin)
-        print "\tGrid upper corner: %.2f %.2f %.2f" % (grid.xmax, grid.ymax, grid.zmax)
-        print "\tGlobal Gridpoint Minima: %i %i %i\n" % (mins[0], mins[1], mins[2])
+        grid.xmax = grid.xmin + grid.hx * (grid.nx - 1)
+        grid.ymax = grid.ymin + grid.hy * (grid.ny - 1)
+        grid.zmax = grid.zmin + grid.hzed * (grid.nz - 1)
+
+        print("\tGrid dimensions: %i %i %i" % (grid.nx, grid.ny, grid.nz))
+        print("\tGrid spacing: %.5f %.5f %.5f" % (grid.hx, grid.hy, grid.hzed))
+        print("\tGrid lower corner: %.2f %.2f %.2f" % (
+            grid.xmin,
+            grid.ymin,
+            grid.zmin,
+        ))
+        print("\tGrid upper corner: %.2f %.2f %.2f" % (
+            grid.xmax,
+            grid.ymax,
+            grid.zmax,
+        ))
+        print("\tGlobal Gridpoint Minima: %i %i %i\n" % (
+            mins[0],
+            mins[1],
+            mins[2],
+        ))
 
         # If this is the first processor, initialize the merged grid
 
-        if i == 0: # Initialize merged grid
-            myhx = fglen[0]/(glob[0] - 1)
-            myhy = fglen[1]/(glob[1] - 1)
-            myhzed = fglen[2]/(glob[2] - 1)
+        if i == 0:  # Initialize merged grid
+            myhx = fglen[0] / (glob[0] - 1)
+            myhy = fglen[1] / (glob[1] - 1)
+            myhzed = fglen[2] / (glob[2] - 1)
             myxmin = grid.xmin
             myymin = grid.ymin
-            myzmin = grid.zmin         
-            for j in range(glob[0]*glob[1]*glob[2]):
+            myzmin = grid.zmin
+            for j in range(glob[0] * glob[1] * glob[2]):
                 mydata.append(0.0)
                 myaccess.append(0)
 
@@ -165,41 +191,50 @@
 
         if ip == (pdime[0] - 1):
             if glob[0] != (mins[0] + grid.nx):
-                print "Error occurred - This grid does not line up globally!"
-                print "Global x-dim gridpoint size:   %i" % glob[0]
-                print "This grid's maximum gridpoint: %i" % (mins[0] + grid.nx)
+                print("Error occurred - This grid does not line up globally!")
+                print(f"Global x-dim gridpoint size:   {glob[0]}")
+                print(f"This grid's maximum gridpoint: {(mins[0] + grid.nx)}")
                 sys.exit()
         if jp == (pdime[1] - 1):
             if glob[1] != (mins[1] + grid.ny):
-                print "Error occurred - This grid does not line up globally!"
-                print "Global x-dim gridpoint size:   %i" % glob[1]
-                print "This grid's maximum gridpoint: %i" % (mins[1] + grid.ny)
+                print("Error occurred - This grid does not line up globally!")
+                print(f"Global x-dim gridpoint size:   {glob[1]}")
+                print(f"This grid's maximum gridpoint: {(mins[1] + grid.ny)}")
                 sys.exit()
         if kp == (pdime[2] - 1):
             if glob[2] != (mins[2] + grid.nz):
-                print "Error occurred - This grid does not line up globally!"
-                print "Global x-dim gridpoint size:   %i" % glob[2]
-                print "This grid's maximum gridpoint: %i" % (mins[2] + grid.nz)
+                print("Error occurred - This grid does not line up globally!")
+                print(f"Global x-dim gridpoint size:   {glob[2]}")
+                print(f"This grid's maximum gridpoint: {(mins[2] + grid.nz)}")
                 sys.exit()
-           
+
         # Now add this grid to the merged grid
-   
+
         for x in range(grid.nx):
-            ival = grid.xmin + x*grid.hx
+            ival = grid.xmin + x * grid.hx
             for y in range(grid.ny):
-                jval = grid.ymin + y*grid.hy
+                jval = grid.ymin + y * grid.hy
                 for z in range(grid.nz):
-                    kval = grid.zmin + z*grid.hzed
+                    kval = grid.zmin + z * grid.hzed
                     inval = 0.0
                     pt = [ival, jval, kval]
                     ret, value = Vgrid_value(grid, pt, inval)
                     if ret:
-                        location = IJK(glob[0], glob[1], glob[2], (x+mins[0]), (y+mins[1]), (z+mins[2]))
+                        location = IJK(
+                            glob[0],
+                            glob[1],
+                            glob[2],
+                            (x + mins[0]),
+                            (y + mins[1]),
+                            (z + mins[2]),
+                        )
                         myaccess[location] += 1
                         mydata[location] = value
                     else:
-                        print ival, jval, kval
-                        print "Could not find gridpoint %i %i %i in grid %s!" % (x,y,z, filename)
+                        print(f"ival:{ival}, jval:{jval}, kval:{kval}")
+                        msg = "Could not find gridpoint "
+                        msg += f"{x} {y} {z} in grid {filename}!"
+                        print(msg)
                         sys.exit()
 
         # Delete this grid object
@@ -208,26 +243,38 @@
 
     # Make sure all values of the grid were accessed
 
-    print "Ensuring all grid points were merged..."
+    print("Ensuring all grid points were merged...")
     for i in range(glob[0]):
         for j in range(glob[1]):
             for k in range(glob[2]):
                 location = IJK(glob[0], glob[1], glob[2], i, j, k)
                 if myaccess[location] == 0:
-                    print "Error: Found unaccessed gridpoint at %i %i %i!" % (i,j,k)
+                    print(f"Error: Found unaccessed gridpoint at {i} {j} {k}!")
                     sys.exit()
-                elif myaccess[location] > 1: #Pt. on multiple grids: Error!                    
-                    print "Error: Multiple grids attempted to access gridpoint %i %i %i in the global grid!" % (i,j,k)
+                elif myaccess[location] > 1:  # Pt. on multiple grids: Error!
+                    msg = "Error: Multiple grids attempted to access gridpoint"
+                    msg += f" {i} {j} {k} in the global grid!"
+                    print(msg)
                     sys.exit()
 
-                
     # Make the grid
-    
-    mygrid = Vgrid_ctor(glob[0], glob[1], glob[2], myhx, myhy, myhzed,
-                        myxmin, myymin, myzmin, mydata)
+
+    mygrid = Vgrid_ctor(
+        glob[0],
+        glob[1],
+        glob[2],
+        myhx,
+        myhy,
+        myhzed,
+        myxmin,
+        myymin,
+        myzmin,
+        mydata,
+    )
 
     return mygrid
-                
+
+
 def resampleGrid(grid, nx, ny, nz):
     """
         Resample the grid to a smaller (less-defined) resolution
@@ -242,56 +289,60 @@
             newgrid: The resampleed merged grid (Vgrid)
     """
 
-    print "Resampling the grid..."
-    
+    print("Resampling the grid...")
+
     # Ensure that the new grid size is smaller than the old grid size
-    
-    if (nx > grid.nx or ny > grid.ny or nz > grid.nz):
-        print "Error: User specified grid size (%i %i %i) is larger than " % (nx, ny, nz)
-        print "merged grid size (%i %i %i)!" % (grid.nx, grid.ny, grid.nz)
+
+    if nx > grid.nx or ny > grid.ny or nz > grid.nz:
+        print(f"Error: User specified grid size ({nx} {ny} {nz}) is larger ")
+        print(f"than merged grid size ({grid.nx} {grid.ny} {grid.nz})!")
         sys.exit()
 
     # Get new grid spacing, and create initialized grid
-    
+
     xmin = grid.xmin
     ymin = grid.ymin
-    zmin = grid.zmin  
-    xmax = grid.xmin + grid.hx*(grid.nx - 1)
-    ymax = grid.ymin + grid.hy*(grid.ny - 1)
-    zmax = grid.zmin + grid.hzed*(grid.nz - 1)
-    hxnew = (xmax - xmin)/(nx - 1)
-    hynew = (ymax - ymin)/(ny - 1)
-    hznew = (zmax - zmin)/(nz - 1)
+    zmin = grid.zmin
+    xmax = grid.xmin + grid.hx * (grid.nx - 1)
+    ymax = grid.ymin + grid.hy * (grid.ny - 1)
+    zmax = grid.zmin + grid.hzed * (grid.nz - 1)
+    hxnew = (xmax - xmin) / (nx - 1)
+    hynew = (ymax - ymin) / (ny - 1)
+    hznew = (zmax - zmin) / (nz - 1)
     mydata = []
-    for i in range(nx*ny*nz): mydata.append(0.0)
-    
+    for i in range(nx * ny * nz):
+        mydata.append(0.0)
+
     # Populate the new grid
 
     for x in range(nx):
-        ival = xmin + x*hxnew
+        ival = xmin + x * hxnew
         for y in range(ny):
-            jval = ymin + y*hynew
+            jval = ymin + y * hynew
             for z in range(nz):
-                kval = zmin + z*hznew
+                kval = zmin + z * hznew
                 pt = [ival, jval, kval]
                 inval = 0.0
                 ret, value = Vgrid_value(grid, pt, inval)
                 if ret:
-                    location = IJK(nx, ny, nz, x,y,z)
-                    if (value < VSMALL and value > 0): value = 0.0
+                    location = IJK(nx, ny, nz, x, y, z)
+                    if value < VSMALL and value > 0:
+                        value = 0.0
                     mydata[location] = value
                 else:
-                    print "Could not find gridpoint %i %i %i in grid %s!" % (x,y,z, filename)
+                    print(f"Could not find gridpoint {x} {y} {z} in grid!")
                     sys.exit()
 
     # Delete the old grid
     delete_vgrid(grid)
 
     # Make the new grid
-    newgrid = Vgrid_ctor(nx, ny, nz, hxnew, hynew, hznew,
-                         xmin, ymin, zmin, mydata)
+    newgrid = Vgrid_ctor(
+        nx, ny, nz, hxnew, hynew, hznew, xmin, ymin, zmin, mydata
+    )
     return newgrid
 
+
 def printGrid(mygrid, outpath):
     """
         Print the merged grid using the Vgrid_writeDX command
@@ -300,63 +351,67 @@
             mygrid:  The merged grid (Vgrid)
             outpath: The output path for the new .dx file (string)
     """
-    print "Writing output to %s..." % outpath
+    print(f"Writing output to {outpath}...")
     title = "Merged Grid from mergedx.py"
-    Vgrid_writeDX(mygrid, "FILE", "ASC", "", outpath,title, null_array());
-   
+    Vgrid_writeDX(mygrid, "FILE", "ASC", "", outpath, title, null_array())
+
+
 def usage():
     """
         Print usage information
     """
-    str = "%s" % HEADER
-    str = str + "mergedx.py\n"
-    str = str + "\n"
-    str = str + "This module merges multiple dx files generated from parallel\n"
-    str = str + "APBS runs into one merged dx file. Users may also resample the\n"
-    str = str + "grid size if desired.  Default output is written to mergedgrid.dx\n"
-    str = str + "\n"
-    str = str + "Usage: mergedx.py [options] <input-file> <dx-stem>\n"
-    str = str + "\n"
-    str = str + "    Required Arguments:\n"
-    str = str + "        <input-file>   : The path to an APBS input file used to\n"
-    str = str + "                         generate the dx file.  If the APBS run was\n"
-    str = str + "                         asynchronous, any of the input files may be used\n"
-    str = str + "        <dx-stem>      : The stem of the dx filenames.  This script will\n"
-    str = str + "                         add the digit and the .dx extension -  note that\n"
-    str = str + "                         the dx files MUST be trailed by the form *.dx\n"
-    str = str + "\n"
-    str = str + "                         Example: given dx files 2PHKB-PE0.dx and 2PHKB-PE1.dx,\n"
-    str = str + "                                  the stem would be 2PHKB-PE\n"
-    str = str + "\n"
-    str = str + "   Optional Arguments:\n"
-    str = str + "        --help   (-h)  : Display the usage information\n"
-    str = str + "        --out=<outpath>: Save merged dx file into filename <outpath>\n"
-    str = str + "        --nx=<xsize>   : Resample to the <xsize> gridpoints in the x direction\n"
-    str = str + "        --ny=<ysize>   : Resample to the <ysize> gridpoints in the z direction\n"
-    str = str + "        --nz=<zsize>   : Resample to the <zsize> gridpoints in the z direction\n"
-    str = str + "                         Note: If resampling, nx, ny, and nz all must be specified.\n"
-    str = str + "\n"
-    sys.stderr.write(str)
+    val = f"{HEADER}"
+    val += """
+mergedx.py
+
+This module merges multiple dx files generated from parallel
+APBS runs into one merged dx file. Users may also resample the
+grid size if desired.  Default output is written to mergedgrid.dx
+Usage: mergedx.py [options] <input-file> <dx-stem>
+
+    Required Arguments:
+        <input-file>   : The path to an APBS input file used to
+                         generate the dx file.  If the APBS run was
+                         asynchronous, any of the input files may be used
+        <dx-stem>      : The stem of the dx filenames.  This script will
+                         add the digit and the .dx extension -  note that
+                         the dx files MUST be trailed by the form *.dx
+
+                         Example: given dx files 2PHKB-PE0.dx and 2PHKB-PE1.dx,
+                                  the stem would be 2PHKB-PE
+
+   Optional Arguments:
+        --help   (-h)  : Display the usage information
+        --out=<outpath>: Save merged dx file into filename <outpath>
+        --nx=<xsize>   : Resample to the <xsize> gridpoints in the x direction
+        --ny=<ysize>   : Resample to the <ysize> gridpoints in the z direction
+        --nz=<zsize>   : Resample to the <zsize> gridpoints in the z direction
+                         Note: If resampling, nx, ny, and nz all must be
+                         specified.
+"""
+    sys.stderr.write(val)
     sys.exit()
-    
+
+
 def main():
     """
         The main driver for the mergedx script
     """
     shortOptlist = "h"
-    longOptlist = ["help","out=","nx=","ny=","nz="]
-    try: opts, args = getopt.getopt(sys.argv[1:], shortOptlist, longOptlist)
-    except getopt.GetoptError, details:
-        sys.stderr.write("GetoptError:  %s\n" % details)
+    longOptlist = ["help", "out=", "nx=", "ny=", "nz="]
+    try:
+        opts, args = getopt.getopt(sys.argv[1:], shortOptlist, longOptlist)
+    except getopt.GetoptError as details:
+        sys.stderr.write(f"GetoptError:  {details}\n")
         usage()
-  
+
     outpath = OUT
     nx = None
     ny = None
     nz = None
     resample = 0
-    for o,a in opts:
-        if o in ("-h","--help"):
+    for o, a in opts:
+        if o in ("-h", "--help"):
             usage()
             sys.exit()
         elif o == "--out":
@@ -367,36 +422,40 @@
             ny = int(a)
         elif o == "--nz":
             nz = int(a)
- 
-    if (nx != None and ny != None and nz != None):
+
+    if nx is not None and ny is not None and nz is not None:
         resample = 1
-    elif (nx == None and ny == None and nz == None):
+    elif nx is None and ny is None and nz is None:
         pass
     else:
-        print "\nYou must enter either none or all values for nx, ny, and nz!"
+        print("\nYou must enter either none or all values for nx, ny, and nz!")
         usage()
         sys.exit()
-            
+
     argid = 1
-    if outpath != OUT: argid += 1
-    if resample == 1: argid += 3
+    if outpath != OUT:
+        argid += 1
+    if resample == 1:
+        argid += 3
 
     try:
         inputpath = sys.argv[argid]
         root = sys.argv[argid + 1]
     except IndexError:
-        print "\nImproper number of arguments!"
+        print("\nImproper number of arguments!")
         usage()
         sys.exit()
-        
+
     startVio()
 
     mygrid = createGrid(inputpath, root)
     if resample:
-        mygrid = resampleGrid(mygrid,nx,ny,nz)
+        mygrid = resampleGrid(mygrid, nx, ny, nz)
     printGrid(mygrid, outpath)
 
     # If we're outputting back to stdout, delete the grid
     delete_vgrid(mygrid)
-    
-if __name__ == "__main__": main()
+
+
+if __name__ == "__main__":
+    main()
diff --new-file -ru apbs-3.0.0/tools/python/vgrid/read.py apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/read.py
--- apbs-3.0.0/tools/python/vgrid/read.py	2020-05-30 03:47:30.000000000 +0200
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python/vgrid/read.py	2020-09-29 19:12:06.000000000 +0200
@@ -1,4 +1,10 @@
-from vgrid import *
+from . vgrid import (
+    startVio,
+    Vgrid_ctor,
+    Vgrid_readDX,
+    Vgrid_value,
+    Vgrid_gradient,
+)
 import sys
 from sys import stdout, stderr
 
@@ -11,21 +17,25 @@
     Adaptive Poisson-Boltzmann Solver (APBS)\n\
     ----------------------------------------------------------------------\n\
     \n\n"
-    
-usage = "python[2] read.py file.dx\n";
+
+usage = "python[2] read.py file.dx\n"
 
 NMAX = 5
 
+
 def main():
 
     inpath = ""
     value = 0.0
     data = []
-    
+
     startVio()
 
     if len(sys.argv) != 2:
-        stderr.write("\n*** Syntax error: got %d arguments, expected 2.\n\n" % len(sys.argv))
+        stderr.write(
+            "\n*** Syntax error: got %d arguments, expected 2.\n\n"
+            % len(sys.argv)
+        )
         stderr.write("%s\n" % usage)
         sys.exit(2)
 
@@ -49,7 +59,9 @@
 
     stdout.write("main:     nx = %d, ny = %d, nz = %d\n" % (nx, ny, nz))
     stdout.write("main:     hx = %g, hy = %g, hz = %g\n" % (hx, hy, hzed))
-    stdout.write("main:     xmin = %g, ymin = %g, zmin = %g\n" % (xmin, ymin, zmin))
+    stdout.write(
+        "main:     xmin = %g, ymin = %g, zmin = %g\n" % (xmin, ymin, zmin)
+    )
 
     # Read off some values
 
@@ -57,27 +69,38 @@
 
     for i in range(nx):
         inval = 0.0
-        pt = [xmin + i*hx, ymin + 0.5*(ny-1)*hy, zmin + 0.5*(nz-1)*hzed]
+        pt = [
+            xmin + i * hx,
+            ymin + 0.5 * (ny - 1) * hy,
+            zmin + 0.5 * (nz - 1) * hzed,
+        ]
         ret, value = Vgrid_value(grid, pt, inval)
         if ret:
-            stdout.write("main: u(%g, %g, %g) = %g\n" % (pt[0], pt[1], pt[2], value))
+            stdout.write(
+                "main: u(%g, %g, %g) = %g\n" % (pt[0], pt[1], pt[2], value)
+            )
 
     # Integrate
 
     stdout.write("main:  Integrating...\n")
     sum = 0
+    pt = 0
     for i in range(nx):
         for j in range(ny):
             for k in range(nz):
                 inval = 0.0
-                pt = [xmin + i*hx, ymin + j*hy, zmin + k*hzed]
+                pt = [xmin + i * hx, ymin + j * hy, zmin + k * hzed]
                 ret, value = Vgrid_value(grid, pt, inval)
                 if ret:
                     sum = sum + value
-    
-    stdout.write("main:  Integral over grid = %1.12E\n" % (sum*hx*hy*hzed))
 
-    grad = [0.0,0.0,0.0]
+    stdout.write(
+        "main:  Integral over grid = %1.12E\n" % (sum * hx * hy * hzed)
+    )
+
+    grad = [0.0, 0.0, 0.0]
     Vgrid_gradient(grid, pt, grad)
 
-if __name__ == "__main__": main()
+
+if __name__ == "__main__":
+    main()
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_constants.hpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_constants.hpp
--- apbs-3.0.0/tools/python-pybind/bind_constants.hpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_constants.hpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,22 @@
+#pragma once
+
+/**
+ * @file tools/python-pybind/bind_constants.hpp
+ * @author Asher Mancinelli <asher.mancinelli@pnnl.gov>
+ * @brief Contains bindings for exported constants.
+ *
+ * @note The constants exported here were simply the same ones exported by the
+ * original SWIG python interface.
+ *
+ * @see tools/python/apbslib.c
+ */
+
+inline void bind_constants(py::module& m)
+{
+  m.attr("NPT_ENERGY") 		    = py::int_(static_cast<int>(NPT_ENERGY));
+  m.attr("NPT_FORCE") 		    = py::int_(static_cast<int>(NPT_FORCE));
+  m.attr("NPT_ELECENERGY") 		= py::int_(static_cast<int>(NPT_ELECENERGY));
+  m.attr("NPT_ELECFORCE") 		= py::int_(static_cast<int>(NPT_ELECFORCE));
+  m.attr("NPT_APOLENERGY") 		= py::int_(static_cast<int>(NPT_APOLENERGY));
+  m.attr("NPT_APOLFORCE") 		= py::int_(static_cast<int>(NPT_APOLFORCE));
+}
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_nosh.cpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_nosh.cpp
--- apbs-3.0.0/tools/python-pybind/bind_nosh.cpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_nosh.cpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,121 @@
+#include "bind_nosh.hpp"
+#include "bind_valist.hpp"
+
+int parseInputFromString(NOsh *nosh, std::string str)
+{
+  int ret, bufsize;
+  Vio *sock;
+
+  startVio();
+
+  VASSERT( bufsize <= VMAX_BUFSIZE );
+  sock = Vio_ctor("BUFF","ASC",VNULL,"0","r");
+
+  Vio_bufTake(sock, const_cast<char*>(str.c_str()), str.size());
+
+  ret = NOsh_parseInput(nosh, sock); 
+  sock->VIObuffer = VNULL;
+  Vio_dtor(&sock);
+  return ret;
+}
+
+void bind_nosh(py::module& m)
+{
+  m.def("getPotentials", &getPotentials<double>);
+
+  py::enum_<NOsh_MolFormat>(m, "NOsh_MolFormat").export_values();
+  py::enum_<NOsh_CalcType>(m, "NOsh_CalcType").export_values();
+  py::enum_<NOsh_ParmFormat>(m, "NOsh_ParmFormat").export_values();
+  py::enum_<NOsh_PrintType>(m, "NOsh_PrintType").export_values();
+
+  py::class_<NOsh_calc>(m, "NOsh_calc")
+    .def(py::init(
+        [] (NOsh_CalcType calcType)
+        {
+          return std::unique_ptr<NOsh_calc>(NOsh_calc_ctor(calcType));
+        }))
+    .def("NOsh_calc_mgparm_set",
+        [] (NOsh_calc& nosh, MGparm& mgparm)
+        {
+          nosh.mgparm = &mgparm;
+        })
+    .def("__del__",
+        [] (NOsh_calc* self)
+        {
+          NOsh_calc_dtor(&self);
+        })
+    .def_readwrite("mgparm", &NOsh_calc::mgparm)
+    .def_readwrite("femparm", &NOsh_calc::femparm)
+    .def_readwrite("bemparm", &NOsh_calc::bemparm)
+    .def_readwrite("geoflowparm", &NOsh_calc::geoflowparm)
+    .def_readwrite("pbamparm", &NOsh_calc::pbamparm)
+    .def_readwrite("pbsamparm", &NOsh_calc::pbsamparm)
+    .def_readwrite("pbeparm", &NOsh_calc::pbeparm)
+    .def_readwrite("apolparm", &sNOsh_calc::apolparm)
+    .def_readwrite("calctype", &sNOsh_calc::calctype);
+
+  py::class_<NOsh>(m, "NOsh")
+    .def(py::init<>())
+    .def("parseInputFromString",
+        [] (NOsh& self, std::string str) -> int
+        {
+          int ret, bufsize;
+          Vio *sock;
+
+          startVio();
+
+          VASSERT( bufsize <= VMAX_BUFSIZE );
+          sock = Vio_ctor("BUFF","ASC",VNULL,"0","r");
+
+          Vio_bufTake(sock, const_cast<char*>(str.c_str()), str.size());
+
+          ret = NOsh_parseInput(&self, sock); 
+          sock->VIObuffer = VNULL;
+          Vio_dtor(&sock);
+          return ret;
+        })
+    .def("__del__",
+        [] (NOsh* self)
+        {
+          NOsh_dtor(&self);
+        })
+    .def("getMolpath"    , [] (NOsh& thee, int imol)  
+        { return std::string(NOsh_getMolpath(&thee, imol));    })
+    .def("getDielXpath"  , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getDielXpath(&thee, imap));  })
+    .def("getDielYpath"  , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getDielYpath(&thee, imap));  })
+    .def("getDielZpath"  , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getDielZpath(&thee, imap));  })
+    .def("getKappapath"  , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getKappapath(&thee, imap));  })
+    .def("getPotpath"    , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getPotpath(&thee, imap));    })
+    .def("getChargepath" , [] (NOsh& thee, int imap)  
+        { return std::string(NOsh_getChargepath(&thee, imap)); })
+    .def("elecname"      , [] (NOsh& thee, int ielec) 
+        { return std::string(NOsh_elecname(&thee, ielec));     })
+    .def("getDielfmt"		 , &NOsh_getDielfmt)
+    .def("getKappafmt"	 , &NOsh_getKappafmt)
+    .def("getPotfmt"		 , &NOsh_getPotfmt)
+    .def("getChargefmt"	 , &NOsh_getChargefmt)
+    .def("elec2calc"		 , &NOsh_elec2calc)
+    .def("apol2calc"		 , &NOsh_apol2calc)
+    .def("printNarg"		 , &NOsh_printNarg)
+    .def("printOp"			 , &NOsh_printOp)
+    .def("printCalc"		 , &NOsh_printCalc)
+    .def("getCalc"       , &NOsh_getCalc)
+    .def("printWhat"     , &NOsh_printWhat)
+    .def("parseInput"    , &NOsh_parseInput)
+    .def("parseInputFile", &NOsh_parseInputFile)
+    // These two are wrappers to use std::vector for easier conversion 
+    // between python lists and C arrays
+    .def("setupElecCalc" , [] (NOsh& thee, std::vector<Valist*> alist)
+        {
+          NOsh_setupElecCalc(&thee, alist.data());
+        })
+    .def("setupApolCalc" , [] (NOsh& thee, std::vector<Valist*> alist)
+        {
+          NOsh_setupApolCalc(&thee, alist.data());
+        });
+}
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_nosh.hpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_nosh.hpp
--- apbs-3.0.0/tools/python-pybind/bind_nosh.hpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_nosh.hpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,77 @@
+#pragma once
+
+#include <string>
+#include <vector>
+#include <optional>
+#include <stdexcept>
+
+#include <pybind11/pybind11.h>
+#include <pybind11/stl.h>
+namespace py = pybind11;
+
+#ifdef __GNUC__
+#pragma GCC diagnostic ignored "-Wunused-function"
+#endif
+extern "C"
+{
+#include "apbscfg.h" 
+#include "routines.h"
+#include "generic/nosh.h"
+}
+
+/**
+ * @file tools/python-pybind/bind_nosh.hpp
+ * @author Asher Mancinelli <asher.mancinelli@pnnl.gov>
+ * @brief Contains bindings for nosh-related functions.
+ *
+ * @note keep all implementations in the impl unless templated.
+ * @note contains bindings for nosh and all classes encapsulated by this struct
+ * within the source.
+ *
+ * @see src/generic/nosh.h:195
+ */
+
+/**
+ * @todo request help documenting
+ */
+template<typename T>
+std::vector<T> getPotentials(NOsh *nosh, PBEparm *pbeparm, Vpmg *pmg, Valist *alist)
+{
+    Vgrid *grid;
+    Vatom *atom; 
+    int i, nx, ny, nz;
+    double hx, hy, hzed, xcent, ycent, zcent, xmin, ymin, zmin;
+    double value;
+    double *position;
+    std::vector<T> values;
+    
+    nx = pmg->pmgp->nx;
+    ny = pmg->pmgp->ny;
+    nz = pmg->pmgp->nz;
+    hx = pmg->pmgp->hx;
+    hy = pmg->pmgp->hy;
+    hzed = pmg->pmgp->hzed;
+    xcent = pmg->pmgp->xcent;
+    ycent = pmg->pmgp->ycent;
+    zcent = pmg->pmgp->zcent;
+    xmin = xcent - 0.5*(nx-1)*hx;
+    ymin = ycent - 0.5*(ny-1)*hy;
+    zmin = zcent - 0.5*(nz-1)*hzed;
+   
+    Vpmg_fillArray(pmg, pmg->rwork, VDT_POT, 0.0, pbeparm->pbetype, pbeparm);
+    grid = Vgrid_ctor(nx, ny, nz, hx, hy, hzed, xmin, ymin, zmin,
+                  pmg->rwork);
+    for (i=0;i<Valist_getNumberAtoms(alist);i++){
+        atom = Valist_getAtom(alist, i);
+        position = Vatom_getPosition(atom); 
+        Vgrid_value(grid, position, &value);
+        values[i] = value;
+    } 
+    Vgrid_dtor(&grid);    
+    return values;
+}
+
+/**
+ * @brief Perform binding to module
+ */
+void bind_nosh(py::module& m);
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_valist.cpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_valist.cpp
--- apbs-3.0.0/tools/python-pybind/bind_valist.cpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_valist.cpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,97 @@
+#include "bind_valist.hpp"
+
+void Valist_load(Valist *self,
+                 int size,
+                 std::vector<double> x,
+                 std::vector<double> y,
+                 std::vector<double> z,
+                 std::vector<double> chg,
+                 std::vector<double> rad)
+{
+
+  int i, j;
+  double pos[3];
+
+  Vatom *atom;
+
+  VASSERT(self != VNULL);
+
+  self->atoms = static_cast<Vatom*>(Vmem_malloc(self->vmem, size, sizeof(Vatom)));
+  self->number = size;
+  for (i = 0; i < size; i++) {
+    pos[0] = x[i];
+    pos[1] = y[i];
+    pos[2] = z[i];
+    Vatom_setCharge(&(self->atoms[i]), chg[i]);
+    Vatom_setRadius(&(self->atoms[i]), rad[i]);
+    Vatom_setPosition(&(self->atoms[i]), pos);
+    Vatom_setAtomID(&(self->atoms[i]), i);
+  }
+
+  self->center[0] = 0.0;
+  self->center[1] = 0.0;
+  self->center[2] = 0.0;
+  self->maxrad = 0.0;
+  self->charge = 0.0;
+
+  /* Reset stat variables */
+  atom = &(self->atoms[0]);
+  for (i = 0; i < 3; i++) {
+    self->maxcrd[i] = self->mincrd[i] = atom->position[i];
+  }
+  self->maxrad = atom->radius;
+
+  for (i = 0; i < self->number; i++) {
+    atom = &(self->atoms[i]);
+    for (j = 0; j < 3; j++) {
+      if (atom->position[j] < self->mincrd[j])
+        self->mincrd[j] = atom->position[j];
+      if (atom->position[j] > self->maxcrd[j])
+        self->maxcrd[j] = atom->position[j];
+    }
+    if (atom->radius > self->maxrad) self->maxrad = atom->radius;
+    self->charge = self->charge + atom->charge;
+  }
+
+  self->center[0] = 0.5 * (self->maxcrd[0] + self->mincrd[0]);
+  self->center[1] = 0.5 * (self->maxcrd[1] + self->mincrd[1]);
+  self->center[2] = 0.5 * (self->maxcrd[2] + self->mincrd[2]);
+}
+
+/**
+ * @brief Class to bind sValist to C++ STL types for better interfacing
+ * with python.
+ */
+struct Valist_glue : public Valist
+{
+  std::array<double, 3> center;   /**< Molecule center (xmin - xmax)/2, etc.*/
+  std::array<double, 3> mincrd;   /**< Minimum coordinates */
+  std::array<double, 3> maxcrd;   /**< Maximum coordinates */
+  std::vector<Vatom> vatoms;       /**< Atom list */
+};
+
+void bind_valist(py::module &m)
+{
+  py::class_<Valist_glue>(m, "Valist")
+    .def(py::init<>())
+    .def("__del__", [](Valist* self) { Valist_dtor(&self); })
+    .def("load", &Valist_load)
+    .def("getAtomList"    , &Valist_getAtomList)
+    .def("getCenterX"     , &Valist_getCenterX)
+    .def("getCenterY"     , &Valist_getCenterY)
+    .def("getCenterZ"     , &Valist_getCenterZ)
+    .def("getNumberAtoms" , &Valist_getNumberAtoms)
+    .def("getAtom"        , &Valist_getAtom)
+    .def("memChk"         , &Valist_memChk)
+    .def("readPQR"        , &Valist_readPQR)
+    .def("readPDB"        , &Valist_readPDB)
+    .def("readXML"        , &Valist_readXML)
+    .def_readwrite("number"     , &Valist::number)
+    .def_readwrite("center"     , &Valist_glue::center)
+    .def_readwrite("mincrd"     , &Valist_glue::mincrd)
+    .def_readwrite("maxcrd"     , &Valist_glue::maxcrd)
+    .def_readwrite("maxrad"     , &Valist::maxrad)
+    .def_readwrite("charge"     , &Valist::charge)
+    .def_readwrite("vatoms"     , &Valist_glue::vatoms)
+    .def_readwrite("vmem"       , &Valist::vmem);
+}
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_valist.hpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_valist.hpp
--- apbs-3.0.0/tools/python-pybind/bind_valist.hpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_valist.hpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,44 @@
+#pragma once
+
+#include <vector>
+
+#include <pybind11/pybind11.h>
+#include <pybind11/stl.h>
+namespace py = pybind11;
+
+#ifdef __GNUC__
+#pragma GCC diagnostic ignored "-Wunused-function"
+#endif
+extern "C"
+{
+#include "apbscfg.h" 
+#include "generic/valist.h"
+}
+
+/**
+ * @file tools/python-pybind/bind_valist.hpp
+ * @author Asher Mancinelli <asher.mancinelli@pnnl.gov>
+ * @brief Contains bindings for Valist-related functions.
+ *
+ * @note keep all implementations in the impl unless templated.
+ * @note contains bindings for nosh and all classes encapsulated by this struct
+ * within the source.
+ *
+ * @see src/generic/valist.h:195
+ */
+
+/**
+ * @todo request documentation for this
+ */
+void Valist_load(Valist *self,
+                 int size,
+                 std::vector<double> x,
+                 std::vector<double> y,
+                 std::vector<double> z,
+                 std::vector<double> chg,
+                 std::vector<double> rad);
+
+/**
+ * @brief Perform binding to module
+ */
+void bind_valist(py::module& m);
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_vatom.cpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_vatom.cpp
--- apbs-3.0.0/tools/python-pybind/bind_vatom.cpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_vatom.cpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,64 @@
+#include "bind_vatom.hpp"
+#include <cstdio>
+#include <pybind11/stl.h>
+#include <pybind11/numpy.h>
+
+void bind_vatom(py::module& m)
+{
+  py::class_<sVatom>(m, "Vatom")
+    .def(py::init<>())
+#ifdef WITH_TINKER
+    .def("setInducedDipole"  , &Vatom_setInducedDipole)
+    .def("setNLInducedDipole", &Vatom_setNLInducedDipole)
+    .def("setDipole"         , &Vatom_setDipole)
+    .def("setQuadrupole"     , &Vatom_setQuadrupole)
+    .def("getDipole"         , &Vatom_getDipole)
+    .def("getQuadrupole"     , &Vatom_getQuadrupole)
+    .def("getInducedDipole"  , &Vatom_getInducedDipole)
+    .def("getNLInducedDipole", &Vatom_getNLInducedDipole)
+    .def_readwrite("dipole"			     , &sVatom::dipole)  /**< Permanent dipole */
+    .def_readwrite("quadrupole"		   , &sVatom::quadrupole)  /**< Permanent quadrupole */
+    .def_readwrite("inducedDipole"	 , &sVatom::inducedDipole)   /**< Induced dipole */
+    .def_readwrite("nlInducedDipole" , &sVatom::nlInducedDipole)	  /**< Non-local induced dipole */
+#endif
+    .def("copyTo"            , &Vatom_copyTo)
+    .def("copyFrom"          , &Vatom_copyFrom)
+    .def_readwrite("radius"  , &sVatom::radius)
+    .def_readwrite("charge"  , &sVatom::charge)
+    .def_readwrite("partID"  , &sVatom::partID)
+    .def_readwrite("epsilon" , &sVatom::epsilon)
+    .def_readwrite("id"      , &sVatom::id)
+    .def_property("position",
+        [] (sVatom& self)
+        {
+          return std::vector<double>(self.position, self.position+3);
+        },
+        [] (sVatom& self, py::array_t<double> other)
+        {
+          py::buffer_info buf = other.request();
+          assert(buf.ndim == 1 && "Vatom::position is 1D!");
+          assert(other.size() == 3 && "Vatom::position has length 3!");
+          auto* ptr = static_cast<double*>(buf.ptr);
+          for(int i=0;i<3;i++) self.position[i] = ptr[i];
+        })
+    .def_property("atomName",
+        &Vatom_getAtomName,
+        [] (sVatom& self, std::string other)
+        {
+          for(int i=0;i<VMAX_RECLEN;i++)
+          {
+            if(other.c_str()[i]=='\0') break;
+            self.atomName[i] = other.c_str()[i];
+          }
+        })
+    .def_property("resName",
+        &Vatom_getResName,
+        [] (sVatom& self, std::string other)
+        {
+          for(int i=0;i<VMAX_RECLEN;i++)
+          {
+            if(other.c_str()[i]=='\0') break;
+            self.resName[i] = other.c_str()[i];
+          }
+        });
+}
diff --new-file -ru apbs-3.0.0/tools/python-pybind/bind_vatom.hpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_vatom.hpp
--- apbs-3.0.0/tools/python-pybind/bind_vatom.hpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/bind_vatom.hpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,33 @@
+#pragma once
+
+#include <string>
+#include <vector>
+#include <array>
+
+#include <pybind11/pybind11.h>
+namespace py = pybind11;
+
+#ifdef __GNUC__
+#pragma GCC diagnostic ignored "-Wunused-function"
+#endif
+extern "C"
+{
+#include "generic/vatom.h"
+}
+
+/**
+ * @file tools/python-pybind/bind_valist.hpp
+ * @author Asher Mancinelli <asher.mancinelli@pnnl.gov>
+ * @brief Contains bindings for Valist-related functions.
+ *
+ * @note keep all implementations in the impl unless templated.
+ * @note contains bindings for nosh and all classes encapsulated by this struct
+ * within the source.
+ *
+ * @see src/generic/valist.h:195
+ */
+
+/**
+ * @brief Perform binding of _Vatom_ to module
+ */
+void bind_vatom(py::module& m);
diff --new-file -ru apbs-3.0.0/tools/python-pybind/CMakeLists.txt apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/CMakeLists.txt
--- apbs-3.0.0/tools/python-pybind/CMakeLists.txt	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/CMakeLists.txt	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,28 @@
+
+find_package(pybind11 REQUIRED)
+add_library(apbs_pybind
+  MODULE
+  module.cpp
+  bind_nosh.cpp
+  bind_vatom.cpp
+  bind_valist.cpp
+  )
+
+set_target_properties(apbs_pybind
+  PROPERTIES
+  PREFIX "${PYTHON_MODULE_PREFIX}"
+  SUFFIX "${PYTHON_MODULE_EXTENSION}"
+  OUTPUT_NAME "apbs"
+  )
+
+message(STATUS "LIBS ${APBS_LIBS}")
+message(STATUS "INTERNAL_LIBS ${APBS_INTERNAL_LIBS}")
+target_link_libraries(
+  apbs_pybind
+  PRIVATE
+  pybind11::module
+  ${APBS_LIBS}
+  ${APBS_INTERNAL_LIBS}
+  )
+
+install(TARGETS apbs_pybind LIBRARY DESTINATION lib)
diff --new-file -ru apbs-3.0.0/tools/python-pybind/module.cpp apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/module.cpp
--- apbs-3.0.0/tools/python-pybind/module.cpp	1970-01-01 01:00:00.000000000 +0100
+++ apbs-5eafd6af9c16fb280ddf6e3092d029c0bf71d21e/tools/python-pybind/module.cpp	2020-09-29 19:12:06.000000000 +0200
@@ -0,0 +1,41 @@
+#include <pybind11/pybind11.h>
+
+#ifdef __GNUC__
+#pragma GCC diagnostic ignored "-Wunused-function"
+#endif
+#include "bind_nosh.hpp"
+#include "bind_vatom.hpp"
+#include "bind_valist.hpp"
+#include "bind_constants.hpp"
+
+/**
+ * @file tools/python-pybind/module.cpp
+ * @author Asher Mancinelli <asher.mancinelli@pnnl.gov>
+ *
+ * @brief Creates python module and passes to each binding function.
+ *
+ * @note Keep all binding functions in their own header/impl pair. No raw
+ * functions or binding should live in this file; this is for creating the
+ * module and passing to binding functions only.
+ */
+
+namespace py = pybind11;
+
+PYBIND11_MODULE(apbs, m) {
+  m.doc() = R"pbdoc(APBS Python Bindings
+
+    .. note:: When the C code would return an int to represent an error code, these
+      bindings will return a `None` value. For example,
+
+    .. code:: python
+
+      from apbs import NOsh
+      nosh = NOsh()
+
+    )pbdoc";
+
+  bind_valist(m);
+  bind_nosh(m);
+  bind_vatom(m);
+  bind_constants(m);
+}
