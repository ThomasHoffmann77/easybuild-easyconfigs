easyblock = 'ConfigureMake'

name = 'IMOD'
version = '4.12.17'
versionsuffix = '-CUDA-%(cudaver)s'

homepage = 'https://bio3d.colorado.edu/imod/'
description = """IMOD is a set of image processing, modeling and display
programs used for tomographic reconstruction and for 3D reconstruction of EM
serial sections and optical sections. The package contains tools for assembling
and aligning data within multiple types and sizes of image stacks, viewing 3-D
data from any orientation, and modeling and display of the image files. IMOD
was developed primarily by David Mastronarde, Rick Gaudette, Sue Held, Jim
Kremer, Quanren Xiong, and John Heumann at the University of Colorado."""

toolchain = {'name': 'foss', 'version': '2022a'}
toolchainopts = {'pic': True}  # openmp leads to segfault with xftoxg tool

# download manually from mercurial repository and create source tarball:
# hg clone --debug http://bio3d.colorado.edu/imod/nightlyBuilds/IMOD
# get lunch 
# cd IMOD
# hg update -r IMOD_4-12-17
# cd ..
# tar czf IMOD-4.12.17.tar.gz IMOD
source_urls = ['http://two.embl.de']
sources = [SOURCE_TAR_GZ]
patches = [
    'IMOD-4.11.12_hdf1.12.patch',
    'IMOD-4.12.17_tiltalign_include.patch',
    'IMOD-4.12.17_pipImport.patch',
]
checksums = [
    None,  # can't include a valid checksum for source tarball, since it has to be created manually
    # IMOD-4.11.12_hdf1.12.patch
    '19e5bff97b997c600f157dd56eddae96a7f34fef528e7f40e76ea8e19144810e',
    # IMOD-4.12.17_tiltalign_include.patch
    '998c01a4f78b0d48dbffc530fcb12faaa892b1d322bce4f1643df20799845ab7',
    # IMOD-4.12.17_pipImport.patch
    '12b431e137810a2b4174bf7ccce32efcfb4bb51153564b7934557bdcf0fbb8f6',
]

# can't include a valid checksum, since tarball has to be created manually
dependencies = [
    ('LibTIFF', '4.3.0'),
    ('Qt5', '5.15.5'),
    ('Java', '11', '', SYSTEM),
    ('HDF5', '1.12.2'),
    ('Python', '3.10.4'),
    ('libGLU', '9.0.2'),
    ('tcsh', '6.24.01'),
    ('CUDA', '11.7.0', '', SYSTEM),
    ('UCX-CUDA', '1.12.1', versionsuffix),
]

# parallel build sometimes fails
parallel = 1

# replace hardcoded CUDA compute capabilitites in machines/rhlinux. 
_cuda_replace = 'echo %(cuda_cc_space_sep)s|sed "s/\\.//g"|'
_cuda_replace += '   awk \'{'
_cuda_replace += '          printf "-arch sm_"$1; '
_cuda_replace += '          for (i=1;i<=NF; i++){printf(" -gencode=arch=compute_%s,code=sm_%s",$i,$i) } '
_cuda_replace += '   }\''
_cudaarch_sed = 'sed -i "s/-arch sm_35/`' + _cuda_replace + '`/g" machines/rhlinux && '

# modify all qmake pro files in order to pass CFLAGS
_qmake_pass_cflags = "find -name *.pro -exec sed -i -e '$aQMAKE_CXXFLAGS += $$(CFLAGS)' {} \\; && "

# exports required for configure and build
_exports = 'export QTDIR=$EBROOTQT5 && '
_exports += 'export HDF5_DIR=$EBROOTHDF5 && '
_exports += 'export QMAKESPEC=$EBROOTQT5/mkspecs/`qmake -query QMAKE_SPEC` && '
_exports += 'export CUDA_DIR=$CUDA_HOME && '
#  readw_or_imod.f and others with gfortran10: 
#     Error: Type mismatch between actual argument at (1) and actual argument at (2) (INTEGER(4)/INTEGER(2))
#     => set -fallow-argument-mismatch. Runs through without this option with GCC 8.3.0.
_exports += 'export CFLAGS="$CFLAGS -fallow-argument-mismatch" && '  # required for gfortran10

preconfigopts = _exports
preconfigopts += _cudaarch_sed
preconfigopts += _qmake_pass_cflags
preconfigopts += 'sed -i "s|#!/bin/csh -f|#!/usr/bin/env tcsh|g;s|#! /bin/csh -f|#!/usr/bin/env tcsh|g" '
preconfigopts += ' %(builddir)s/IMOD/{manpages/convert,setup,setup2,machines/rhlinux,packMacApps} &&'

# IMOD's configure script is named setup and does not know the parameter --prefix, but -i. 
# CFLAGs are passed with -flags.
configure_cmd = './setup '
configure_cmd += '-c gnu '  # htf it finds icc?
configure_cmd += '-flags "$CFLAGS" '    # inject CFLAGS
configure_cmd += '-i %(installdir)s '  # set installdir
configure_cmd += ' #'  # avoid passing unknown arg --prefix

prebuildopts = _exports

# create some missing directories required for installation process:
preinstallopts = 'mkdir %(installdir)s/{man/cat1,bin,autodoc,SystemTemplate,lib/imodplug,com,html,Plugins} -p && '

# patch hardcoded /usr/bin/python to use Python included as dependency
preinstallopts += "find pysrc -name '*.py' | xargs sed -i 's@^#!/usr/bin/python@#!/usr/bin/env python@g' && "
preinstallopts += "ls manpages/{csvtohtml,adocdefaults} | xargs sed -i 's@^#!.*/python -u@#!/usr/bin/env python@g' && "
preinstallopts += "xargs sed -i 's@^#!.*/python -u@#!/usr/bin/env python@g' html/makeqhp && "

modextravars = {
    'IMOD_DIR': "%(installdir)s",
    'IMOD_PLUGIN_DIR': '%(installdir)s/lib/imodplug',
    'IMOD_JAVADIR': '$JAVA_HOME',
    'FOR_DISABLE_STACK_TRACE': '1',
}
modloadmsg = 'Please set the environment variable $IMOD_CALIB_DIR if appropriate.'
sanity_check_paths = {
    'files': ['VERSION', 'bin/subm'],
    'dirs': ['bin', 'lib', 'com', 'autodoc', 'pylib', 'Plugins', 'man', 'SystemTemplate'],
}
sanity_check_commands = [('xftoxg', '-h')]
moduleclass = 'vis'
